function cluster = ClassifyFit(DATA, E, cnum)    xy = DATA.xy{cnum};    id = find(DATA.clst == cnum+1);    nid = find(DATA.clst ~= cnum+1 & DATA.clst > 0);cluster = E; %must always be a cluster, not a "boundary"cluster.dprime = AllV.CalcDprime(xy(id,1),xy(nid,1));cluster.hdip = HartigansDipTest(sort(xy(DATA.uid,1)));cluster.clst = DATA.clst;if ismember(cluster.shape,[1 2]) %cut with line    [a,b] = GMDip(xy(DATA.uid,:),DATA.energy(1,DATA.uid),'crit',cluster.crit,'label',DATA.idstr);    [dp,dpfits, dpdetails] = AllV.Fit2Gauss(cluster, xy(:,1),DATA);    dip = MyDip(xy(DATA.uid,1));    if ~isfield(cluster, 'r')        cluster.r = xy(DATA.uid,1);    endelse    if ~isfield(cluster, 'r')        cluster.r = AllV.CalcClusterDistance(cluster, xy);    end    [a,b] = GMDip(AllV.Rprime(cluster.r(DATA.uid,:)),DATA.energy(1,DATA.uid),'crit',1,'label',DATA.idstr);    [dp,dpfits, dpdetails] = AllV.Fit2Gauss(cluster, cluster.r,DATA);    dip = MyDip(cluster.r(DATA.uid));endcluster.mydip = dip.x(dip.dip);cluster.mydipsize = dip.dipsize;cluster.fitdprime = [dp dpdetails.fitpos dpdetails.dx dpdetails.minxpt];cluster.fitdpparams = cat(1,dpfits{1}.params, dpfits{2}.params);cluster.autodipsize = b.dipsize;cluster.dipsize = b.cdipsize;cluster.gmdprime = b.gmdprime;cluster.gmfit1d = b.G{b.best};x = AllV.FitGaussMeans(xy(DATA.uid,:),2,'clusterid',find(ismember(DATA.uid,id)));cluster.bmc = AllV.BimodalCoeff(cluster.r,1.5);a = AllV.FitGaussMeans(xy(DATA.uid,:),2);cluster.mahal = [a.mahal a.dprime];if isfield(cluster,'bestspace')    cluster.mahal(3) = cluster.bestspace(2);else    cluster.mahal(3) = 0;endif ismember(E.shape,[0 1]) && x.obj.Converged >= 0    fprintf('Separation %.2f (manual) %.2f (auto)\n',x.mahal,a.mahal);    cluster.mahal(3) = x.mahal;    cluster.gmfit2dman = x.obj;endcluster.gmfit2d = a.obj;if isfield(cluster,'gmdprime')    cluster.mahal(4) = cluster.gmdprime;elseif isfield(E,'gmdprime')    cluster.mahal(4) = E.gmdprime;elseif isfield(E,'gmfit1d') && isfield(E.gmfit1d,'mu')    cluster.mahal(4) = GMdprime(E.gmfit1d);else    cluster.mahal(4) = 0;endif DATA.watchplots    AllV.PlotHistogram(DATA, cluster);endcluster = AllV.PlotTriggerHist(DATA, cluster);cl.MeanSpike = AllV.PlotMeanSpike(DATA,'recalc');cluster.MeanSpike = cl.MeanSpike; cluster.quick = 0;         