function [Expt, matfile] = LoadExpt(DATA, ei)%[Expt, matfile] = AllV.LoadExpt(DATA, ei)%Load Expt from dir with one smr file per epxpt    aargs = {};    if DATA.usealltrials        aargs = {aargs{:} 'usealltrials'};    end        ei = floor(ei); %plain .mat files are not split just because FullV files are        if regexp(DATA.name,'Expt[0-9]*Spikes')            DATA.name = regexprep(DATA.name,'.mat$',''); %remove trailing .mat            [monk, a, xdir] = GetMonkeyName(DATA.name);            smrname = regexprep(DATA.name,'Expt([0-9]*)Spikes',[monk xdir]);        elseif regexp(DATA.name,'lem/M[0-9]*')            smrname = regexprep(DATA.name,'lem/M([0-9]*).*','$0/lemM$1');            smrname = regexprep(smrname,'online/lemM([0-9]*).*','$0/lemM$1');        elseif regexp(DATA.name,'dae/M[0-9]*')            smrname = regexprep(DATA.name,'dae/M([0-9]*).*','$0/daeM$1');            smrname = regexprep(smrname,'online/lemM([0-9]*).*','$0/daeM$1');        else %for file moved to unusual directories            prefix = regexprep(DATA.name,'.*M([0-9]*).*','M$1'); %old way            [monk, b,prefix,d] = GetMonkeyName(DATA.name);            if isdir(DATA.name)%                smrname = [DATA.name '/' monk prefix '.' num2str(DATA.exptno) '.mat'];                smrname = [DATA.name '/' monk prefix ]; %  exptno.mat added below            else                smrname = regexprep(DATA.name,'/M([0-9]*).*',['$0/' monk 'M$1']);            end        end        exfile = [smrname '.' num2str(ei) 'idx.mat'];        matfile = [smrname '.' num2str(ei) '.mat'];                if exist(exfile,'file') || exist(matfile,'file') %either will do            ts = now;            if exist(exfile,'file')                fprintf('Loading %s (%s)\n',exfile,AllV.IDStr(DATA));                [Trials, Expts] = APlaySpkFile(exfile,'noerrs','nospikes', aargs{:});            else                fprintf('Loading %s (%s)\n',matfile,AllV.IDStr(DATA));                [Trials, Expts] = APlaySpkFile(matfile,'noerrs','nospikes', aargs{:});            end            mytoc(ts);            if isempty(Expts)                Expt = [];                return;            elseif length(Expts) > 1                fprintf('WARNING: %d Expts in %s\nTrials:',length(Expts),exfile);                for j = 1:length(Expts)                    nt(j) = length(Expts{j}.Trials);                end                fprintf([sprintf(' %d',nt) '\n']);                [a,b] = max(nt);                Expt = Expts{b};                if isfield(DATA,'toplevel') && DATA.interactive >= 0  && strncmp(DATA.DataType,'Grid',4)%don't setappdata. Causes susequent reads to think this is a Utah Style expt% and then they don'w load Expt.  ONly set app data if sure this is really% a Utah Expt                    DATA = AllV.mysetappdata(DATA,'Expts',Expts);                end            else            Expt = Expts{1};            end            if ~isfield(Expt.Header,'expname')                Expt.Header.expname = Expt2Name(Expt);            end                        Expt.Header.trialdur = sum([Expt.Trials.dur]);            Expt = FillTrials(Expt,'ed');            Expt = FillTrials(Expt,'st');            [a,b] = fileparts(Expt.Header.Name);            Expt.Header.title = [b '.' Expt.Header.expname];            Expt.Header.preperiod = DATA.preperiod * 10000;            Expt.Header.postperiod = DATA.postperiod * 10000;            mytoc(ts);            if ~isfield(Expt.Header,'ReadMethod')                Expt.Header.ReadMethod = -1;            end            fprintf('Expt%d: %s %d trials\n',ei,Expt.Header.title,length(Expt.Trials));        else            onematfile = [smrname '.mat'];            if exist(onematfile)                Expt = AllV.LoadExptA(DATA,onematfile, ei);            else                Expt = [];            end        end        