function guess = MinimiseEllipseDip(C, DATA)state.initialar = C.xyr(4)./C.xyr(3);state.aspectratio = C.aspectratio;state.rx = C.xyr(3);state.ry = C.xyr(4);state.angle = C.angle;state.cluster = DATA.currentcluster;guess(1:3) = C.xyr(1:3);guess(4) = C.angle;xs = -guess(3)*2:guess(3)/2:guess(3)*2;ys = -C.xyr(4)*2:C.xyr(4)/2:C.xyr(4)*2;rs = [C.xyr(3)/2 C.xyr(3) C.xyr(3) .* 2];for l = 1:length(rs)    guess(3) = rs(l);for j = 1:length(xs)    for k = 1:length(ys)        guess(1) = C.xyr(1)+xs(j);        guess(2) = C.xyr(2)+ys(k);        [dips(j,k,l) dipr(j,k,l)] = AllV.EllipseDip(guess, DATA, state);        endendend[a,b] = min(dips(:));[j,k,l] = ind2sub(size(dips),b);        guess(1) = C.xyr(1)+xs(j);        guess(2) = C.xyr(2)+ys(k);        guess(3) = rs(l);   [a,b,c] =     AllV.EllipseDip(guess, DATA, state);        guess(3) = rs(l).*dipr(j,k);   [a,b,c] =     AllV.EllipseDip(guess, DATA, state);        