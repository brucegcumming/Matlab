function PlotProbeSpikes(DATA, Vall, p, spklist,npts,offset)    j = 1;    xoff = offset(1);    yoff = offset(2);  hold on;  if isempty(spklist)      for j = 1:size(DATA.handles,2)          if ishandle(DATA.handles(p,j)) & double(DATA.handles(p,j)) > 0              set(DATA.handles(p,j),'Ydata',[0 0]+yoff,'Xdata',[-npts(2) npts(1)-npts(2)]+xoff);          end      end      return;  endDataClusters = AllV.mygetappdata(DATA,'Clusters');  x = [1:npts(1)]-npts(2);  X = repmat(x,length(spklist),1)';  id = repmat(spklist,npts(1),1) + X;  nV = Vall.V(p,id);  nV(npts(1)+1:npts(1):end) = NaN;  X(end,:) = NaN;  if ishandle(DATA.handles(p,1))  set(DATA.handles(p,1),'Ydata',nV(:)+yoff,'Xdata',X(:)+xoff);  else      DATA.handles(p,1) = plot(X(:)+xoff,nV(:)+yoff,'color',DATA.colors{1});  end  tid = find(ismember(Vall.t(spklist),DataClusters{p}.times));  if length(tid)      X = repmat(x,length(tid),1)';      id = repmat(spklist(tid),npts(1),1) + X;      nV = Vall.V(p,id);      nV(npts(1)+1:npts(1):end) = NaN;      X(end,:) = NaN;  end  if length(tid) &&  ishandle(DATA.handles(p,2))      set(DATA.handles(p,2),'Ydata',nV(:)+yoff,'Xdata',X(:)+xoff);  elseif ishandle(DATA.handles(p,2))      set(DATA.handles(p,2),'Ydata',[0 0]+yoff,'Xdata',[1 1]+xoff);  else      DATA.handles(p,2) = plot(X(:)+xoff,nV(:)+yoff,'color',DATA.colors{2});  end  for j = 1:length(DataClusters{p}.next)      if isfield(DataClusters{p}.next{j},'times')      tid = find(ismember(Vall.t(spklist),DataClusters{p}.next{j}.times));      else          tid = [];      end      if length(tid)          X = repmat(x,length(tid),1)';          id = repmat(spklist(tid),npts(1),1) + X;          nV = Vall.V(p,id);          nV(npts(1)+1:npts(1):end) = NaN;          X(end,:) = NaN;          if size(DATA.handles,2) < j+2 || ~ishandle(DATA.handles(p,j+2))              DATA.handles(p,j+2) = plot(X(:)+xoff,nV(:)+yoff,'color',DATA.colors{j+2});          else          set(DATA.handles(p,j+2),'Ydata',nV(:)+yoff,'Xdata',X(:)+xoff);          end      end  end