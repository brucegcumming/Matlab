 function sdx = PlotXYSequence(DATA, probe, varargin)    plottype = 1;    clst = [];    if length(varargin) && isnumeric(varargin{1})        clst = varargin{1};        j = 1;    else    j = 1;    end    while j <= length(varargin)        if strncmpi(varargin{j},'noplot',6)            plottype = 0;        end        j = j+1;    end        Clusters = AllV.mygetappdata(DATA,'Clusters');    if isstruct(probe)        C = probe;    elseif probe == 0         C = DATA.cluster;    else        DataClusters = AllV.mygetappdata(DATA,'Clusters');        C = DataClusters{probe};    end    if length(clst)        C.clst = clst;    end    if ~isfield(C,'clst')        C.clst = DATA.clst;    end    if ~isfield(C,'xy')        C.xy = DATA.xy{1};    end    nc = unique(C.clst(:))';    nt = length(DATA.Expt.Trials);    T = DATA.Expt.Trials;    if plottype > 0    F = AllV.SetFigure(DATA.tag.oldxy, DATA);    subplot(1,1,1);    set(F,'name','XY sequence');    hold off;    end%    need to use time or trial bins for this test, as rate changes     for j = nc        if isfield(C,'excludetrialids')         xcl = C.excludetrialids;        else            xcl = [];        end        id = find(C.clst == j);        if plottype == 1            plot(DATA.t(id),C.xy(id,1),'.','color',DATA.colors{j});            hold on;        end        smw = round(nt/10);        if smw > 10            smw = 10;        end        for k = 1:nt-smw            ts(k) = T(k).Start(1)./10000;            if sum(ismember([k:k+smw],xcl) == 0)            if diff(size(C.clst)) > 0                id  = find(C.clst == j & DATA.t.*10000 > T(k).Start(1) & DATA.t.*10000 < T(k+smw).End(end));            else                id  = find(C.clst' == j & DATA.t.*10000 > T(k).Start(1) & DATA.t.*10000 < T(k+smw).End(end));            end            sds(k) = std(C.xy(id,1));            sms(k) = mean(C.xy(id,1));            else                sds(k) = NaN;                sms(k) = NaN;            end        end        sid = find(~isnan(sds));        sds = sds(sid);        sms = sms(sid);        ssds(j) = std(sds);        msds(j) = mean(sds);        sdx(j) = std(sds)./mean(sds);        mdx(j) = std(sms)./mean(sms);    endif plottype > 0    yl = get(gca,'ylim');    if yl(2) > 0        plot(ts(sid),sds .*yl(2)./max(sds),'ms');    else        plot(ts(sid),sds .*yl(1)./max(sds),'ms');    end    plot(ts(sid),sms,'r-');    if C.shape ~= 0        plot([DATA.t(1) DATA.t(end)],[C.crit C.crit],'r-');    end%    MarkTrialStarts(DATA.Expt,0,xcl);    title(sprintf('SDindex %.2f (%.2f/%.2f) CV %.2f',sdx(end),ssds(end),msds(end),mdx(end)));end