function [dip, details] = oldFindDip(values, energy, varargin)evalcrit = [];plottype = 0;domix = 0;j = 1;while j <= length(varargin)    if strncmpi(varargin{j},'eval',4)        j = j+1;        evalcrit = varargin{j};    elseif strncmpi(varargin{j},'gmix',4)        domix = 1;    elseif strncmpi(varargin{j},'plot',4)        plottype = 1;        j = j+1;        tag = varargin{j};    end    j = j+1;endif diff(size(values)) > 0    v = sort(values');else    v = sort(values);endx = diff(v);w = 10;if length(v) < 500first = 50;stpt=50;smsd = 20;elsefirst = 100;stpt = 150;smsd = 40;endxs = smooth(x,smsd,'gauss');[a,b] = min(xs);id = [];c = prctile(xs,90).*10;while isempty(id)id = find(xs(1:b) > c);c = c/2;end%first = id(end);if domix    G = gmdistribution.fit(values,2,'Options',statset('MaxIter',1000)); %2 Gaussians, 1 dimension    details.gmdprime = abs(diff(G.mu))./sqrt(mean(G.Sigma));    x = linspace(min(v), max(v),500);    y = pdf(G, x');    details.gxy(:,1) = x;    y = pdf('norm',x,G.mu(1), sqrt(G.Sigma(1))) .* G.PComponents(1);    details.gxy(:,2) = y;    z = pdf('norm',x,G.mu(2), sqrt(G.Sigma(2))) .* G.PComponents(2);%find the dip in the fitted sum between teh two means    gid = find(x > min(G.mu) & x < max(G.mu));    if isempty(gid)        dip(6) = mean(G.mu);    else        [aa, peak] = min(z(gid)+y(gid));        dip(6) = x(peak+gid(1)-1);    end    peak = find(diff(sign(z-y)) ~= 0);    [aa,bb] = max(z(peak)+y(peak));    details.gxy(:,3) = z;    details.gmfit = G;    if isempty(bb)        dip(5) = 0;    else    dip(5) = x(peak(bb));    endendc = prctile(xs,90).*10;id = find(xs(b:end) > c);while isempty(id)    c = c/2;    id = find(xs(b:end) > c);end    last = id(1)+b-1;last = length(v)-100;id = convhull(v([first:last]+1),xs(first:last));a = find(diff(id) < 0);iid = unique([1; id(a(end)+1:end)+first; id(2:a(1))+first-1; length(xs)]);hull = interp1(v(iid+1),xs(iid),v(2:end));dx = xs - smooth(xs,400);dx = smooth(xs-hull,100);dx = xs-hull;sdx = smooth(dx,100);    [c,d] = min(dx(b:end));    d = length(sdx)-stpt;    if b < d    [a,dipid] = max(sdx(b:d));    j = b +dipid-1;    else        j = d;    end    dip(1) = v(j+1);    dipsize(1) = (xs(j)-hull(j))./hull(j);    adipsize(1) = xs(j)-hull(j);    dipid(1) = j;    if nargout > 1        details.dprime(1) = AllV.CalcDprime(v(1:j),v(j+1:end));    end    [a,dipid] = max(dx(b:d));    j = dipid+b-1;    dip(2) = v(j+1);    dipsize(2) = (xs(j)-hull(j))./hull(j);    adipsize(2) = xs(j)-hull(j);    dipid(2) = j;    if nargout > 1        details.dprime(2) = AllV.CalcDprime(v(1:j),v(j+1:end));    end    [c,d] = min(dx(1:b));    d = stpt;    [a,dipid] = max(sdx(d:b));    j = d+dipid-1;    dip(3) = v(j+1);    dipsize(3) = (xs(j)-hull(j))./hull(j);    adipsize(3) = xs(j)-hull(j);    dipid(3) = j;    if nargout > 1        details.dprime(3) = AllV.CalcDprime(v(1:j),v(j+1:end));    end    [a,dipid] = max(dx(d:b));    j = d+dipid-1;    dip(4) = v(j+1);    dipid(4) = j;    dipsize(4) = (xs(j)-hull(j))./hull(j);    adipsize(4) = xs(j)-hull(j);    if nargout > 1        details.dprime(4) = AllV.CalcDprime(v(1:j),v(j+1:end));    end    e(1) = mean(energy(find(values > mean(dip([1 2])))));    e(2) = mean(energy(find(values < mean(dip([3 4])))));    sgn = 0;    if mean(dipsize([3 4])) > 2 * mean(dipsize([1 2])) && mean(adipsize([3 4])) > mean(adipsize([1 2]))        sgn = -1;    elseif mean(dipsize([1 2])) > 2 * mean(dipsize([3 4])) && mean(adipsize([1 2])) > mean(adipsize([3 4]))        sgn = 1;    end    if sgn == 0 && e(2) > 2 * e(1)        sgn = -1;    elseif sgn == 0 && e(1) > 2 * e(2)        sgn = 1;    end    if sgn == 0 && mean(values) < 0 && skewness(values) < 0        sgn = -1;    end            if sgn < 0        dip(1:4) = dip([3 4 1 2]);        dipsize = dipsize([3 4 1 2]);        if nargout > 1        details.dprime = details.dprime([3 4 1 2]);        end        details.sign = -1;    else        details.sign = 1;    endif plottype == 1    f = gcf;    AllV.SetFigure(tag);    hold off;    plot(v(2:end),xs);    hold on;    plot(v(2:end),sdx,'g');    plot(v(2:end),hull,'r');    plot([dip(1) dip(1)],get(gca,'ylim'),'g');    plot([dip(2) dip(2)],get(gca,'ylim'),'g');    plot([dip(3) dip(3)],get(gca,'ylim'));    plot([dip(4) dip(4)],get(gca,'ylim'));    if domix & ~isnan(dip(5))    plot([dip(5) dip(5)],get(gca,'ylim'),'r');    end    AllV.SetFigure(f);enddetails.dipsize = dipsize;for j = 1:length(evalcrit)    details.crits(j) = evalcrit(j);    [a,id] = min(abs(evalcrit(j) - v(2:end)));    details.cdipsize(j) = (xs(id)-hull(id))./hull(id);end