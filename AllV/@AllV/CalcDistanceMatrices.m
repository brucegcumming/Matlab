function M = CalcDistanceMatrices(DATA, nc, varargin)%overfit with GMs, and calculate distance Matrix    p= DATA.probe(1);    AllVoltages = AllV.mygetappdata(DATA,'AllVoltages');    uid = DATA.uid;       ntr = 1;    M.errs = {};    M.errstates = {};    nerr = 0;    try    objs{1} = gmdistribution.fit(DATA.pcs(uid,DATA.pcspace),nc,'Options',statset('MaxIter',1000));    catch ME        objs{1} = [];        M = AllV.AddErr(M,'GMFit ERROR!!!A E%dP%d uid %d-%d of %d, clusters %d (%s)\n',DATA.exptno,p,min(uid),max(uid),size(AllVoltages,3),nc,ME.message);        nerr = length(M.errs);        M.errstates{nerr} = ME;    end    try        objs{2} = gmdistribution.fit(squeeze(AllVoltages(p,DATA.vspace,uid))',nc,'Options',statset('MaxIter',1000));    catch ME        objs{2} = [];        M = AllV.AddErr(M,'GMFit ERROR!!!B E%dP%d uid %d-%d of %d, clusters %d (%s)\n',DATA.exptno,p,min(uid),max(uid),size(AllVoltages,3),nc,ME.message);        nerr = length(M.errs);        fprintf('AllVoltages %s, Vpcs %s p%d',sprintf('%d ',size(AllVoltages)),sprintf('%d ',DATA.vspace),p);        M.errstates{nerr} = ME;    end    DATA = AllV.SetTemplateData(DATA,1, 'force');    try    objs{3} = gmdistribution.fit(DATA.TemplateScores(uid,DATA.tmplspace(1,:)),nc,'Options',statset('MaxIter',1000));    catch ME        M = AllV.AddErr(M,'Error Fitting  Gms C (%s)\n',ME.message);        nerr = length(M.errs);        M.errstates{nerr} = ME;    end    nf = 0;    goodfit = zeros(1,3); %in fits all crash, length(objs) is 0    for j = 1:length(objs)        if ~isempty(objs{j})            nf = nf +1;            M.converged(nf) = objs{j}.Converged;            [a,b] = AllV.gmdprime(objs{j});            M.D(:,:,nf) = b.d;            goodfit(j) = 1;        end    end    best = find(goodfit);    if ~isempty(best)        best = best(1);        [a,b(1)] = AllV.gmdprime(objs{best});        f = fieldnames(objs{best});        if isprop(objs{1},'mu')            M.cid = cluster(objs{best}, DATA.pcs(uid,DATA.pcspace));            M.gmfit = objs{best}; %save the fit        else            M.cid = zeros(size(DATA.uid));        end    end    [a, M.isacell] = AllV.isacell(DATA, DATA.exptno, p);    if isfield(DATA.cluster,'mahal')     M.mahal(1) = DATA.cluster.mahal(4);    end    for j = 1:length(DATA.cluster.next)        if isfield(DATA.cluster.next{j},'mahal')            M.mahal(j+1) = DATA.cluster.next{j}.mahal(4);        end        if isfield(DATA.cluster.next{j},'fitdprime')            M.fitdprime(j+1) = DATA.cluster.next{j}.fitdprime(1);        end    end    if isfield(DATA.cluster,'fitdprime')     M.fitdprime(1) = DATA.cluster.fitdprime(1);    end    