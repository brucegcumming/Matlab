 function cluster = PlotTriggerHist(DATA, cluster,varargin)        j = 1;        calcdropi = 1;        plotallcl = 0;        fitallcl = 0;        while j <= length(varargin)            if isfield(varargin{j}, 'quickest')                quickmode = varargin{j};                if quickmode.quick && quickmode.dropi == 0                    calcdropi = 0;                 end            elseif strncmpi(varargin{j},'fitall',5)                fitallcl = 1;            elseif strncmpi(varargin{j},'quick',5)                calcdropi = 0;            elseif strncmpi(varargin{j},'showall',6)                plotallcl = 1;            end            j = j+1;        end                  %If call this for differnt clusters, DATA.nid may not be right list if 0     nid = DATA.nid;     id = DATA.clid; else     id = find(DATA.clst == cluster.cluster+1);     nid = find(DATA.clst ~= cluster.cluster+1); end if fitallcl     cluster.cluster = 0;     cluster = AllV.PlotTriggerHist(DATA, cluster);     if isfield(cluster,'dropi')         cluster.hashdropi = cluster.dropi;     else         fprintf('%s:No dropindex for Cl 0\n',AllV.IDStr(DATA));     end     cluster.cluster = 1;     cluster = AllV.PlotTriggerHist(DATA, cluster);     for j = 1:length(cluster.next)         if ~isempty(cluster.next{j})             C = AllV.PlotTriggerHist(DATA, cluster.next{j});             cluster.next{j}.dropi = C.dropi;         end     end     return; end  if DATA.interactive >=0      AllV.SetFigure(DATA.tag.vhist, DATA);     subplot(1,1,1);     hold off; end t = find(DATA.spts == 0); if length(id) < 10     nbins(1) = 1;     cluster.dropi = [0 0 NaN 0];     cluster.trigsd = 0;     cluster.minspke = min(DATA.energy(1,DATA.clid));     cluster.minspkvar = min(DATA.spkvar(DATA.probe(1),DATA.clid)); elseif length(id) < 100     nbins(1) = 10; elseif length(id) < 5000     nbins(1) = round(length(id)./20); else     nbins(1) = 250; end if length(nid) < 10     nbins(2) = 1; elseif length(nid) < 100     nbins(2) = 10; elseif length(nid) < 5000     nbins(2) = round(length(nid)./20); else     nbins(2) = 250; end      if nbins(1) > 2 && ~isempty(id)%     V = AllVoltages(DATA.probe(1),t,id);     V = DATA.rV(id);     [a,b] = hist(V,nbins(1));     cluster.vhist = a;     cluster.vhistrange = minmax(b);     [c,d] = hist(DATA.rV(nid),nbins(2));     cmax = max(a);     if DATA.interactive >= 0         bar(b,a,1,'facecolor',DATA.colors{cluster.cluster+1},'edgecolor',DATA.colors{cluster.cluster+1});         hold on;         plot(d,c .*cmax./max(c),'color',[0.5 0.5 0.5]);     end     cluster.muvhist = c;     cluster.muvhistrange = minmax(d);     if DATA.Trigger(1) < 0         tid = find(b <= DATA.Trigger(1));         ntid = find(d <= DATA.Trigger(1));     else         tid = find(b >=DATA.Trigger(1));         ntid = find(d >= DATA.Trigger(1));     end     if calcdropi && length(tid) < 2         cluster.dropi = [0 0 0 0];         cluster = AllV.AddErr(cluster,'Too few events to estimate dropi');     elseif calcdropi                  gfit = FitGauss(b(tid),a(tid),'maxiter',500);         if nbins(2) > 1             ngfit = FitGauss(d(ntid),c(ntid),'maxiter',500);         else             ngfit.sd = 0;             ngfit.mean = d;         end         if length(tid) && DATA.interactive >= 0             hold on;             plot(b(tid),gfit.fitted,'k');         end         nclose = sum(abs(V-DATA.Trigger(1)) < std(V)/10);         cluster.dropi(1) = nclose./length(DATA.clid);         cluster.dropi(2) = abs(mean(V)-DATA.Trigger(1))./std(V);         if DATA.Trigger(1) < 0             cluster.dropi(3) = (DATA.Trigger(1)-gfit.mean)./gfit.sd;             cluster.dropi(4) = (DATA.Trigger(1)-ngfit.mean)./ngfit.sd;         else             cluster.dropi(3) = (gfit.mean-DATA.Trigger(1))./gfit.sd;             cluster.dropi(4) = (DATA.Trigger(1)-ngfit.mean)./ngfit.sd;         end         cluster.trigsd = abs(gfit.sd);     elseif ~isfield(cluster,'dropi')         cluster.dropi = [0 0 0 0];     end     ncut = length(id);     if plotallcl         cls = unique(DATA.clst);         for j = 2:length(cls)             id = find(DATA.clst == cls(j));              V = DATA.rV(id);              [a,b] = hist(V,nbins(1));              a = a.* cmax ./max(a);              plot(b,a,'color',DATA.colors{cls(j)});              if length(cls) > 2                  fprintf('Rate%d: %.2f  ',cls(j)-1,length(id)./DATA.duration);              end         end         if length(cls) > 2             fprintf('\n');         end     endif DATA.interactive >= 0    p = AllV.ProbeNumber(DATA);     title(sprintf('P%d/%d %d/%d (%.0f/%.0fHz) spikes drop %.3f,%.2f',p,DATA.currentcluster,...         ncut,ncut+length(nid),ncut/DATA.duration,...         (length(id)+length(nid))/DATA.duration,cluster.dropi(1),cluster.dropi(3)));     hold on;     plot([DATA.Trigger(1) DATA.Trigger(1)],get(gca,'ylim'),'r');end elseif nbins(2) > 1 && DATA.interactive >= 0    V = DATA.rV(nid);     [c,d] = hist(V,nbins(2));     hold off;     plot(d,c ,'color',[0.5 0.5 0.5]);     cluster.dropi = [0 0 0 0];     cluster = AllV.AddErr(cluster,'Too few events to estimate dropi');     title(sprintf('P%d/%d %d/%d (%.0f/%.0fHx) spikes drop %.3f,%.2f',AllV.ProbeNumber(DATA),DATA.currentcluster,...         length(id),length(id)+length(nid),length(id)/DATA.duration,...         (length(id)+length(nid))/DATA.duration,cluster.dropi(1),cluster.dropi(3)));     hold on;     plot([DATA.Trigger(1) DATA.Trigger(1)],get(gca,'ylim'),'r');      end