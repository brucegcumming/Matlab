function [distance, obj, xy, details] = TemplateSpace(DATA, varargin)    recalc = 0;    nc = 2;    ntr = 1;    j = 1;    while j <= length(varargin)        if strncmpi(varargin{j},'recalc',5)            recalc = 1;        end        j = j+1;    end    if isfield(DATA,'clid')  && ~isempty(DATA.clid)        idlist = ones(1,length(DATA.TemplateScores));        idlist(DATA.clid) = 2;    else        idlist = [];    end    if isfield(DATA.cluster,'space') && DATA.cluster.space(1) == 3        spaces(1,:) = DATA.cluster.space;        spaces(2,:) = [3 1 8];        spaces(3,:) = [3 2 10];        spaces(4,:) = [3 1 8];    elseif DATA.usestdtemplates        spaces(1,:) = [3 1 2];    else        spaces(1,:) = [3 1 8];        spaces(2,:) = [3 2 10];        spaces(3,:) = [3 1 8];    end    for j = 1:size(spaces,1);        [objs{j+1}, distance(j+1), a] = AllV.GMfit(DATA.TemplateScores(:,spaces(j,2:3)),nc,ntr,'idlist',idlist);    end    if DATA.usestdtemplates        nd = find(DATA.tmplspace(3,:) > 0);        [objs{1}, distance(1), a] = AllV.GMfit(DATA.TemplateScores(:,DATA.tmplspace(3,nd)),nc,ntr,'idlist',idlist);        btype = 7;    else        [objs{1}, distance(1), a] = AllV.GMfit(DATA.TemplateScores(:,DATA.tmplspace(1,:)),nc,ntr,'idlist',idlist);        btype = 4;    end%        objs{5} = gmdistribution.fit(DATA.TemplateScores(:,DATA.tmplspace(1,:)),3,'Options',statset('MaxIter',1000));        details.Converged(1) = objs{1}.Converged;        if mean(a.fail) == 1            distance(1) = 0;            C.sign = 0;        elseif ~isfield(DATA,'clid') || isempty(DATA.clid) || recalc            xy = AllV.ProjectND(DATA, btype, objs{1});            %        [cluster.crit, details] = FindDip(xy(:,1),DATA.energy(1,:));            [C.crit, details] = GMDip(xy,DATA.energy(1,:),'label',DATA.idstr);            details.usegmcluster = 0;            C.sign = details.sign;            if details.sign >= 0                DATA.clid = find(xy(:,1) > C.crit(1));                DATA.nid = find(xy(:,1) <= C.crit(1));            else                DATA.clid = find(xy(:,1) < C.crit(1));                DATA.nid = find(xy(:,1) >= C.crit(1));            end            clst(DATA.clid) = 2;            clst(DATA.nid) = 1;            AllV.SetFigure(DATA.tag.tmplscore, DATA);            AllV.PlotXY(xy,clst);            set(gca,'UserData',[NaN 6 btype]);        else            C.sign = 0;        end        obj = objs{1};        details.Gs = objs;        [a,b] = max(distance);        if distance(b) > distance(1)            [C.crit, details] = GMDip(DATA.TemplateScores(:,spaces(b-1,2:3)),DATA.energy(1,:),'label',DATA.idstr);            details.bestcl = cluster(objs{b},DATA.TemplateScores(:,spaces(b-1,2:3)));            details.space = spaces(b-1,:);            xy = DATA.TemplateScores(:,spaces(b-1,2:3));        elseif DATA.usestdtemplates            details.bestcl = cluster(objs{1},DATA.TemplateScores(:,DATA.tmplspace(3,nd)));            details.space = [6 7];        else            details.bestcl = cluster(objs{1},DATA.TemplateScores(:,DATA.tmplspace(1,:)));            details.space = [6 4];        end        details.cluster = C;        if max(distance) > details.gmdprime * 1.5 %1D cut is very poor            details.usegmcluster = 1;        else            details.usegmcluster = 0;        end        if DATA.logfid > 2            fprintf(DATA.logfid,'P%d, T%d at %s\r\n',DATA.probe(1),DATA.cluster.probe,datestr(now));        end        