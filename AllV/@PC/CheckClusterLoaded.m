function [Clusters, DATA, expts] = CheckClusterLoaded(DATA,e, varargin)%[Clusters, DATA] = CheckClusterLoaded(DATA,e, varargin)% Load Cluster Data for expt e if not loaded yet%e is the index of the expt in DATA.exptid, not the true expt numnberautocl = 0;quickreload = 1;loadargs = {};j = 1;while j <= length(varargin)    if strncmpi(varargin{j},'auto',4)        autocl = 1;        quickreload = 0;        loadargs = {loadargs{:} 'auto'};    end    j = j+1;endexpts = e;if autocl    Clusters = getappdata(DATA.toplevel,'AutoClusters');    ClusterInfo = getappdata(DATA.toplevel,'AutoClusterInfo');    S = getappdata(DATA.toplevel, 'AutoSpikes');    gmvar = 'AutoFits';else    Clusters = getappdata(DATA.toplevel,'Clusters');    ClusterInfo = getappdata(DATA.toplevel,'ClusterInfo');    S = getappdata(DATA.toplevel, 'AllSpikes');    gmvar = 'GMFits';end    if isempty(Clusters)        Clusters = {};    end    E = getappdata(DATA.toplevel,'Expts');    if isempty(E)        E = {};    end%Only get GMdata if there are new Clusters. Getting/Freeing GM data is slow        GM = {};    newc = 0;    newe = 0;    newsp = 0;    if max(e) > length(DATA.exptid)%if don't have all the ClusterTimesFiles to match CellList, adjust      id  = find(ismember(DATA.exptid,DATA.CellDetails.exptids(e)));      eid = DATA.CellDetails.exptids(max(e));      if isempty(id) || max(id) > length(DATA.exptid)        acknowledge(sprintf('Expt %d (row %d) exceeds list in exptid',eid,e),DATA.toplevel);        return;      else          e = id;      end    endfor j = 1:length(e)        eid = DATA.exptid(e(j)); %expt number associated with this row    if e(j) > length(Clusters) || isempty(Clusters{e(j)})        need = 1;    else        need = PC.ClusterNeedsRefresh(Clusters{e(j)},ClusterInfo{e(j)});    end        quickreload = 1; %messes up autoclusterdetails if 0    if need == 2        need = 0;    end    if need > 0        if need == 2 %quick Cluster, so rebuild Cluster.clst            if autocl == 0%if only AutoClusterTimes existed, then quick save still creates ClusterTimes. So change name now                    ClusterInfo{e(j)}.loadname = strrep(ClusterInfo{e(j)}.loadname,'AutoClusterTimes','ClusterTimes');            end            fprintf('Loading modified %s\n',ClusterInfo{e(j)}.loadname);            a = load(ClusterInfo{e(j)}.loadname);            details = ClusterInfo{e(j)};            details.loadtime = now;                        C = Clusters{e(j)};            D = a.Clusters;            clfields = {'space' 'xyr' 'sign' 'crit' 'bestspace' 'gmdprime'};            for p = 1:length(D)                C{p} = CopyFields(C{p},D{p},clfields);                clst = ones(size(C{p}.clst));                [t,tid] = intersect(C{p}.times,D{p}.times);                clst(tid) = 2;                for c = 1:length(D{p}.next)                    if isfield(D{p}.next{c},'times')                        if length(C{p}.next) < c                            C{p}.next{c} = D{p}.next{c};                        else                            C{p}.next{c} = CopyFields(C{p}.next{c},D{p}.next{c},clfields);                        end                        [t,tid] = intersect(C{p}.times,D{p}.next{c}.times);                        clst(tid) = c+2;                    end                end                C{p}.clst = clst;            end            newc = 1;        else            if need > 1  %should have loaded something before                fprintf('Loading Cluster %s\n',ClusterInfo{e(j)}.loadname);            else                fprintf('Loading Cluster for Expt %d (row %d)\n',eid,e(j));            end            [C, FullV, details] = LoadCluster(DATA.name,eid,'rawxy',loadargs{:});            if isempty(C)                acknowledge(sprintf('No ClusterData for Expt %d',e(j)),DATA.toplevel);                expts(j) = 0;            end%Check Spikes. If they are loaded for this E,P, then they need reloading%since the cluster did.            sz = size(S);            if sz(1) >= e(j)                for p  = 1:length(C)                    needsp = 0;                    if sz(2) >= p && isfield(S{e(j),p},'values')                        needsp = 1;                    elseif isfield(C{p},'trigset') && ~isfield(S{e(j),p},'trigset')                        needsp = 1;                    end                    if needsp                        S =  PC.AddSpikes(DATA, S, e(j),p);                        newsp = newsp+1;                    end                end            end        end        if isempty(GM)            GM = getappdata(DATA.toplevel,gmvar);            if isempty(GM)                GM = {};            end        end                for k = 1:length(C)            C{k}.exptid = e(j);            if ~isfield(C{k},'bestspace')                C{k}.bestspace(1) = 0;                C{k}.bestspace(2) = NaN;            end            if ~isfield(C{k},'sign')                C{k}.sign = 0;            end            if ~isfield(C{k},'crit')                C{k}.crit = 0;            end            for cl = 1:length(C{k}.next)                if isfield(C{k}.next{cl},'space')                    C{k}.next{cl}.exptid = e(j);                end            end        end        ClusterInfo{e(j)} = details;        if autocl == 0            DATA = PC.ReadClustersIntoData(DATA,C,e(j));        end        [Clusters{e(j)},GM{e(j)}] = PC.CondenseCluster(C);        newc = 1;    end%%Expts is now a list of all expts, regardless of whehter there are%clusters, or ir there is a valid expt. So Expts{n} is always suffix n    if eid > length(E) || isempty(E{eid})        if exist(DATA.exptname)  %one expt file            [DATA, E] = PC.LoadExpts(DATA);                   else            [E{e(j)}, DATA] = PC.LoadExpt(DATA,eid);        end        newe = 1;    endend    if newe    E = PC.SetExptTimeOffset(E);    setappdata(DATA.toplevel,'Expts',E)endif newsp    setappdata(DATA.toplevel,'AllSpikes',S);endif newc    if autocl        setappdata(DATA.toplevel,'AutoClusters',Clusters)        setappdata(DATA.toplevel,'AutoClusterInfo',ClusterInfo)        %setappdata(DATA.toplevel,'AutoGMfits',GM)    else    setappdata(DATA.toplevel,'Clusters',Clusters)    setappdata(DATA.toplevel,'ClusterInfo',ClusterInfo)    end    setappdata(DATA.toplevel,gmvar,GM)endif newc || newe    set(DATA.toplevel','UserData',DATA);    DATA.modified = 1;end