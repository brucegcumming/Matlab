function res = CheckSpikeFiles(DATA, type)    Clusters = getappdata(DATA.toplevel,'Clusters');AllSpikes = getappdata(DATA.toplevel,'AllSpikes');res.prefix = DATA.name;nact = 1;if strcmp(type,'spkid')Im = zeros(size(AllSpikes));for j = 1:size(AllSpikes,1)    for k = 1:size(AllSpikes,2)        S = AllSpikes{j,k};        C = Clusters{j}{k};        a = length(C.clst);        b = length(S.times);        if b ~= a            fprintf('Ex %d(%.0f), Probe %d %d Spikes but Cluster has %d\n',j,C.exptno,k,b,a);            if C.auto == 1                res.acts(nact).args = {'reclassify' 'autocut' 'savespikes'};            else                res.acts(nact).args = {'reclassify' 'savespikes'};            end            res.acts(nact).exptid = j;            res.acts(nact).exptno = floor(C.exptno);            res.acts(nact).probes = k;            if rem(C.exptno,1) > 0            res.acts(nact).name = sprintf('Expt%.0faFullV.mat',C.exptno);            else            res.acts(nact).name = sprintf('Expt%.0fFullV.mat',C.exptno);            end                        nact = nact+1;            Im(j,k) = 1;        end                endendPC.SetFigure(DATA,DATA.tag.clusters);imagesc(Im);elseif strcmp(type,'build')     for j = 1:length(Clusters)         for k = 1:length(Clusters{j})             C = Clusters{j}{k};             Clusters{j}{k}.probe = k;             need(j,k) = PC.CheckSpikeFile(DATA,Clusters{j}{k});             if need(j,k)                 if C.auto == 1                     res.acts(nact).args = {'reclassify' 'autocut' 'savespikes'};                 else                     res.acts(nact).args = {'reclassify' 'savespikes'};                 end                 res.acts(nact).exptid = j;                 res.acts(nact).exptno = floor(C.exptno);                 res.acts(nact).probes = k;                 if rem(C.exptno,1) > 0                     res.acts(nact).name = sprintf('Expt%.0faFullV.mat',C.exptno);                 else                     res.acts(nact).name = sprintf('Expt%.0fFullV.mat',C.exptno);                 end                 nact = nact+1;             end         end     end     fprintf('%d Files need building\n',sum(need(:)));end