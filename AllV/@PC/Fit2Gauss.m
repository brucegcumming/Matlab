function [dp, fits, details] = Fit2Gauss(C, r, varargin)    plottype = 0;    id = find(C.clst ==2);    nid = find(C.clst ==1);    if C.shape == 0 %ellipse        rx = C.xyr(3);        ry = C.xyr(4);        xys = xyrotate(C.xy(:,1)-C.xyr(1),C.xy(:,2)-C.xyr(2),C.angle);        r = sqrt(((xys(:,1))./rx).^2 + ((xys(:,2))./ry).^2);        fx = linspace(min(r),max(r),200);        [y,x] = hist(r,fx);        [a,b] = min(abs(fx-1));    elseif isfield(C,'crit')        xys = xyrotate(C.xy(:,1),C.xy(:,2),C.angle);        fx = linspace(min(xys(:,1)),max(xys(:,1)),200);        [a,b] = min(abs(fx-C.crit));    [y,x] = hist(xys(:,1),fx);    else        [a,b] = min(abs(fx-mean(fx))); %temporary        [y,x] = hist(C.xy(:,1),fx);    end    fits{1} = FitGauss(x(1:b),y(1:b));    fits{2} = FitGauss(x(b:end),y(b:end));     if isfield(fits{1},'params') && isfield(fits{2},'params')         details.fitpos = [fits{1}.params(1) < fx(b) fits{2}.params(1) > fx(b)];         dp = abs((fits{1}.params(1)-fits{2}.params(1))./sqrt((fits{1}.params(2).^2+fits{2}.params(2).^2)/2));         details.diff = abs((fits{1}.params(1)-fits{2}.params(1)));         details.sd = sqrt((fits{1}.params(2).^2+fits{2}.params(2).^2)/2);         if plottype == 1             PC.SetFigure(DATA,DATA.tag.fitgauss);             hold off;             bar(x,y);             hold on;             bar(x(1:b),y(1:b),'r')             fya = fitGauss(fx, fits{1}.params, 'eval');             fyb = fitGauss(fx, fits{2}.params, 'eval');             plot(fx,fya,'r-','linewidth',2);             plot(fx,fyb,'b-','linewidth',2);             title(sprintf('Dprime from fits %.2f',dp));         end     else         dp = NaN;         details.fitpos = [0 0];         details.diff = NaN;         details.sd = NaN;     end    