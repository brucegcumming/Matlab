function [C, ok] = GetClusterInfo(C, cl, varargin)% [C, ok] = GetClusterInfo(C, cl)% [C, ok] = GetClusterInfo(C, e,p, cl, 'allexpt')% [C, ok] = GetClusterInfo(DATA, [e p])% [C, ok] = GetClusterInfo(DATA, [e p cl])getauto = 0;loadargs = {};eid = 0;j = 1;while j <= length(varargin)    if strncmpi(varargin{j},'allexpt',4)        eid = cl;        pid = varargin{1};        cl = varargin{2};    elseif strncmpi(varargin{j},'auto',4)        getauto = 1;        loadargs = {loadargs{:} 'auto'};    end    j = j+1;endif isfield(C,'currentpoint')    DATA = C;    Clusters = PC.CheckClusterLoaded(DATA, cl(1),loadargs{:});    C = Clusters{cl(1)}{floor(cl(2))};    if rem(cl(2),1) > 0        cl = 1+ round(rem(cl(2),1)*10);    elseif length(cl) > 2        cl = cl(3);    else        cl = DATA.currentcluster;    endendif eid %expect a Cell array of Cellarrays, don't force load    if length(C) < eid || isempty(C{eid})        ok = 0;        return;    elseif length(C{eid}) < pid || isempty(C{eid}{pid})        ok = 0;        return;    end    C = C{eid}{pid};end  ok = 1;  if cl > 1 && cl ~= C.cluster %if call with C.next{}, already correct      if ~isfield(C,'next')          ok = 0;      elseif length(C.next) > cl-1 && isfield(C.next{cl-1},'mahal')          C = C.next{cl-1};      elseif cl >= length(C.next)-1 || ~isfield(C.next{cl-1},'mahal')          ok = 0;      end  end  if ~isfield(C,'mahal')      ok = 0;  end  