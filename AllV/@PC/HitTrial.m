function HitTrial(data,b, cell)    DATA = GetDataFromFig(data);    Expts = getappdata(DATA.toplevel,'Expts');    f = gcf;    D = get(f,'UserData');    for j = 1:length(D.exptlist)        exptime(j) = Expts{D.exptlist(j)}.Header.timeoffset;        timeoffset(j) = Expts{D.exptlist(j)}.Header.timeoffset-D.timeadjust(j);    end    pos = get(gca,'currentpoint');    xl = get(gca,'xlim');    yl = get(gca,'ylim');    x = get(data,'xdata');    y = get(data,'ydata');    r = ((pos(1,1)-x)./diff(xl)).^2+((pos(1,2)-y)./diff(yl)).^2;    [a,b] = min(r);    pos = [x(b) y(b)];    id = find(D.expstarts <= pos(1));    e = id(end); %index in expstarts    eid = D.exptlist(id(end)); %real expt no    e = find(DATA.exptid ==eid);    e = e(1); %index in current;y loaded Clusters    D.currentexpt = e;    start = (pos(1)-timeoffset(id(end))).*10000;    [a, id] = min(abs(start-[Expts{eid}.Trials.TrialStart]));     T = Expts{eid}.Trials(id);    L = squeeze(DATA.CellList(e,:,:));    [probe,cl] = find(L == cell);    if sum(DATA.currentpoint == [e probe]) < 2 %Changed Expt/probe        newpoint = 1;    else        newpoint = 0;    end    DATA = PC.ClearSelections(DATA, 0, [e probe]);    DATA.currentcellcluster = cl;    DATA.currentcluster = cl; %so xy display is right    DATA.currentcell = cell;    set(DATA.toplevel,'UserData',DATA);    bt = strmatch(get(gcf,'SelectionType'),{'normal' 'alternate'  'extend'  'open'});    if bt == 3 %shift        id = DATA.currenttrial:id;    end    t = title(sprintf('Expt%d %s Cell %d P%d',eid,DATA.expnames{e},cell,probe),'color',get(data,'color'));    if isfield(D,'clusterstring') & ishandle(D.clusterstring)        delete(D.clusterstring);    end    D.clusterstring = PC.AddClusterString(DATA, t, cl);    if newpoint        PC.PlotCellList(DATA);        DATA = PC.ConditionalPlotXY(DATA, [], 0);    end    Expt = PC.PlotExptCounts(DATA, eid, probe, cl);    figure(f);    set(f,'UserData',D);    PC.ShowData(DATA);    fprintf('TrialHit %.1f,%.1f Ex%dP%dCl%d  Trial %d, id %d %d Spikes\n',pos(1),pos(2),eid,probe,cl,T.Trial,T.id,T.count);%spool spikes after show data so that quickspks does not overdraw        [a, h] = PC.SpoolSpikes(DATA,DATA.currentpoint,'ids',id);    PC.AddLineContextMenu(DATA, h, eid, probe);        