function DATA = LoadAll(a,b, type, varargin)    useman = 1;    loadexpts = 1;    AllExpts = {};    DATA = GetDataFromFig(a);    msgmode = 0;    expts = [];    exargs = {};    ClusterInfo = {};    AutoClusterInfo = {};        j = 1;    while j <= length(varargin)        if strncmpi(varargin{j},'expts',5)            j = j+1;            expts = varargin{j};        elseif strncmpi(varargin{j},'nowarn',5)            msgmode = 2;        elseif strncmpi(varargin{j},'usealltrials',7)            exargs = {exargs{:} varargin{j}};        end        j = j+1;    end                if isfield(DATA,'toplevel')    Clusters = getappdata(DATA.toplevel,'Clusters');    if isempty(Clusters)        Clusters = {};    end    end    if strcmp(b,'auto')        useman = 0;    end    np = 0;    ManExpt = [];    NewExpt = [];    AutoExpt = [];    FullVData = {};    bid = strmatch('Copy of',DATA.strings);    id = setdiff(1:length(DATA.strings),bid);    DATA.strings = DATA.strings(id);        for j = 1:length(DATA.strings)        if regexp(DATA.strings{j},'Expt[0-9]*a')            offset = 0.1;        else            offset = 0;        end        if strfind(DATA.strings{j},'AutoClusterTimes.mat')            k = sscanf(DATA.strings{j},'Expt%d');            AutoExpt(j) = k+offset;            ManExpt(j) = 0;        elseif strfind(DATA.strings{j},'NewClusterTimes.mat')            k = sscanf(DATA.strings{j},'Expt%d');            NewExpt(j) = k+offset;        elseif useman && strfind(DATA.strings{j},'ClusterTimes.mat')            k = sscanf(DATA.strings{j},'Expt%d');            ManExpt(j) = k+offset;            AutoExpt(j) = 0;        end    end        outname = [DATA.name '/ExptList.mat'];    if exist(outname,'file')        Ex = load(outname);        if isfield(Ex.ExptList,'usealltrials') && Ex.ExptList.usealltrials > 0            fprintf('Setting usealltrials\n');            DATA.usealltrials = 1;        end    end    %need to think about cases where there was just the autocut and a     %manual cut is created    if strcmp(type,'ifnew') %Already set        AllSpikes = getappdata(DATA.toplevel,'AllSpikes');        GMfits = getappdata(DATA.toplevel,'GMfits');        ClusterInfo = getappdata(DATA.toplevel,'ClusterInfo');        if isempty(GMfits)            GMfits = {};        end                        d = dir(DATA.name);        mid = [];        for j  = 1:length(d)            if strfind(d(j).name,'AutoClusterTimes.mat')            elseif strfind(d(j).name,'ClusterTimes.mat') & isempty(strfind(d(j).name,'OldClusterTimes.mat'))                id = strmatch(d(j).name,DATA.strings);                if isempty(id) || d(j).datenum > DATA.lastcheck%new file                    if length(id) == 1                        DATA.strings{id} = d(j).name;                        AutoClusters{id} = Clusters{id};                    else                        id = length(DATA.strings)+1;                    end                    exptno = sscanf(d(j).name,'Expt%d');                    eid = find(DATA.exptid == floor(exptno));                                        fprintf('Loading %s (expt %d)\n',d(j).name, eid(1));                    [C, FullV, details] = LoadCluster(DATA.name, exptno,'rawxy');                    ClusterInfo{eid(1)}.loadname = details.loadname;                    ClusterInfo{eid(1)}.loadtime = details.loadtime;                    for c = 1:length(C)                        if size(AllSpikes,1) >= eid(1) && size(AllSpikes,2) >= c && ~isempty(AllSpikes{eid(1),c})                            if C{c}.savetime(1) > AllSpikes{eid(1),c}.Header.ctime %spikes are out of date                                AllSpikes{eid(1),c} = [];                            end                        end                    end                    [Clusters{eid(1)}, GMfits{eid(1)}] = PC.CondenseCluster(C);                end            end        end        cid = 1:length(DATA.strings);        setappdata(DATA.toplevel,'AllSpikes',AllSpikes);        setappdata(DATA.toplevel,'Clusters',Clusters);        setappdata(DATA.toplevel,'ClusterInfo',ClusterInfo);        setappdata(DATA.toplevel,'GMfits',GMfits);        loadexpts = 0;    elseif useman == 0        DATA.strings = DATA.strings(find(AutoExpt));        cid = 1:length(DATA.strings);        mid = [];    elseif sum(ManExpt)        %cid find expts where AutoExpt is 0 (= ManExpt set), or AutoExpt is        %not in ManExpt;        %so cid is the list of elements which define the main cluster        cid = find(~ismember(AutoExpt,unique(ManExpt(ManExpt > 0))));        cid = setdiff(cid, find(NewExpt > 0));        if ~isempty(expts)            [gex, cid] = intersect(ManExpt(cid),expts);            cid = find(ismember(ManExpt,gex));        end                mid = find(ManExpt > 0);    else        cid = 1:length(AutoExpt);        mid = [];    end        DATA.lastcheck = now;    reloaded = [];    ts = now;    AllExpts = {};    DATA.DataType = 'Default';    DATA.idsorted = 0;    allexptname = strrep(DATA.exptname,'.mat','Expts.mat');    if loadexpts > 0 && (exist(DATA.exptname,'file') || exist(allexptname))        [DATA, AllExpts] = PC.LoadExpts(DATA,exargs{:});    else        AllExpts = getappdata(DATA.toplevel,'Expts');    end    if strncmp(DATA.DataType,'Grid', 4)        DATA.nprobeplot = 0; %Don't plot adjoining probes        DATA.nprobespool = 0; %Don't plot adjoining probes        DATA.probesperfile = 1;    end    if isempty(cid) %no clustertimes data yet        DATA = PC.AddError(DATA,'No ClusterTimes Files in %s (Use ''loadauto'' to get AutoClusterTimes)',DATA.datadir);        return;    end    monk = GetMonkeyName(DATA.name);    AutoClusters = {};    haveauto = AutoExpt(AutoExpt > 0);    for j = 1:length(cid)        is = cid(j); %index in string array        if ismember(is,mid)            eid = ManExpt(is);        else            eid = AutoExpt(is);        end        if strfind(DATA.strings{is},'Times.mat') && isempty(strfind(DATA.strings{is},'NewClusterTimes'))            d = dir([DATA.name '/' DATA.strings{is}]);            if d.datenum > DATA.dates(is) || strcmp(type,'force')                DATA.dates(j) = d.datenum;                if ismember(eid,haveauto) %is an Auto Expt File                    if ~ismember(is,mid) || DATA.loadautoclusters                        if ~ismember(is,mid)                            autocl = 1; %autocluster is all we have                        else                            autocl = 0;                        end                        autoname = [DATA.name '/' strrep(DATA.strings{is},'Cluster','AutoCluster')];%in case there is an autoclsuter fiel but no cluster file                                                autoname = strrep(autoname,'AutoAutoCluster','AutoCluster');                        %fprintf('Loading %s\n',autoname);                        %[AutoClusters{j}, autodetails] = PC.LoadCluster(autoname,'getxy');                        [AutoClusters{j}, ~, autodetails] = LoadCluster(autoname,'rawxy','autoonly');                        autocl = 1;                        AutoClusters{j} = FixCluster(AutoClusters{j});                        AutoClusterInfo{j} = autodetails;                    else                        AutoClusters{j} = {};                        autocl = 0;                        AutoClusterInfo{j} = [];                    end                else                        AutoClusters{j} = {};                        autocl = 0;                        AutoClusterInfo{j} = [];                end                 if strcmp(type,'ifnew') %Only Change modified Clusters, so hat don't lose bits from AutoClusters                    details.exptno = Clusters{j}{1}.exptno;                elseif ismember(is,mid)                    fprintf('Loading %s\n',DATA.strings{is});%                    [Clusters{j}, details] = PC.LoadClusters([DATA.name '/' DATA.strings{is}]);                    [Clusters{j}, FullVInfo, details] = LoadCluster([DATA.name '/' DATA.strings{is}],'rawxy');                    if isfield(FullVInfo,'blklen')                        FullVData{j} = FullVInfo;                    else                        fprintf('No FullV Data for %s\n',DATA.strings{is});                    end                end                if length(Clusters) < j                    Clusters{j} = AutoClusters{j};                    details = autodetails;                end                Clusters{j} = FixCluster(Clusters{j});                if isfield(details,'loadtime') %Not using AutoClusters                    ClusterInfo{j} = details;                end                np = max([np length(Clusters{j})]);                if isfield(details,'exptno')                    exptno(j) = floor(details.exptno);                else %failed to load either auto or manaul clusters - despite listing them???                    cprintf('red','Cannot load Auto or manual Clusters for %s\n',DATA.strings{is});                end                for k = 1:length(Clusters{j})                    if ~isfield(Clusters{j}{k},'mahal')                        s = sprintf('Cluster %d Ex %d missing',k,j);                        if msgmode == 0                            s = questdlg(sprintf('Cluster %d Ex %d missing',k,j),'ClusterError','OK','Ignore Others','Ignore Others');                            if strcmp(s,'Ignore Others')                                msgmode = 1;                            end                        else                            if msgmode == 1                            errordlg(sprintf('Cluster %d Ex %d missing',k,j),'ClusterError','modal');                            end                            mycprintf('errors','Cluster %d Ex %d missing\n',k,exptno(j));                        end                        if size(AutoClusters,1) >= j && size(AutoClusters,2) >= k && ~isempty(AutoClusters{j}{k})                            Clusters{j}{k} = AutoClusters{j}{k};                            Clusters{j}{k}.auto = 1;                        else                            Clusters{j}{k}.auto = NaN;                        end                    elseif length(AutoClusters{j}) >= k && AutoClusters{j}{k}.savetime(1) > Clusters{j}{k}.savetime(1) && Clusters{j}{k}.auto == 1                        Clusters{j}{k} = AutoClusters{j}{k};                    end                    if autocl                        Clusters{j}{k}.auto = 1;                    end                    if length(AutoClusters{j}) < k                         A = [];                    else                        A = AutoClusters{j}{k};                    end                                            if isfield(Clusters{j}{k},'nspks')  %absent if bad probe/no cut                    if k >1 && length(Clusters{j}{k}.probe) ==1 && Clusters{j}{k}.probe < k                         Clusters{j}{k}.probe = k;                    end                    if ~isfield(Clusters{j}{k},'clst')                        DATA = PC.AddError(DATA,'Missing clst for %d,%d',exptno(j),k);                    end                    if ~isfield(Clusters{j}{k},'xy') && isfield(A,'xy')                        Clusters{j}{k}.xy = A.xy;                        if ~isfield(Clusters{j}{k},'clst')                             Clusters{j}{k}.clst = A.clst;                            Clusters{j}{k}.times = A.times;                        end                        %next test should not be true, but is sometimes. Eg                        %211 Ex13 P24.  clst should not be in Clusters.                        if length(Clusters{j}{k}.times) < length(Clusters{j}{k}.clst) && Clusters{j}{k}.auto == 1                            Clusters{j}{k}.clst = A.clst;                            Clusters{j}{k}.times = A.times;                        end                    end                    end                    if ~isfield(Clusters{j}{k},'exptno') || isempty(Clusters{j}{k}.exptno)                        Clusters{j}{k}.exptno = details.exptno;                    end                    if ~isfield(Clusters{j}{k},'auto')                        Clusters{j}{k}.auto = 1;                    end                    if ~isfield(Clusters{j}{k},'sign')                        Clusters{j}{k}.sign= 0;                    end                    if isfield(Clusters{j}{k},'t')%                        fprintf('E%.1fP%d has t\n',Clusters{j}{k}.exptno,k);                    end                    if ~isfield(Clusters{j}{k},'exptno')                        Clusters{j}{k}.exptno = exptno(j);                    end                end                smrname = regexprep(DATA.name,['/M([0-9]*)(.*)'],['$0/' monk 'M$1']);                exfile = [smrname '.' sprintf('%d',floor(exptno(j))) 'idx.mat'];                if loadexpts > 0 && (exptno(j) > length(AllExpts) || isempty(AllExpts{exptno(j)}))                    needex = 1;                else                    needex = 0;                end                if exist(exfile,'file') && needex > 0                    precount = 0;                    fprintf('Loading %s\n',exfile);                    [Trials, Expts] = APlaySpkFile(exfile,'noerrs',exargs{:});                    if isempty(Expts)                        Expt.Header.exptno = exptno(j);                    else                        Expt = FillTrials(Expts{1},'ed');                        Expt.Header.errs = Trials.errs;                        Expt.Header.exptno = exptno(j);                        DATA.electrodedepth(j) = mean([Expt.Trials.ed]);                    end                    if isfield(Trials.Comments,'Peninfo') & isfield(Trials.Comments.Peninfo,'probesep')                        DATA.probesep(j) = Trials.Comments.Peninfo.probesep;                    end                    if ~isfield(Expt,'Trials') %an idx file exists, but has no Expt. e.g. lemM232.50                        AllExpts{exptno(j)} = [];                    else                        DATA.trialids{j} = [Expt.Trials.id];                        DATA.exptid(j) = GetExptNumber(Expt);                        Expt.Header.expname = Expt2Name(Expt);                        AllExpts{exptno(j)} = Expt;                    end                elseif length(AllExpts) < j %fill in for missing expts                    DATA.trialids{j} = [];                    AllExpts{exptno(j)} = [];                end            else                DATA.electrodedepth(j) = NaN;                exptno(j) = Clusters{j}{1}.exptno;            end            end    end    fprintf('Load Time %.1f\n',mytoc(ts));           for j = 1:length(Clusters)        Clusters{j} = PC.FixClusters(Clusters{j});    end    DATA = LoadComments(DATA, DATA.name);   if strcmp(type,'ifnew')     && length(reloaded) && DATA.spikesloaded      [a,b] = find(reloaded);      PC.LoadSelectedSpikes(DATA,a,b);   end    [exptno, id] = sort(exptno);    DATA.strings = DATA.strings(cid(id));    DATA.dates = DATA.dates(id);    if ~isfield(DATA,'trialids') && isdir(DATA.name) %No expts loaded. ? Dir name but only one expt        [a,b] = fileparts(DATA.name);        monkey = GetMonkeyName(DATA.name);        matfile = [DATA.name '/' monkey b '.mat'];        if exist(matfile,'file')            DATA.exptname = matfile;            [DATA, AllExpts] = PC.LoadExpts(DATA);        end    end    DATA.exptid = floor(exptno);%DATA.trialids{e} is list for expt DATA.exptid(e)    if ~isempty(AllExpts)    DATA.trialids = {};    for j = 1:length(exptno)        if isfield(AllExpts{DATA.exptid(j)},'Trials')            DATA.trialids{j} = [AllExpts{DATA.exptid(j)}.Trials.id];        end    endend    if length(FullVData) == length(id)        FullVData = FullVData(id);    end    Clusters = Clusters(id);    ClusterInfo = ClusterInfo(id);%i floaded auto and manual, make them line up in case some Autos Are Missing        clear A;    aeid = CellToMat(AutoClusterInfo,'exptno');    for j = 1:length(ClusterInfo)        k = find(aeid == ClusterInfo{j}.exptno);        if ~isempty(k)            A{j} = AutoClusters{k};            AI{j} = AutoClusterInfo{k};        else             A{j} = {};            AI{j} = {};        end    end    AutoClusterInfo = AI;    AutoClusters = A;%AllExpts has all Expts, such that AllExpts{e}.exptno == e%May have empty elements;    %May be empty if this is a re-read     if ~strcmp(type,'ifnew')         if ~isempty(AllExpts)             clear Expts;         end     for j = 1:length(AllExpts)         if ~isempty(AllExpts{j})            Expts{AllExpts{j}.Header.exptno} = AllExpts{j};            goodexpt(j) = 1;         end     end     %goodexpt = find(goodexpt ==1);%     goodexpt = intersect(goodexpt,DATA.exptid); %Both Expt and ClusterTimes        %DATA.expnames{e} is name for expt DATA.exptid(e)        if length(goodexpt)                for j = 1:length(Expts)            if goodexpt(j)            DATA.expnames{j} = Expt2Name(Expts{j},'addsuff');            DATA.electrodedepth(j) = mean(GetEval(Expts{j},'ed'));            else                DATA.expnames{j} = '';                DATA.electrodedepth(j) = NaN;            end        end        setappdata(DATA.toplevel,'Expts',Expts);        ExptList.expnames = DATA.expnames;    else        ExptList.expnames = [];    end    ExptList.exptid = DATA.exptid;    ExptList.usealltrials = DATA.usealltrials;    if ~isempty(ExptList.expnames) %can happen with relist        outname = [DATA.name '/ExptList.mat'];        save(outname,'ExptList');    end    DATA.nprobes = np;    DATA.voffset = [1:DATA.nprobes] .*2;     end    set(DATA.toplevel,'UserData',DATA);    if DATA.loadautoclusters == 1 %keep both        setappdata(DATA.toplevel,'AutoClusters',AutoClusters);        setappdata(DATA.toplevel,'AutoClusterInfo',AutoClusterInfo);    end    [DATA, Clusters] = PC.ReadClusterResults(DATA, Clusters);    it = findobj(DATA.toplevel,'Tag','ExptList');    if length(it) == 1        set(it, 'string',num2str(DATA.exptid'));    end    set(DATA.toplevel,'UserData',DATA);    [Clusters, GMfits] = PC.CondenseClusters(Clusters);    setappdata(DATA.toplevel,'Clusters',Clusters);    setappdata(DATA.toplevel,'ClusterInfo',ClusterInfo);    if isappdata(DATA.toplevel,'GMfits')        X = getappdata(DATA.toplevel,'GMfits');        for j = 1:length(GMfits)            if ~isempty(GMfits{j})                X{j} = GMfits{j};            end        end        setappdata(DATA.toplevel,'GMfits',X);    else        setappdata(DATA.toplevel,'GMfits',GMfits);    end    setappdata(DATA.toplevel,'FullVData',FullVData);    DATA = PC.LoadCellFile(DATA);    DATA = PC.LoadExtra(DATA,0);    DATA = PC.CalcDistances(DATA);        it = findobj(DATA.toplevel,'Tag','ProbeList');    set(it,'string',num2str([1:DATA.nprobes]'))    fprintf('Done\n');    DATA = PC.CheckExpts(DATA,'read');    DATA = PC.CheckExpts(DATA,'errs');    if strcmp(type,'loadspikes')        fprintf('Loading Spikes...');        PC.LoadAllSpikes(DATA,'quiet');        DATA.spikesloaded = 1;        set(DATA.toplevel,'UserData',DATA);        fprintf('\n');    end    chk = PC.CheckClusters(DATA, {'fittimes' 'celldefined'});    if ~isempty(chk{2}.errs)        acknowledge('Some Cells refer to empty Clusters',DATA.toplevel);    end        