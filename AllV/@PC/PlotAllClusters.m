function DATA = PlotAllClusters(mn,b, varargin)    DATA = GetDataFromFig(mn);    Expts  = getappdata(DATA.toplevel,'Expts');        if ~ishandle(mn)        plottype = DATA.plot.alltype;        mn = findobj(DATA.toplevel,'Tag','plotalltype');    else        str = get(mn,'string');        a = get(mn,'value');        plottype = deblank(str(a,:));        DATA.plot.alltype = plottype;    end    Clusters = getappdata(DATA.toplevel,'Clusters');    PC.SetFigure(DATA,DATA.tag.clusters);    ts = [];    durs = [];    ns = [];    DATA.markh = NaN;    plotargs = PC.PlotArgs(DATA);    j = 1;    while j <= length(varargin)        if strncmpi(varargin{j},'includelist',10)            plotargs = {plotargs{:} varargin{j} varargin{j+1}};            j = j+1;        end        j = j+1;    end        if size(DATA.mahal,1) < size(DATA.CellList,1)        id = find(ismember(DATA.CellDetails.exptids,DATA.exptid));        CellList = DATA.CellList(id,:,:);    else        CellList = DATA.CellList;    end    if strcmp(plottype,'spkshapecorr')        PC.CompareShapes(DATA,1);        return;    elseif strcmp(plottype,'followcorr')        DATA = PC.TrackCluster(DATA,DATA.templateid(1),DATA.templateid(2));        return;    elseif strcmp(plottype,'spkshape')        PC.CompareShapes(DATA,'exptlines');        return;    elseif strcmp(plottype,'spkshapeim')        DATA = PC.CompareShapes(DATA,'exptimage');        set(DATA.toplevel,'UserData',DATA);        return;    elseif strcmp(plottype,'spkshape')        PC.CompareShapes(DATA,2);        return;    elseif strcmp(plottype,'spkpeaks')        subplot(1,1,1);        hold off;        if 1        imagesc(DATA.peakpos,'buttondownfcn',{@PC.HitImage, 1})        set(gcf, 'KeyPressFcn',{@PC.KeyPressed, 1});        set(gcf, 'KeyReleaseFcn',{@PC.KeyReleased, 1});        set(gca,'UserData',DATA.toplevel);        else        for j = 1:size(DATA.peakpos,2)            plot(1:size(DATA.peakpos,1),DATA.peakpos(:,j),'-');            hold on;        end        end        return;    elseif strcmp(plottype,'spksize')        PC.SpikeDistances(DATA,1);        return;    elseif strcmp(plottype,'probexcorr')        PC.CompareProbes(DATA, 1);        return;    elseif strcmp(plottype,'probeco')        PC.CompareProbes(DATA, 2);        return;        return;    elseif strcmp(plottype,'Exclusions')        for j = length(Clusters):-1:1;            for k = length(Clusters{j}):-1:1                C = Clusters{j}{k};                [xcl, details] = PC.FindExcludedTrials(DATA,j,k,1,C);                if length(xcl)                    X(j,k) = -details.fraction;                elseif isfield(C,'restricttimerange')                    exptdur = Expts{j}.Trials(end).End(end) - Expts{j}.Trials(1).Start(1);                    X(j,k) = diff(C.restricttimerange)./(exptdur./10000);                else                    X(j,k) = 0;                end            end        end        imagesc(X,'ButtondownFcn',{@PC.HitImage, 1});        return;    elseif strcmp(plottype,'SpkRate')        PC.SetFigure(DATA,DATA.tag.clusters);        for j = 1:size(DATA.nspks,1)            m(j,:) = 10000 .* DATA.nspks(j,:)./sum([Expts{j}.Trials.dur]);        end        imagesc(m,'buttondownfcn',{@PC.HitImage, 1});        colorbar;        return;    elseif strcmp(plottype,'EventRate')        PC.SetFigure(DATA,DATA.tag.clusters);        for j = 1:size(DATA.nevents,1)            m(j,:) = 10000 .* DATA.nevents(j,:)./sum([Expts{j}.Trials.dur]);        end        imagesc(m,'buttondownfcn',{@PC.HitImage, 1});        colorbar;        return;    elseif strcmp(plottype,'TriggerFind')        PC.SetFigure(DATA,DATA.tag.clusters);        m = max(DATA.mahal(:,:,[1 3]),[],3);        hold off;         imagesc(m,'buttondownfcn',{@PC.HitImage, 4});        caxis([0 5]);        hold on;        [a,b] = find(m > 2 & squeeze(DATA.dropi(:,:,1)) < 1 & abs(DATA.peakdiff) < 1);        for j = 1:length(a);            PC.DrawBox(a(j),b(j),4,'color',[0.5 0.5 0.5]);        end        vc = prctile(DATA.mspkvar(:),50);        [a,b] = find(m < 2 & abs(DATA.peakdiff) < 1 & DATA.muampl > 0.9 & DATA.mspkvar > vc);        for j = 1:length(a);            PC.DrawBox(a(j),b(j),4,'color',[0.0 0.0 0.0]);        end    elseif strcmp(plottype,'Tagged')        imagesc(DATA.tagged,'ButtondownFcn',{@PC.HitImage, 1});    end        if DATA.rebuild || (strcmp(plottype,'xcorr') && ~isfield(DATA,'synci'))    for j = 1:length(DATA.strings)        if length(Clusters{j}) > 1            PC.SetFigure(DATA,DATA.tag.clusters);            clf            if strcmp(plottype,'dips')            fprintf('Plotting %s at %s\n',DATA.strings{j},datestr(now));            a = PlotSpikeTimes(Clusters{j},plottype);            n = size(a.dips,2);            mahal(j,1:n) = a.dips(6,:);            dips(j,1:n) = a.dips(1,:);            ndmahal(j,1:n) = a.dips(7,:);            DATA.qres{j} = a;            elseif strncmp(plottype,'mahal',5) & DATA.rebuild                fprintf('Plotting %s at %s\n',DATA.strings{j},datestr(now));                a = PlotSpikeTimes(Clusters{j},'bestspace');                n = size(a.dips,2);                DATA.mahal(j,1:n,1) = a.dips(6,:);                dips(j,1:n) = a.dips(1,:);                DATA.mahal(j,1:n,2) = a.dips(7,:);                DATA.qres{j} = a;              elseif strncmp(plottype,'xcorr',5)                ofile = [DATA.name '/' strrep(DATA.strings{j},'ClusterTimes','Xcorrs')];                if ~exist(ofile,'file') || DATA.rebuild == 1                    xc = PlotSpikeTimes(Clusters{j},plottype);                    save(ofile,'-v7.3','xc');                    fprintf('Plotting %s (%d cells) at %s\n',DATA.strings{j},length(xc.cells),datestr(now));                    ts = [ts xc.times];                    durs = [durs xc.xctime];                    ns = [ns prod(xc.ns,2)'];                else                    load(ofile);                    ns = [ns prod(xc.ns,2)'];                end                DATA.synci{j} = xc;            elseif strcmp(plottype,'probesd')                xc = PlotSpikeTimes(Clusters{j},plottype);                n = length(diag(xc.sds));                sds(j,1:n) = diag(xc.sds);                allsd(j,1:size(xc.sds,1),1:size(xc.sds,2)) = xc.sds;                DATA.cres{j} = xc;            elseif strcmp(plottype,'refitgm')                for k = 1:length(Clusters{j})                    fprintf('E%dP%d\n',floor(Clusters{j}{k}.exptno),k);                    [a,b] = GMDip(Clusters{j}{k}.xy,0);                    hold off;                     [nsp,x] = hist(Clusters{j}{k}.xy(:,1),500);                    bar(x,nsp,1);                    scale = trapz(x,nsp)                    hold on;                    plot(b.gxy(:,1),b.gxy(:,2).*scale,'g');                    plot(b.gxy(:,1),b.gxy(:,3).*scale,'g');                    plot(b.gxy(:,1),sum(b.gxy(:,2:3),2).*scale,'r');                    title(sprintf('E%.0fP%d',Clusters{j}{k}.exptno,k));                    drawnow;                end            elseif strcmp(plottype,'Evec') && DATA.rebuild                for k = 1:length(Clusters{j})                    C = Clusters{j}{k};                    if isfield(Clusters{j}{k},'Evec') && isfield(Clusters{j}{k}.Evec,'Eval')                         DATA.eveci(j,k) = Clusters{j}{k}.Evec.Eval(1)./sum(Clusters{j}{k}.Evec.Eval);                        mahals(j,k) = Clusters{j}{k}.mahal(1);                        xc = corrcoef(C.MeanSpike.ms(:),C.MeanSpike.mu(:));                        DATA.mucorrs(j,k) = xc(1,2);                    end                end            elseif DATA.rebuild                DATA.cres{j} = PlotSpikeTimes(Clusters{j},plottype);            end        end    end    end        if strmatch(plottype,{'drop-mahal' 'mahalxc' 'mahaldp' 'dxpc' 'PcGms' 'mahalvar' 'BuildTimes' 'Fit-mahal' 'stability'},'exact')        PC.SetFigure(DATA, DATA.tag.popscatter,'front');    else        PC.SetFigure(DATA, DATA.tag.all,'front');    end    hold off;    if strcmp(plottype,'dips')        imagesc(mahal,'buttondownfcn',{@PC.HitImage, 1});    elseif strcmp(plottype,'mydip')        for j = 1:length(Clusters)            for k = 1:length(Clusters{j})                C = Clusters{j}{k};                if isfield(C,'mydipsize')                    x(j,k) = C.mydipsize(1);                    y(j,k) = C.fitdprime(1);                end            end        end        colors = mycolors;        [a,b] = PC.PlotPopPoints( x,y, DATA, 'colors', 'expt', plotargs{:});        fprintf('%d points\n',b.np);    elseif strcmp(plottype,'Fit-mahal') || strcmp(plottype,'stability')        colors = ones(size(DATA.GaussFitdp,1),size(DATA.GaussFitdp,2));        shapelist(1:size(DATA.GaussFitdp,1),1:size(DATA.GaussFitdp,2)) = 'o';        for j = 1:size(DATA.GaussFitdp,1)            for k = 1:size(DATA.GaussFitdp,2)                if Clusters{j}{k}.shape == 0                    shapelist(j,k) = 's';                end            end        end        id = find(DATA.cutspace);        id = find(sum(DATA.gmfitpos,3) > 1);        colors(id) = 2;                        cid = find(sum(DATA.gmfitpos,3) > 1 & sum(CellList,3) == 0 & abs(DATA.peakdiff) == 0);        colors(cid) = -2;        did = find(sum(DATA.gmfitpos,3) < 2 & sum(CellList,3) > 0);        colors(did) = -1;        if strcmp(plottype,'Fit-mahal')             h = PC.PlotPopPoints(DATA.GaussFitdp(:,:,1), DATA.GaussFitdp(:,:,2),DATA,'colorscheme',colors,'shapes',shapelist,plotargs{:});            xlabel('dprime from GM');            ylabel('dprime from Gauss fits');        elseif  strcmp(plottype,'stability')            h = PC.PlotPopPoints(DATA.GaussFitdp(:,:,2), DATA.xysdindex(:,:),DATA,'colorscheme',colors,'shapes',shapelist,plotargs{:});        end        mylegend(h,{'not a cell','fit overlap but celll','fitdp < 3','fitdp > 3'},'location','southeast');    elseif strcmp(plottype,'drop-mahal')        colors = ones(size(DATA.mahal,1),size(DATA.mahal,2));        cid = find( abs(DATA.peakdiff) > 0);        colors(cid) = 2;        did = find(sum(DATA.CellList,3) > 0);        colors(did) = colors(did).*-1;        PC.PlotPopPoints( max(DATA.mahal(:,:,[1 3]),[],3),DATA.dropi(:,:,1), DATA,'colorscheme', colors, plotargs{:});    elseif strcmp(plottype,'muamp-spkvar')        PC.PlotPopPoints(DATA.muampl, DATA.mspkvar(:,:,1),DATA,plotargs{:});    elseif strcmp(plottype,'shapexc')        PC.PlotPopPoints(DATA.xcorrs.xc, DATA.xcorrs.effic,DATA,plotargs{:});    elseif strcmp(plottype,'mahalxc')        PC.PlotPopPoints(DATA.mahal(:,:,1), DATA.mucorrs,DATA,plotargs{:});    elseif strcmp(plottype,'mahaldp')        PC.PlotPopPoints(DATA.mahal(:,:,1), DATA.dpsum,DATA,plotargs{:});    elseif strcmp(plottype,'npts')        for j = 1:length(Clusters)            for k = 1:length(Clusters{j})                npts(j,k) = range(Clusters{j}{k}.spts);            end        end        imagesc(npts);    elseif strcmp(plottype,'templatescore')        subplot('position',[0.05 0.05 0.4 0.9]);        imagesc(DATA.tmplxcs,'buttondownfcn',{@PC.HitImage, 1});        title('Correlation');        for j = 1:length(Clusters)            text(1,j,sprintf('%d',Clusters{j}{1}.cluster{1}.exptno),'HorizontalAlignment','left','color','w');        end         set(gca,'UserData',DATA.toplevel);        subplot('position',[0.45 0.05 0.4 0.9]);        set(gca,'yticklabel',[]);        imagesc(squeeze(DATA.mahal(:,:,1)),'buttondownfcn',{@PC.HitImage, 1});        set(gca,'yticklabel',[]);        h = colorbar('Position',[0.85 0.05 0.1 0.9]);        if DATA.plot.mahalcmax > 0            caxis([0 DATA.plot.mahalcmax]);        end        PC.SetFigure(DATA,DATA.tag.templatesrc);        PC.PlotMeanSpike(DATA.Templates{DATA.templatesrc},0,1);    elseif strcmp(plottype,'finetemplatescores')        subplot(1,1,1);        tmpim =  cat(2,DATA.tmplscores{:});        tmpim = smooth(tmpim,100);        imagesc(tmpim);        hold on;        nc = DATA.templatesrc;         set(gca,'UserData',DATA.toplevel);         ns = 0;         for j = 1:length(DATA.tmplscores)             ns = ns+size(DATA.tmplscores{j},2);             plot([ns ns],[0 24],'r');             text(ns,0,sprintf('%d',Clusters{j}{1}.cluster{nc}.exptno),'horizontalalignment','right');         end    elseif strcmp(plottype,'dpxc')        PC.PlotPopPoints(DATA.dpsum, DATA.mucorrs,DATA,plotargs{:});    elseif strcmp(plottype,'spkrate')                PC.PlotPopPoints(DATA.dpsum, DATA.mucorrs,DATA,plotargs{:});    elseif strcmp(plottype,'PcGms')        [a,b] = max(DATA.pcgms,[],3);        PC.PlotPopPoints(DATA.pcgms(:,:,1), max(DATA.pcgms(:,:,2:end),[],3),DATA, 'colors',b,plotargs{:});        xlabel('Gm Distance Plain');        ylabel('Distance (Transformed)');    elseif strcmp(plottype,'BuildTimes')        buildtimes = diff(DATA.ctimes(:,:,[1 3]),[],3).*24;        subplot(1,1,1);        colors = ones(size(buildtimes));        id = find(DATA.thriter > 0)        colors(id) = 2;        id = find(DATA.thriter > 1)        colors(id) = 3;                PC.PlotPopPoints(DATA.nevents, buildtimes,DATA, 'colorscheme',colors,plotargs{:});        ylabel('Duration (hrs)');        xlabel('N events');        title(sprintf('Total %.1f hours, elapsed %.1f hours',sum(buildtimes(:)),max((DATA.ctimes(:,end,3))-min(DATA.ctimes(:,1,1))).*24));        te = max(DATA.ctimes(:,end,3));        ts = min(DATA.ctimes(:,1,1));        [a,id] = sort(DATA.ctimes(:,1,1));        for j = 1:length(id)-1            gap(j) = DATA.ctimes(id(j+1),1,1)-DATA.ctimes(id(j),end,3);        end        fprintf('First started at %s, last finished at %s Total gap %.1f\n',datestr(ts),datestr(te),sum(gap).*24);    elseif strcmp(plottype,'mahal1-n')        subplot(1,1,1);        colors = mycolors;        hold off;        clabels = {'ndPC' 'ndADC' 'ndVar'  'ndTemplate' 'none' 'C' 'ADC' 'varE' 'Template'};                    colors = mycolors('ncol',24);        for j = 1:size(DATA.mahal,1)            for k = 1:size(DATA.mahal,2)                if DATA.peakdiff(j,k) == 0                h = plot(DATA.mahal(j,k,1),DATA.mahal(j,k,3),'ro','buttondownfcn',{@PC.HitPopPoint, j,k});                set(h,'color',colors{DATA.cutspace(j,k)});                hs(DATA.cutspace(j,k)) = h;                hold on;                end            end        end        xlabel('mahal N-D');        ylabel('mahal 1D');        mylegend(hs,clabels);    elseif strcmp(plottype,'nclusters')    elseif strcmp(plottype,'mahaln')        subplot(1,1,1);        hold off;        colors = mycolors('ncol',24);        for j = 1:size(DATA.mahal,1)            for k = 1:size(DATA.mahal,2)                if DATA.peakdiff(j,k) == 0                plot(DATA.mahal(j,k,1),DATA.mahal(j,k,2),'o','buttondownfcn',{@PC.HitPopPoint, j,k});                hold on;                plot(DATA.mahal(j,k,1),DATA.mahal(j,k,3),'ro','buttondownfcn',{@PC.HitPopPoint, j,k});                end            end        end        xlabel('mahal 2-D');        ylabel('mahal 1D(red)/ND(blue)');    elseif strcmp(plottype,'mahal1-2')        subplot(1,1,1);        hold off;        colors = mycolors('ncol',24);        for j = 1:size(DATA.mahal,1)            for k = 1:size(DATA.mahal,2)                if DATA.peakdiff(j,k) == 0                plot(DATA.mahal(j,k,3),DATA.mahal(j,k,1),'o','buttondownfcn',{@PC.HitPopPoint, j,k});                hold on;%                plot(DATA.mahal(j,k,3),DATA.mahal(j,k,1),'ro','buttondownfcn',{@PC.HitPopPoint, j,k});                end            end        end        xlabel('mahal 1D');        ylabel('mahal 2D/ND');    elseif strcmp(plottype,'mahalvar')        PC.PlotPopPoints(DATA.mahal(:,:,1), DATA.mspkvar,plotargs{:});    elseif strcmp(plottype,'mahal+var')        subplot('position',[0.05 0.05 0.4 0.9]);        imagesc(DATA.mspkvar,'buttondownfcn',{@PC.HitImage, 1});         set(gca,'UserData',DATA.toplevel);        subplot('position',[0.45 0.05 0.4 0.9]);        set(gca,'yticklabel',[]);        PC.PlotMahalImage(DATA,'', 'colorbarpos',[0.85 0.05 0.1 0.9]);        set(gca,'yticklabel',[]);    elseif strcmp(plottype,'man-auto')        subplot(1,1,1);        PC.PlotMahalImage(DATA, 'autodiff');    elseif sum(strcmp(plottype,{'mahal' 'fitdprime' 'fitdp' 'BuildDates'}))        subplot(1,1,1);        PC.PlotMahalImage(DATA, plottype);    elseif strcmp(plottype,'Evec')        subplot(1,2,1);        imagesc(DATA.eveci);        hold off;         colors = mycolors('ncol',24);        for j = 1:size(DATA.eveci,1)            for k = 1:size(DATA.eveci,2)                plot(mahals(j,k),DATA.eveci(j,k),'o','buttondownfcn',{@PC.HitPopPoint, j,k},'color',colors{k});                hold on;            end        end        subplot(1,2,2);        hold off;         for j = 1:size(DATA.eveci,1)            for k = 1:size(DATA.eveci,2)                plot(DATA.mucorrs(j,k),DATA.eveci(j,k),'o','buttondownfcn',{@PC.HitPopPoint, j,k},'color',colors{k});                hold on;            end        end    elseif strcmp(plottype,'probesd')        subplot(1,2,1);        imagesc(sds);        subplot(1,2,2);        imagesc(squeeze(mean(allsd)));    elseif strncmp(plottype,'xcorr',5)        allsync = [];        allexpt = [];        allcells = [];        nc = 0;                for j = 1:length(DATA.synci)            for k = DATA.synci{j}.cells            id = find(DATA.synci{j}.cells < k);            cells = [ones(size(id)).* k; DATA.synci{j}.cells(id)];            allsync = cat(2,allsync,DATA.synci{j}.synci(k, DATA.synci{j}.cells(id),1));            allexpt = cat(2,allexpt,j .* ones(size(id)));            allcells = cat(2, allcells, cells);            end            n = 0;            for k = 1:length(DATA.synci{j}.cells)                for m = 1:k-1;                    nc = nc+1;                    n = n+1;                    a = DATA.synci{j}.cells(k);                    b = DATA.synci{j}.cells(m);                    ccf = DATA.synci{j}.ccf{a,b};                    midpt = ceil(length(ccf)./2);                    asd = std(Clusters{j}{a}.MeanSpike.ms');                    bsd = std(Clusters{j}{b}.MeanSpike.ms');                    xc = corrcoef(Clusters{j}{a}.MeanSpike.ms(:),Clusters{j}{b}.MeanSpike.ms(:));                    ampratio(nc) = (asd(a)./asd(b)).*(bsd(b)./bsd(a));                    synci(nc) = mean(ccf([midpt+1 midpt-1]))./ccf(midpt);                    xcs(nc) = xc(1,2);                    sep(nc) = abs(b-a);                    pairs(nc,:) = [a b];                    nspk(nc) = prod(DATA.synci{j}.ns(n,:));                    xctimes(nc) = DATA.synci{j}.xctime(n);                end            end            ns = nspk;        end        hold off;        if strcmp(plottype,'xcorra')            for j = 1:length(ampratio)                if sep(j) > 5                    c = 'k';                elseif sep(j) == 4                    c = 'b';                elseif sep(j) == 3                    c = 'y';                elseif sep(j) == 2                    c = 'g';                else                    c = 'r';                end                plot(ampratio(j), synci(j),'o','color',c,'buttondownfcn',{@PC.HitXcorr, j, allexpt(j), allcells(:,j)});                hold on;            end            xlabel('Amp Ratio');            ylabel('Synci Local');        elseif strcmp(plottype,'xcorrt')            subplot(1,1,1);            hold off;             for j = 1:length(ns)                plot(ns(j),xctimes(j),'o','color','b','buttondownfcn',{@PC.HitXcorr, j, allexpt(j), allcells(:,j)});                hold on;            end        elseif strcmp(plottype,'xcorrb') || strcmp(plottype,'xcorrd')             ic = unique(pairs(:));            subplot(1,2,1);            hold off;            subplot(1,2,2);            hold off;            nc = 0;            for j = 1:length(ic)                for k = 1:j-1                    d = abs(ic(j)-ic(k));                    if d > 5                        c = 'k';                    elseif d == 4                        c = 'b';                    elseif d == 3                        c = 'y';                    elseif d == 2                        c = 'g';                    else                        c = 'r';                    end                    id = find(pairs(:,1) == ic(j) & pairs(:,2) == ic(k));                    if length(id)                    subplot(1,2,1);                    nc = nc+1;                    mpairs(nc,:) = [ic(j) ic(k)];                    x(nc) = mean(ampratio(id));                    ccf = PC.meanccf(DATA,id,ic(j),ic(k));                    si = PC.SyncIndices(ccf);                    y(nc) = si(1);                    z(nc) = mean(xcs(id));                    if strcmp(plottype,'xcorrb')                        plot(mean(ampratio(id)), mean(synci(id)),'o','color',c,'buttondownfcn',{@PC.HitXcorr, id, 0, pairs(id(1),:)});                        hold on;                        subplot(1,2,2);                        plot(mean(ampratio(id)), mean(xcs(id)),'o','color',c,'buttondownfcn',{@PC.HitXcorr, id, 0, pairs(id(1),:)});                        hold on;                    elseif strcmp(plottype,'xcorrd')                        plot(mean(xcs(id)), y(nc),'o','color',c,'buttondownfcn',{@PC.HitXcorr, id, 0, pairs(id(1),:)});                        hold on;                        subplot(1,2,2);                        plot(si(2), si(1),'o','color',c,'buttondownfcn',{@PC.HitXcorr, id, 0, pairs(id(1),:)});                        hold on;                    end                end                end            end            subplot(1,2,1);            if strcmp(plottype,'xcorrb')                set(gca,'xscale','log');                ylabel('syncii');            else                xlabel('shape xcorr');                ylabel('synci');            end            set(gca,'UserData',DATA.toplevel);            subplot(1,2,2);            if strcmp(plottype,'xcorrb')                set(gca,'xscale','log');                xlabel('Amplitude ratio');                ylabel('shape xcorr');            else                xlabel('allsync');            end            set(gca,'UserData',DATA.toplevel);            id  = find(~isnan(x) & ~isnan(y) & ~isinf(y));            X(:,1) = log(x(id));            X(:,2) = y(id);            X(:,3) = z(id);            pairim = zeros(DATA.nprobes, DATA.nprobes);            pairimy = pairim;            pairimz = pairim;            pairim = pairim + mean(log(x));            [Eig, Ev] = eig(cov(X));            pcs = X * Eig;            PC.SetFigure(DATA,DATA.tag.pairs);            subplot(2,2,1);            hold off;            for j = 1:nc                pairim(mpairs(j,1),mpairs(j,2)) = log(x(j));                pairimy(mpairs(j,1),mpairs(j,2)) = log(1./y(j));                pairimz(mpairs(j,1),mpairs(j,2)) = z(j);            end                        imagesc(pairim,'buttondownfcn',{@PC.HitImage, 2});            set(gca,'UserData',DATA.toplevel);            subplot(2,2,2);            hold off;            imagesc(pairimy,'buttondownfcn',{@PC.HitImage, 2});            set(gca,'UserData',DATA.toplevel);            subplot(2,2,3);            hold off;            imagesc(pairimz,'buttondownfcn',{@PC.HitImage, 2});            set(gca,'UserData',DATA.toplevel);            subplot(2,2,4);           PC.SetFigure(DATA, DATA.tag.all,'front');                 E = AddEllipse(gcf,'wait','color','r','line');            PC.SetFigure(DATA,DATA.tag.pairs);            plot(pcs(:,end),pcs(:,2),'.');            if ~isempty(E)            theta = atan((log(E.pos(3)./E.pos(1)))./(E.pos(4)-E.pos(2)));            xy = xyrotate(log(x),y,theta);            b = xyrotate(log(E.pos([1 3])),E.pos([2 4]),theta);            id = find(xy(:,1) < mean(b([1 2])));            hold on;            plot(pcs(id,end),pcs(id,2),'r.');            pairim = zeros(DATA.nprobes, DATA.nprobes);            for j = 1:length(id)                pairim(mpairs(id(j),1),mpairs(id(j),2)) = b(1)-xy(id(j),1);            end            PC.SetFigure(DATA,DATA.tag.pairs);            subplot(2,2,4);            hold off;            imagesc(pairim,'buttondownfcn',{@PC.HitImage, 2});            set(gca,'UserData',DATA.toplevel);            end        else            for j = 1:length(allsync)                plot(ns(j), allsync(j),'o','buttondownfcn',{@PC.HitXcorr, j, allexpt(j), allcells(:,j)});                hold on;            end            xlabel('Nspikes');            ylabel('Synci (all)');        end        DATA.allexpt = allexpt;        DATA.allsync = allsync;        DATA.AllPairs = pairs;        set(gca,'UserData',DATA.toplevel);    end    set(gca,'UserData',DATA.toplevel);    set(DATA.toplevel,'UserData',DATA);    