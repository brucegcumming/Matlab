function DATA = PlotAllProbe(DATA, type)%Plots All SPks, for probes or expts    Clusters = getappdata(DATA.toplevel,'Clusters');    AllSpikes = {};    axdatatype = [];    allprobes = 0;    if ~strcmp(type,'selectspks')    DATA.selectprobe = zeros(length(DATA.exptid),DATA.nprobes);    end    if DATA.profiling        profile on;    end    eid = DATA.currentpoint(1);    %'exptspks', 'allspks' plot all probes for one expt     if strmatch(type,{'allspks' 'allexptspks''spoolall' 'exptspks'})         AllSpikes = PC.CheckAllSpikes(DATA, eid, 1:DATA.nprobes,'allprobes');         np =length(Clusters{eid});         pid = 1:np;         expts = eid;         allprobes = 1;     elseif strmatch(type,{ 'allprobespks' 'AllProbeMean' 'allcellspks'})         np =length(DATA.exptid);         expts = 1:np;         if strmatch(type,{ 'allprobespks'})             AllSpikes = PC.CheckAllSpikes(DATA, expts, DATA.currentpoint(2),'allprobes');         else             AllSpikes = PC.CheckAllSpikes(DATA, expts, DATA.currentpoint(2));         end         pid = ones(size(expts)) .* DATA.currentpoint(2);         axdatatype = 'probeexpt';     elseif strmatch(type,{'selectspks'})         if isfield(DATA,'usepeaks') && sum(DATA.usepeaks > 0)            expts = find(DATA.usepeaks > 0);            pid = DATA.usepeaks(expts);         else             [expts, pid] = find(DATA.selectprobe > 0);         end         np = length(expts);         for j = 1:np             AllSpikes = PC.CheckAllSpikes(DATA, expts(j), pid(j),'allprobes');         end     end     %get Clusters again in case changed    Clusters = getappdata(DATA.toplevel,'Clusters');    Expts = getappdata(DATA.toplevel,'Expts');    if DATA.profiling        profile viewer;    end    DATA.voffset = PC.SetVOffset(DATA, AllSpikes,expts(1));        DATA.Expt = Expts{eid};    if np == 24 && strcmp(DATA.ArrayConfig.type,'12x2')        nr = 4;        nc = 6;    else        [nr,nc] = Nsubplots(np);    end     if strcmp(type, 'spoolall')         DATA.plotspk.allprobes =1;            PC.SpoolAllProbes(DATA, eid, AllSpikes(eid,:),Clusters{eid});            return;     elseif strcmp(type, 'spooleverything')         DATA.plotspk.allprobes =1;         for j = 1:length(DATA.exptid)             AllSpikes = PC.CheckAllSpikes(DATA, j, 1:DATA.nprobes,'allprobes');            stopped = PC.SpoolAllProbes(DATA, j, AllSpikes(j,:),Clusters{j});            if stopped                return;            end         end         return;     elseif strcmp(type, 'spooleverycell')         for j = 1:length(DATA.exptid)             cid = PC.isacell(DATA, j, 1:DATA.nprobes);             AllSpikes = PC.CheckAllSpikes(DATA, j, cid,'allprobes');            stopped = PC.SpoolAllProbes(DATA, j, AllSpikes(j,cid),Clusters{j});            if stopped                return;            end         end         return;     elseif strcmp(type, 'spoolcells')         cid = PC.isacell(DATA, eid, 1:DATA.nprobes);             AllSpikes = PC.CheckAllSpikes(DATA, eid, find(cid),'allprobes');            PC.SpoolAllProbes(DATA, eid, AllSpikes(eid,cid),Clusters{eid});            return;     end     if strmatch(type,{'AllProbeMean'})         mtype = DATA.plotmeantype;     else         mtype = type;     end     if strmatch(type,{'allspks' 'allexptspks' ...              'allcellspks' 'allprobespks' 'selectspks' 'AllProbeMean'})         F = PC.SetFigure(DATA,DATA.tag.allspikes);         subplot(1,1,1); %not clf - that wipes menus etc     else         PC.SetFigure(DATA,DATA.tag.allxy);     end     cmenu = uicontextmenu;    for j = 1:50        uimenu(cmenu,'label',sprintf('Cell %d',j),'Callback',{@PC.SetCellFromSubplot, j});    end    axdata.toplevel = DATA.toplevel;    if allprobes && isfield(DATA.ArrayConfig,'X')        plotpos = PC.SetPlotPos(DATA, np, nr, nc);        scalebar = 0.005;    else        plotpos = 1:np;        scalebar = 1;    end     for j = 1:np         mysubplot(nr,nc,plotpos(j),'tight','width',0.95);        hold off;         p = pid(j);        if strmatch(type,{'allspks' 'allexptspks' 'allcellspks' 'selectspks' 'exptspks' 'allprobespks'})            if sum(strcmp(type,{'selectspks' 'allprobespks'}))                C = Clusters{expts(j)}{pid(j)};                eid = expts(j);            else                C = Clusters{eid}{j};            end            adjid = [eid-1 eid+1];            adjid = adjid(adjid > 0 & adjid <= size(AllSpikes,1));            [a,b] = PC.isacell(DATA,eid,pid(j));            [c,d] = PC.isacell(DATA,adjid,pid(j));            id = find(c >0);            if length(id) && length(adjid) > max(c)                c = c(id(1));                [e,d] = PC.isacell(DATA,adjid(c),p);            else                c = 0;            end            if a > 0 || sum(strcmp(type,{'allspks' 'selectspks' 'allprobespks'}))            [h, x] = PC.QuickSpikes(DATA, AllSpikes{eid,pid(j)},C,'showmean','scalebar',scalebar);            axdata.lines = h;            PC.AddLineContextMenu(DATA, h, eid, pid(j));            if isfield(x,'meanh')                PC.AddLineContextMenu(DATA, x.meanh, eid, pid(j));            end            if isfield(AllSpikes{eid,pid(j)},'Header')            dstr = datestr(AllSpikes{eid,pid(j)}.Header.ctime);            dstr = dstr(1:6);            else                dstr = '';            end                        if a > 0 || c > 0                th=title(sprintf('E%.0fP%d 1D%.1f 2D%.1f',C.exptno,p,C.mahal(4),C.mahal(1)));                axdata.celllabels = PC.AddCellLabels(DATA, eid, pid(j),'adjacent',adjid);            else                if c > 0                    XC = Clusters{adjid(c)}{j};                    axdata.celllabels = PC.AddCellLabels(DATA, adjid(c), j,'parentheses');                    hold on;                    for k = 1:min([length(d) length(h)-1])                        if h(k+1) > 0 & ishandle(h(k+1))                            color = get(h(k+1),'color');                            color = 1-color;                            if k > 1                                offset = std(XC.next{k-1}.MeanSpike.ms(j,:))./4;                                plot(XC.next{k-1}.MeanSpike.ms(j,:)-offset,'--','color',color,'linewidth',2);                            else                                offset = std(XC.MeanSpike.ms(j,:))./4;                                plot(XC.MeanSpike.ms(j,:)-offset,'--','color',color,'linewidth',2);                            end                        end                    end                end                th=title(sprintf('E%.0fP%d 1D%.1f 2D%.1f',C.exptno,p,C.mahal(4),C.mahal(1)));            end            nid = find(~ismember(d,b) & d > 0);            if diff(size(nid)) < 0                nid = nid';            end                if c > 0            for k = nid;               hold on;               XC = Clusters{adjid(c)}{p};               mspid = PC.GetMeanSpikeProbe(XC, p);               if k < length(h) & h(k+1) > 0 & ishandle(h(k+1))                            color = get(h(k+1),'color');                            color = 1-color;                            if k > 1                                offset = std(XC.next{k-1}.MeanSpike.ms(mspid,:))./4;                                plot(XC.next{k-1}.MeanSpike.ms(mspid,:)-offset,'--','color',color,'linewidth',2);                            else                                offset = std(XC.MeanSpike.ms(mspid,:))./4;                                plot(XC.MeanSpike.ms(mspid,:)-offset,'--','color',color,'linewidth',2);                            end                        end            end                end            end        else            eid = expts(j);            h = PC.PlotMeanSpike(Clusters{expts(j)}{p},0,1,mtype);            axdata.lines = h;        end        axdata.probe = p;        axdata.eid = eid;        axdata.type = axdatatype;        set(gca,'Xtick',[],'Ytick',[]);        set(gca,'ButtonDownFcn',{@PC.HitXYPlot, eid, p});        set(gca,'UserData',axdata,'UIContextMenu',PC.AddContextMenu(DATA, 'subplot'));        h = get(gca,'title');        xl = get(gca,'xlim');        yl(j,:) = get(gca,'ylim');        a = get(h,'position');        a(2) = yl(j,2);        a(1) = mean(xl);        set(h,'position',a,'VerticalAlignment','top');     end             if DATA.plotspk.onescale         c = get(gcf,'Children');         ylim = minmax(yl(:));         for j = 1:length(c)             if strcmp(get(c(j),'type'),'axes')                 set(c(j),'ylim',ylim);             end         end     end    if DATA.plotspk.showcellmeans            for j = 1:length(Clusters{eid})                [a,b] = PC.isacell(DATA,eid,j);                b = b(b>0);                for k = 1:length(b)                    ms = Clusters{eid}{j}.MeanSpike.ms;                    amp = std(ms');                    id = find(amp > amp(j)./5);                    for p = id                        mysubplot(nr,nc,p);                        hold on;                        plot(ms(p,:),'linewidth',2,'color',DATA.colors{b(k)+1});                    end                end            end    end