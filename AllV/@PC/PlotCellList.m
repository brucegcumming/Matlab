function DATA = PlotCellList(DATA, varargin)plotmahal = 0;force = 0;reload = 0;showmsg = '';calcdrift = 0;nomarks = 0;calltag = 3;j = 1;while j <= length(varargin)    if strncmpi(varargin{j},'showfig',5) %Force figure creation        force = 1;    elseif strncmpi(varargin{j},'reload',5) %reload from disk        reload = 1;    elseif strncmpi(varargin{j},'calltag',5) %arg to give to PC.HitImage        j = j+1;        calltag = varargin{j};    elseif strncmpi(varargin{j},'nomarks',5) %no extra boxes - add different ones        nomarks = 1;    end    j = j+1;endif force    f = PC.SetFigure(DATA, DATA.tag.celllist);else    f = FindFig(DATA.tag.celllist);    if isempty(f)        return;    else        figure(f);    endendif reload        DATA = PC.LoadCellFile(DATA);endif isempty(DATA.CellList)    return;endDATA.fig.celllist = f;colors = mycolors;subplot(1,1,1);set(f,'UserData',DATA.toplevel);hold off;set(gca,'position',[0.03  0.1 0.94 0.85]);if plotmahalim = zeros(size(DATA.CellList));id = find(sum(DATA.CellList,3) > 0);X = squeeze(DATA.mahal(:,:,1));im(id) = X(id);endif isfield(DATA,'nclusters')    ncls = DATA.nclusters;    if size(ncls,1) < size(DATA.CellList,1)        ncls(size(DATA.CellList,1),:) = 1;    elseif size(ncls,1) > size(DATA.CellList,1)            endelse    ncls = ones(size(DATA.CellList));endfor j = 1:size(DATA.CellList,1)    for k = 1:size(DATA.CellList,2)        id = find(DATA.CellList(j,k,:) > 0);        if max(id) > ncls(j,k)            ncls(j,k) = max(id);        end    endendnc = max(ncls,[],1); %max # clusters in any one expt, for each probe%so nc has length = to number of probesoffset = DATA.clusteroffset;badexpts = [];if plotmahal    imh = imagesc(im,'buttondownfcn',{@PC.HitImage, 1});    caxis([0 5]);else    for j = 1:size(DATA.CellList,2)*2        if size(DATA.CellList,3) > offset            CellIm(:,j) = DATA.CellList(:,ceil(j/2),1+offset);        else            CellIm(:,j) = 0;        end    end    id = find(nc >1);    if size(DATA.CellList,3) > offset+1    for j = 1:length(id)        tid = find(ncls(:,id(j)) > 1);        CellIm(tid,id(j)*2) = DATA.CellList(tid,id(j),offset+2);    end    end            if isfield(DATA.ArrayConfig,'badprobes')        bid = find(DATA.ArrayConfig.badprobes);        id = find(CellIm(:,bid) > 0);        CellIm(:,bid*2) = -2;        CellIm(:,(bid*2)-1) = -2;        badprobes = bid;    end    if isfield(DATA.ArrayConfig,'badexpts')        bid = find(DATA.ArrayConfig.badexpts);        CellIm(bid,:) = -2;        badexpts = bid;    end    if isfield(DATA,'marked')        [aid, bid] = find(DATA.marked >= 100); %Bad Expts/probes        id = find(~ismember(aid, badexpts) & ~ismember(bid,badprobes));        for j = 1:length(id)            fprintf('E%dP%d Erroneously marked bad\n',aid(id(j)),bid(id(j)));        end        if ~isempty(id)            showmsg = 'Some Clusters marked bad not in ArrayConfig';        end    end    CellIm(CellIm<0) = -1;    imh = imagesc([0.75 size(DATA.CellList,2)+0.25],[1 size(DATA.CellList,1)],CellIm,'buttondownfcn',{@PC.HitImage, calltag});    colormap('jet');    if min(CellIm(:) < 0)        cmap = colormap(gca);        cmap(1,:) = [0 0 0];        colormap(gca,cmap);    else        cmap = colormap(gca);            endendhold on;showlines = 2;  %may reactivate one day....%Get cell colors before making context menuif showlines == 2    cells = unique(DATA.CellList);    cells = cells(cells > 0);    cm = colormap(gca);    yl = get(gca,'ylim');    for j = 1:length(cells)        id = find(DATA.CellList == cells(j));        [a,y,b] = ind2sub(size(DATA.CellList),id);        h = text(mean(y)-1+mean(b)/3,yl(1),sprintf('%d',cells(j)));        set(h,'verticalalignment','bottom');        cid = round(j .*length(cm)./max(cells));        set(h,'color',cm(cid,:));        DATA.cellcolors{cells(j)} = cm(cid,:);    endendcmenu = PC.AddContextMenu(DATA,'cellplot');set(imh,'uicontextmenu',cmenu);set(gca,'uicontextmenu', cmenu);set(gcf, 'KeyPressFcn',{@PC.KeyPressed,calltag},'Keyreleasefcn',{@PC.KeyReleased, calltag});if nomarks    return;endif DATA.plot.cellgrid > 0 && DATA.markcell.gridfor p = 1:DATA.plot.cellgrid:size(DATA.CellList,2)    plot([p-0.5 p-0.5],get(gca,'ylim'),'k:','buttondownfcn',{@PC.HitImage, calltag});endfor p = 1:DATA.plot.cellgrid:size(DATA.CellList,1)    plot(get(gca,'xlim'),[p-0.5 p-0.5],'k:','buttondownfcn',{@PC.HitImage, calltag});endend[a, eid] = intersect(DATA.CellDetails.exptids,DATA.exptid);if offset >= size(DATA.CellList,3)    DATA.CellList(eid,:,2+offset) = 0;endcells = unique(DATA.CellList(eid,:,1+offset));cells = cells(cells > 0);if showlines == 1    for j = 1:length(cells)        [x,y] = find(DATA.CellList(eid,:,1+offset) == cells(j));        for k = 1:length(y)            if DATA.nclusters(x(k),y(k)) > 1                plot([y(k)-0.25 y(k)-0.25], [x(k)-0.5 x(k)+0.5],'-','color',colors{j},'linewidth',2,'buttondownfcn',{@PC.HitImage, calltag});            else                plot([y(k) y(k)], [x(k)-0.5 x(k)+0.5],'-','color',colors{j},'linewidth',2,'buttondownfcn',{@PC.HitImage, calltag});            end        end        [a,b] = min(x);        h = text(y(b),x(b)-1,sprintf('%d',cells(j)));        set(h,'color',colors{j},'buttondownfcn',{@PC.HitImage, 3});    end        if size(DATA.CellList,3) > offset+1        cells = unique(DATA.CellList(:,:,2+offset));        cells = cells(cells > 0);        for j = 1:length(cells)            [x,y] = find(DATA.CellList(:,:,2+offset) == cells(j));            for k = 1:length(y)                plot([y(k)+0.25 y(k)+0.25], [x(k)-0.5 x(k)+0.5],'-','color',colors{j},'linewidth',2,'buttondownfcn',{@PC.HitImage, calltag});            end            [a,b] = min(x);            h = text(y(b),x(b)-1,sprintf('%d',cells(j)));            set(h,'color',colors{j},'buttondownfcn',{@PC.HitImage, calltag});        end    endelseendif isfield(DATA,'muCellList')    ncells = max(DATA.CellList(:));    mu = sum(DATA.muCellList,3);  %can mark cl2 as MU  equivalent of cellX    nmu = max(mu(:));    if nmu > ncells %use this for color scaling        ncells = nmu;    end    [e,p] = find(mu > 0);    for j = 1:length(e)        c = ceil(size(cmap,1) .* mu(e(j),p(j))./ncells);        cl = find(DATA.muCellList(e(j),p(j),:) > 0);        if cl(1) > 1            PC.DrawBox(e(j),p(j),3,'color',cmap(c,:),'box2');        else            PC.DrawBox(e(j),p(j),3,'color',cmap(c,:));        end    endendiscellim = sum(DATA.CellList,3) > 0;if size(DATA.CellList,3) >= 2+offset    iscellimb = squeeze(DATA.CellList(:,:,2+offset)) > 0;else    iscellimb = zeros(size(iscellim));end%reduce size in case all clsuters not loaded yetif isfield(DATA,'dropi')    iscellim = iscellim(1:size(DATA.dropi,1),:);     iscellimb = iscellimb(1:size(DATA.dropi,1),:); endif DATA.markcell.candidates    [x,y] = find(isnan(DATA.CellList(:,:,1)));    for j = 1:length(x)        PC.DrawBox(x(j),y(j),3,'color','g');    end    if isfield(DATA,'missing')    [x,y] = find(DATA.missing);    for j = 1:length(x)        PC.DrawBox(x(j),y(j),3,'color','y');    end    endendif DATA.markcell.goodmu    [x,y] = find(DATA.marked ==4);    for j = 1:length(x)        PC.DrawBox(x(j),y(j),3,'color','g');    endendif DATA.markcell.auto    [x,y] = find(DATA.isauto ==1);    for j = 1:length(x)        PC.DrawBox(x(j),y(j),3,'color','y');    end    [x,y] = find(DATA.isauto ==3); %these are manualendif DATA.markcell.goodmu    [x,y] = find(DATA.marked ==2);    for j = 1:length(x)        PC.DrawBox(x(j),y(j),3,'color','g');    endendif DATA.markcell.dropi > 0 && isfield(DATA,'dropi')    DATA.dropi(DATA.dropi == 0) = NaN;    [x,y] = find(squeeze(DATA.dropi(:,:,1+offset)) < DATA.markcell.dropi & iscellim);    for j = 1:length(x)        PC.DrawBox(x(j),y(j),3,'color','m');    end    if size(DATA.dropi,3) > 1+offset    [x,y] = find(squeeze(DATA.dropi(:,:,2+offset)) < DATA.markcell.dropi & iscellimb);    for j = 1:length(x)        PC.DrawBox(x(j),y(j),3,'box2','color','m');    end    endendif DATA.markcell.mahal > 0    X = max(DATA.mahal(:,:,[1 3]),[],3);    [x,y] = find(X < DATA.markcell.mahal & iscellim);    for j = 1:length(x)        PC.DrawBox(x(j),y(j),3,'color','r');    endendif DATA.markcell.ellipses > 0    [x,y] = find(DATA.cutshape ==0 & iscellim);    for j = 1:length(x)        PC.DrawBox(x(j),y(j),3,'color','m');    endendif DATA.markcell.tagged > 0 && isfield(DATA,'tagged');    [x,y] = find(DATA.tagged);    for j = 1:length(x)        PC.DrawBox(x(j),y(j),3,'color','y');    end    for j = 1:length(DATA.Comments)        PC.DrawBox(DATA.Comments(j).ex,DATA.Comments(j).p,3,'color','g');    endendif DATA.markcell.readmethod > 0    Clusters = getappdata(DATA.toplevel,'Clusters');    DATA.readmethod = CellToMat(Clusters,'exptreadmethod');    [x,y] = find(DATA.readmethod ==0);    for j = 1:length(x)        PC.DrawBox(x(j),y(j),3,'color','y');    endendif DATA.markcell.quick > 0    Clusters = getappdata(DATA.toplevel,'Clusters');    mstatus = CellToMat(Clusters,'manual');    quickstatus = CellToMat(Clusters,'quick');    [x,y] = find(quickstatus ==1);    for j = 1:length(x)        PC.DrawBox(x(j),y(j),3,'color','y');    end    [x,y] = find(mstatus == 2);    for j = 1:length(x)        PC.DrawBox(x(j),y(j),3,'color','m');    endendif  isfield(DATA,'fitjumps')    DATA.fitjumps(isnan(DATA.fitjumps)) = 0;    drift = [0 cumsum(DATA.fitjumps)];    p = DATA.currentpoint(2)+drift(DATA.currentpoint(1));    plot(p-drift,1:length(drift),'w-','buttondownfcn',{@PC.HitImage, 3});endif DATA.show.ed && isfield(DATA,'probesep')    probesep = median(DATA.probesep(DATA.probesep > 0));    epos = (DATA.electrodedepth - DATA.electrodedepth(DATA.currentpoint(1))) * 1000./probesep;    p = DATA.currentpoint(2);    plot(p-epos,1:length(epos),'w-','buttondownfcn',{@PC.HitImage, 3});endif DATA.markcell.expnames    for j = 1:length(DATA.exptid)        h = text(0.5,j,PC.ExLabel(DATA,j),'horizontalalignment','left','buttondownfcn',{@PC.HitImage, 3},'color','w');    endendif DATA.plotcells.showmahal > 0    m = (max(DATA.mahal(:,:,[1 3]),[],3) > DATA.plotcells.showmahal);    dp = (squeeze(DATA.GaussFitdp(:,:,2)) > DATA.plotcells.showfitdp & sum(DATA.gmfitpos,3) == 2);    peakok = (abs(DATA.peakdiff) < 1);    dropok = (squeeze(DATA.dropi(:,:,1)) > 1);    [aid, bid] = find(m & peakok & dropok);    for j = 1:length(aid)        PC.DrawBox(aid(j),bid(j),3,'color','r');    end    [cid, did] = find(dp & peakok & dropok);    for j = 1:length(cid)        PC.DrawBox(cid(j),did(j),3,'color','g');    end    [aid, bid] = find(dp & m & peakok & dropok);    for j = 1:length(aid)        PC.DrawBox(aid(j),bid(j),3,'color','w');    endendif sum(DATA.selectprobe(:)) > 0    [a,b] = find(DATA.selectprobe > 0);    for j = 1:length(a)        h = PC.DrawBox(a(j),b(j),3, 'color','w','uicontextmenu',cmenu);    endelseif isfield(DATA,'currentpoint')    h = PC.DrawBox(DATA.currentpoint(1),DATA.currentpoint(2),3,'color','w','uicontextmenu',cmenu);endit = findobj(gcf,'Tag','CellNumberId');if length(it) == 1    set(it,'value',DATA.currentcell);endPC.MarkExpts(DATA, DATA.markexpts);if ~isempty(showmsg)   acknowledge(showmsg,DATA.toplevel);end