function PlotClusterRates(DATA, type,varargin)    markexpts = DATA.markexpts;    currentcell = DATA.currentcell;    j = 1;    while j <= length(varargin)        if strncmpi(varargin{j},'cell',4)            j = j+1;            currentcell = varargin{j};        elseif strncmpi(varargin{j},'expt',4)            j = j+1;            markexpts = varargin{j};        end        j = j+1;    end        Expts = getappdata(DATA.toplevel,'Expts');    Clusters = getappdata(DATA.toplevel,'Clusters');    cellids = unique(DATA.CellList(:));    cellids = cellids(cellids > 0);    np = DATA.nprobes;    f = PC.SetFigure(DATA,DATA.tag.rateseq);    X = get(f,'UserData');    hold off;    colors = mycolors;    AllExpts = [];    AllProbes = [];    Allclid = [];        ts = now;    if strcmp(type,'rateseqone')        cellids = currentcell;        scaling = 'rates';    else        scaling = 'normalize';    end    %exid is list of true expt numbers    if strcmp(markexpts,'none')        exid = DATA.exptid;        exstr = 'All Expts';    else        exid = find(strcmp(markexpts, DATA.expnames));        exstr = markexpts;    end    %If have not loaded allexpts yet, could either force a load here, or only plot%what is loaded.  For now, only plot what is loaded.badex = [];for j = 1:length(exid)    if exid(j) > length(Expts) || isempty(Expts{exid(j)})       badex = [badex exid(j)];    endendexid = setdiff(exid,badex);exid = intersect(exid,DATA.exptid); %only use expts with cluster dataif length(badex)    exstr = sprintf('%s (Loaded %s)',exstr,sprintf('%d ',exid));endgaps(1) = Expts{exid(1)}.Header.timeoffset;    Expts{exid(1)}.Header.timeadjust = gaps(1);    for j = 2:length(exid)        durs(j) = (Expts{exid(j)}.Trials(end).TrialStart-Expts{exid(j)}.Trials(1).TrialStart)./10000;        xdur(j) = Expts{exid(j)}.Header.timeoffset-Expts{exid(j-1)}.Header.timeoffset;        gaps(j) = ((Expts{exid(j)}.Trials(1).TrialStart -Expts{exid(j-1)}.Trials(end).TrialStart)./10000)...            +Expts{exid(j)}.Header.timeoffset-Expts{exid(j-1)}.Header.timeoffset -2;%makes a mess of gtie expts (one .mat file). Its calculation above anyway -%? need it for uProbe expts?%            -Expts{exid(j-1)}.Trials(1).TrialStart/10000;        Expts{exid(j)}.Header.timeadjust = sum(gaps);        starts(j) = Expts{exid(j)}.Header.timeoffset-Expts{exid(j)}.Header.timeadjust ...            +Expts{exid(j)}.Trials(1).TrialStart/10000;    end    if length(exid) == 1        X.timeadjust = 0;        X.expstarts = 0;    else        X.expstarts = starts-2;  %time of first trial        X.timeadjust = cumsum(gaps);    end    X.currentexpt = exid(1);    np = size(DATA.CellList,2); %this is the important np for calc below    for j = 1:length(cellids)        aExpts = {};        [a,b] = find(DATA.CellList == cellids(j));        eid = DATA.CellDetails.exptids(a);        id = find(ismember(eid,exid));        a = a(id);        eid = eid(id);% eid is now true expt numbers where cell is defined        % a is list of Rows for Custers{a} etc%        eid = DATA.exptid(a);        b = b(id);        c = ceil(b./np);        p = 1+mod(b-1,np);        for k = 1:length(a)            [Clusters, DATA] = PC.CheckClusterLoaded(DATA,a(k));            [xcl, b] = PC.FindExcludedTrials(DATA,a(k),p(k),c(k),Clusters{a(k)}{p(k)});            aExpts{k} = PC.CountSpikes(Expts{eid(k)},Clusters{a(k)}{p(k)},c(k),b.xid);            aExpts{k}.Header.cellnumber  = cellids(j);        end        AllExpts = cat(1,AllExpts,a(:));        AllProbes = cat(1,AllProbes,p);        Allclid = cat(1,Allclid,c);        if length(a)            a = PlotRateSequence(aExpts,'color',colors{j},scaling,'offset',(j-1)*2,'bytime','callback',{@PC.HitTrial, cellids(j)});            text(max(a.times)*1.01,a.meanrates(end),num2str(cellids(j)),'color',colors{j},'horizontalalignment','left');            hold on;            X.RateRange(cellids(j),:) = minmax(a.rates);            X.handles(cellids(j)) = a.handle;        end    end    axis('tight');    X.yrange = get(gca,'ylim');    X.xrange = get(gca,'xlim');    X.exptlist = exid;    X.cellids = cellids;    set(f,'UserData',X);    fprintf('Took %.1f\n',mytoc(ts));    set(gcf,'keypressfcn',@PC.RateSeqKeyPressed);    yl = get(gca,'ylim');    extypes = {};    AllExpts = unique(AllExpts);    for j = 1:length(AllExpts)        extypes{j} = Expts{DATA.exptid(AllExpts(j))}.Header.expname;    end    types = unique(extypes);    first = zeros(size(types));    for j = 1:length(AllExpts)        e = DATA.exptid(AllExpts(j)); %real expt numbe        x = find(X.exptlist == e);        id = find(strcmp(Expts{e}.Header.expname,types));        t = Expts{e}.Header.timeoffset-Expts{e}.Header.timeadjust;        t = X.expstarts(x);        h = plot([t t],yl,'--','color',colors{id});        if length(cellids) == 1            dstr = sprintf('M%.1f D%.1f',PC.DistanceMeasure(Clusters{AllExpts(j)}{AllProbes(j)},Allclid(j),DATA.mahaltype),...                DATA.dropi(AllExpts(j),AllProbes(j),Allclid(j)));        else        dstr = [];        end        if ~first(id)            set(h,'linestyle','-');            h = text(t,yl(2),sprintf('%d %s %s',e,types{id},dstr),'color',colors{id},'VerticalAlignment','top','HorizontalAlignment','right','rotation',90);            first(id) =1;        elseif length(types) == 1            h = text(t,yl(2),sprintf('%d %s',e,dstr),'color','k','VerticalAlignment','top','HorizontalAlignment','right','rotation',90);        end    end    if isempty(AllExpts)        title(sprintf('Cell %d No Data %s',cellids,exstr));    elseif length(cellids) == 1        title(sprintf('Cell %d %s',cellids,exstr));        check = CheckExptRates(aExpts);        exid = [check.errs.exptno];        [a,b] = max(abs([check.errs.ff]));        [c,d] = max(abs(log(check.diffs)));        c = log(check.diffs(d));        [e,f] = max(abs([check.errs.slope]));        e = check.errs(f).slope;        fprintf('ExptV/M %.2f. Max diff %.2f (%d), max FF %.2f(%d), slope %.2f (%d)\n',...            check.blkff,c,exid(d),a,exid(b),e,exid(f));    end    cmenu = uicontextmenu;    cellid = unique(DATA.CellList);    cellid = cellid(cellid>0);    for j = 1:length(cellid)        uimenu(cmenu,'label',sprintf('Cell %d',cellid(j)),'Callback',{@PC.SetRateseqPlot, cellid(j)});    end    set(gca,'UIContextMenu',cmenu);    