function varargout = PlotClusters(name, varargin)%PlotClusters(dir, ......)%reads in Cluster files made by AllVPcs and plots up clusters for each%expt/cell%PlotClusters(dir, 'load') preloads all of the cluter files. Without this,%files are loaded as needed.%PlotClusters(dir, 'loadfullv') also forces loading of all the FullV files.%This allows it to call AllVPcs quickly for any expt.  Not implemented for%Utah arrays yet%        BE SURE YOU HAVE ENOUGH MEMORY verstr = '$Revision: 1.2 $';prefsdir = [GetFilePath('preferences') '/PlotClusters'];defaultconfig = [prefsdir '/' gethostname '.' GetUserName '.config'];defaultlayout = [prefsdir '/' gethostname '.' GetUserName '.layout.mat'];TAGTOP = 'PlotClusters';DATA.loadautoclusters = 0;loadargs = {};j = 1;while j <= length(varargin)    if strncmpi(varargin{j},'templatesrc',11)        j = j+1;        DATA.templatesrc = varargin{j};elseif strncmpi(varargin{j},'noauto',6)    DATA.loadautoclusters = 0;elseif strncmpi(varargin{j},'loadauto',6)    DATA.loadautoclusters = 1;elseif strncmpi(varargin{j},'tag',3)        j = j+1;        TOPTAG = varargin{j};    end    j = j+1;endinitcall =0 ;warnmode = 'nowarn';expts = [];runcmd = [];if nargout >0    varargout{1} = [];endif ishandle(name)  % callback    gui = name;    DATA = GetDataFromFig(name);    name = varargin{2};    Clusters = getappdata(DATA.toplevel,'Clusters');    if length(varargin) > 2 && isempty(varargin{1})    varargin = varargin{3:end};    else        varargin = {};    endelse    it = findobj('Tag',TAGTOP,'type','figure');    if isempty(it)        initcall = 1;        DATA.tag.top = TAGTOP;        DATA.revision = verstr(12:end-1);        DATA = PC.SetDefaults(DATA);    else        DATA = get(it(1),'UserData');        Clusters = getappdata(DATA.toplevel,'Clusters');        gui = 0;    endendif isstruct(name) || iscell(name)    DATA.name = 'ClusterArg';    DATA.strings{1} = 'ClusterArg';    if isstruct(name) && isfield(name,'cls') %template fits        Clusters = ReadTemplateClusters(name.cls);        DATA.Templates = name.Templates;        DATA.datatype = 2;    elseif isstruct(name) %one cluster result;        Clusters{1} = name.Clusters;    elseif isfield(name{1},'mahal')        Clusters{1} = name;    elseif initcall == 1        Clusters = name;    end        if ~isfield(Clusters{1}{1},'exptno')        for j = 1:length(Clusters{1})            Clusters{1}{j}.exptno = 1;        end    end    DATA.nprobes = length(Clusters{1});    DATA.exptid = Clusters{1}{1}.exptno;    if isfield(Clusters{1}{1},'loadname')        DATA.name = fileparts(Clusters{1}{1}.loadname);        ClusterInfo{1}.loadname = Clusters{1}{1}.loadname;        ClusterInfo{1}.loadtime = now;    else        msgbox(sprintf('Clusters Has no loadname\nUse LoadCluster(name)\n'));        return;    end    DATA.expnames{1} = 'Manual';    if initcall    DATA = PC.InitInterface(DATA);     DATA.defaultlayoutfile = defaultlayout;    DATA.defaultconfigfile = defaultconfig;    PC.ApplyLayout(defaultlayout);    PC.ApplyConfig(defaultconfig);    [DATA, Clusters] = PC.ReadClusterResults(DATA, Clusters);    setappdata(DATA.toplevel,'Clusters',Clusters);    setappdata(DATA.toplevel,'ClusterInfo',ClusterInfo);    end    elseif isdir(name)    d = dir(name);    strings = {};    for j  = 1:length(d)       if strfind(d(j).name,'ClusterTimes.mat') & isempty(strfind(d(j).name,'OldClusterTimes.mat')) & ...           (isempty(strfind(d(j).name,'AutoClusterTimes.mat')) | DATA.loadautoclusters)            strings = {strings{:} d(j).name};        end    end    DATA.name = regexprep(name,'/$','');    DATA.datadir = DATA.name;    DATA.strings = strings;    DATA.dates = zeros(size(DATA.strings));    DATA.tag.top = TAGTOP;    DATA = PC.SetDefaults(DATA);    [a,b,c] =  GetMonkeyName(name);    DATA.exptname = [name '/' a c 'Expts.mat'];    DATA = PC.InitInterface(DATA);elseif strncmpi(name,'close',4) %must be in front of exist test because of close.m    PC.OptionMenu(DATA,[],'savelastlayout');    PC.OptionMenu(DATA,[],'savelastconfig');    CloseChildren(DATA.toplevel);    close(DATA.toplevel);    return;elseif strncmpi(name,'profile',4) %must be in front of exist test because of close.m    DATA.profiling = ~DATA.profiling;    fprintf('Profiling %d\n',DATA.profiling);        set(DATA.toplevel,'UserData',DATA);    return;elseif sum(strcmp(name,{'checkclusters' 'test'})) %catch arguments that exist says are fileselseif exist(name,'file')    DATA.tag.top = TAGTOP;    DATA = PC.SetDefaults(DATA);    DATA.exptname = name;    [name, exptname] = fileparts(name);    d = dir(name);    strings = {};    for j  = 1:length(d)        if strfind(d(j).name,'ClusterTimes.mat') & isempty(strfind(d(j).name,'OldClusterTimes.mat'))            strings = {strings{:} d(j).name};        end    end    DATA.name = name;    if isdir(name)        DATA.datadir = name;    else        DATA.datadir = fileparts(name);    end    DATA.strings = strings;    DATA.dates = zeros(size(DATA.strings));    DATA = PC.InitInterface(DATA);endif strcmp(name,'getstate')    varargout{1} = DATA;    return;enddoload = [];j = 1;while j <= length(varargin)    if strncmpi(varargin{j},'LoadAutoonly',12)        DATA = PC.LoadAll(DATA,'auto','force');        set(DATA.lstui,'string',DATA.strings);        DATA.loadautoclusters = 2;    elseif strncmpi(varargin{j},'LoadAuto',8)        doload = varargin{j};    elseif strncmpi(varargin{j},'check',4)        runcmd = varargin{j}    elseif strncmpi(varargin{j},'updatearray',10)        runcmd = varargin{j}    elseif strncmpi(varargin{j},'config',4)        j = j+1;        if regexp(varargin{j},'^[A-Z]:') | strfind(varargin{j},'/') %real path            DATA.configfile = varargin{j};        else            DATA.configfile = [prefsdir '/' varargin{j} '.config'];        end        if exist(DATA.configfile)            DATA = PC.ApplyConfig(DATA);        else            fprintf('Cant Read %s\n',DATA.configfile);            DATA = rmfield(DATA,'configfile');        end    elseif strncmpi(varargin{j},'layout',4)        j = j+1;        if strcmp(varargin{j},'last')            DATA.layoutfile = strrep(defaultlayout,'.layout.mat','last.layout.mat');        elseif regexp(varargin{j},'^[A-Z]:') | strfind(varargin{j},'/') %real path            DATA.layoutfile = varargin{j};        else            DATA.layoutfile = [prefsdir '/' varargin{j} '.layout.mat'];        end        if exist(DATA.layoutfile)            load(DATA.layoutfile);            PC.ApplyLayout(DATA);        else            cprintf('red','Cant Read %s\n',DATA.layoutfile);            DATA = rmfield(DATA,'layoutfile');        end    elseif strncmpi(varargin{j},'expts',5)        j = j+1;        expts = varargin{j};    elseif strncmpi(varargin{j},'exptload',7)        DATA = PC.LoadExpts(DATA);    elseif strncmpi(varargin{j},'Load',4)        doload = varargin{j};    elseif strncmpi(varargin{j},'mahaltype',7)    j = j+1;    DATA.mahaltype = varargin{j};    elseif strncmpi(varargin{j},'rebuild',6)        DATA.rebuild = 1;    elseif strncmpi(varargin{j},'norebuild',6)        DATA.rebuild = 0;    elseif strncmpi(varargin{j},'templatesrc',11)        j = j+1;        DATA.templatesrc = varargin{j};%        DATA.templatesrc = 1;     elseif strncmpi(varargin{j},'templateid',10)        j = j+1;        DATA.templateid = varargin{j};    elseif strncmpi(varargin{j},'useauto',7)        DATA.useautoclusters = 1;    elseif strncmpi(varargin{j},'usealltrials',7)        loadargs = {loadargs{:} varargin{j}};        DATA.usealltrials = 1;    end    j = j+1;endif ~isempty(doload)        if ~isfield(DATA,'name') && ischar(name)            fprintf('%s is not a directory\n',name);            return;        elseif isdir(DATA.name)          if strncmpi(doload,'LoadSpikes',8)            DATA = PC.LoadAll(DATA,[],'loadspikes',warnmode);          else            DATA = PC.LoadAll(DATA,[],'force', warnmode,'expts',expts,loadargs{:});          end            set(DATA.lstui,'string',DATA.strings);            if strncmpi(doload,'Loadfullv',9)                DATA = PC.LoadFullVs(DATA);            end        else            fprintf('%s is not a directory\n',DATA.name);            return;        end        endif strncmpi(name,'close',4)    f = fields(DATA.tag);    for j = 1:length(f)        PC.CloseTag(DATA.tag.(f{j}));    end    return;elseif strncmpi(name,'checkexpts',7)    if length(varargin)        PC.CheckExpts(DATA,varargin{:});    else        PC.CheckExpts(DATA,'errs');    endelseif strncmpi(name,'checktimes',8)        PC.PlotTimeRanges(DATA);elseif strncmpi(name,'checkspikes',7)    res = PC.CheckSpikeFiles(DATA,'spkid');    b = PC.CheckSpikeFiles(DATA,'build');    if isfield(res,'acts') && isfield(b,'acts')        res.acts = cat(2,res.acts,b.acts);    end    varargout{1} = res;elseif strncmpi(name,'checkclusters',7)    PC.GuiMenu(DATA,[],'checkclusters');elseif strncmpi(name,'PCchecklist',7)    PC.CheckExclusion(DATA);elseif strncmpi(name,'PCfixexcludeid',7)    DATA = PC.CheckExclusion(DATA,'fixnonid');elseif strncmpi(name,'convertlist',7)    DATA = PC.ConvertExclusion(DATA);    if strcmp(name,'convertlistsave')        PC.SaveCellList(DATA);    endelseif strncmpi(name,'correlogram',7)    PC.PlotCorrelogram(Clusters{DATA.currentpoint(1)}{DATA.currentpoint(2)});elseif strncmpi(name,'findcells',7)    PC.CellFinderTest(DATA,1);elseif strncmpi(name,'quickspikes',7)%    PC.QuickSpikes(DATA, DATA.currentpoint);    PC.SpoolSpikes(DATA, DATA.currentpoint);elseif strncmpi(name,'reloadtrials',7)    DATA = PC.LoadTrialLists(DATA);elseif strncmpi(name,'loadextra',7)    DATA = PC.LoadExtra(DATA,0);elseif strncmpi(name,'reloadcellist',9)    DATA = PC.LoadCellFile(DATA);elseif strncmpi(name,'readres',7)    [DATA, Clusters] = PC.ReadClusterResults(DATA, Clusters);    setappdata(DATA.toplevel,'Clusters',Clusters);elseif strncmpi(name,'CallAllVPcs',7)elseif strncmpi(name,'loadspikes',7)    PC.LoadAllSpikes(DATA);elseif strncmpi(name,'refitxysdx',7)    DATA = PC.ReFitAll(DATA, 'sdindex');elseif strncmpi(name,'refit1d',7)    PC.ReFit1D(DATA, 1.1);elseif strncmpi(name,'refit3means',7)    ratio = 1.1;    if length(varargin) & isnumeric(varargin{1})        ratio = varargin{1};    end    DATA = PC.ReFit3means(DATA, ratio);elseif strncmpi(name,'refitgm',6)    DATA = PC.ReFitGMDip(DATA);elseif strcmp(name,'recalcxcorrcell')    PC.OptionMenu(DATA, [], name);    return; %Don't set UserData belowelseif strncmpi(name,'setentry',7)    id = get(gui,'value');    DATA.id = id;    Clusters = getappdata(DATA.toplevel,'Clusters');    if id > length(Clusters) || isempty(Clusters{id})    Clusters{id} = LoadCluster([DATA.name '/' DATA.strings{id}]);    end    figure(DATA.fig.clusters);    DATA = PC.doentry(DATA, Clusters, id);elseif strncmpi(name,'followcorr',7)    DATA.plot.alltype = 'followcorr';    DATA.templateid = fliplr(DATA.currentpoint);    DATA = PC.PlotAllClusters(DATA,[]);elseif strncmpi(name,'MakeCells',6)        cellps = getappdata(DATA.toplevel,'CellPs');        PC.MakeCellId(cellps);elseif strncmpi(name,'plotexpts',6)        PC.PlotExpts(DATA);elseif strncmpi(name,'plottest',6) %for testing new plots    PC.OptionMenu(DATA,[],'xcorrallprobes');    return;        PC.OptionMenu(DATA,[],'findconnect');    eid = DATA.currentpoint(1);    probes = find(DATA.selectprobe(eid,:));    PC.SetFigure(DATA,DATA.tag.spikes,'front');    PC.PlotSyncSpikes(DATA, eid, fliplr(probes),[1 1], varargin{:});    return;    DATA.plotcells.showmahal = 2;    DATA.plotcells.showfitdp = 2;    PC.PlotCellList(DATA, 'showfig');elseif strncmpi(name,'plotxcorrprobes',12)    PC.SetFigure(DATA, DATA.tag.xcorr);    PC.PlotXcorrs(DATA, DATA.xcorrs, 1:length(DATA.exptids), 0);elseif strncmpi(name,'plotxcorr',6)    PC.SetFigure(DATA, DATA.tag.xcorr);    PC.PlotXcorrs(DATA, DATA.xcorrs, 1:length(DATA.exptids),1);elseif strncmpi(name,'popplot',7)    if length(varargin) && ischar(varargin{1})        DATA.plot.alltype = varargin{1};    end    DATA = PC.PlotAllClusters(DATA,[]);elseif strncmpi(name,'plotmenu',7)    PC.PlotMenu(DATA,[], varargin{1}, varargin{2});elseif strncmpi(name,'setplot',7)    if gui        strs = get(gui,'string');    DATA.plot.onetype = deblank(strs(get(gui,'value'),:));    end    DATA = PC.doentry(DATA, Clusters, DATA.id);elseif strncmpi(name,'showdata',7)    PC.ShowData(DATA, DATA.currentpoint(1),DATA.currentpoint(2));endif initcall     if isfield(DATA,'exptid') %Do pop plot if data loaded        DATA = PC.PlotAllClusters(DATA,[]);    else %have not loaded the clusters yets        if ~isfield(DATA,'name') && ischar(name)            fprintf('%s is not a directory\n',name);            return;        end        listname = [DATA.name '/ExptList.mat'];        if exist(listname)            load(listname);            DATA.exptid = ExptList.exptid;            DATA.expnames = ExptList.expnames;        else %not loading clusters, and no exptlist yet            cprintf('red','Looks like this is the first time you have run PlotClusters Here.  Use ''load'' argument to initialize\n');            CloseChildren(DATA.toplevel);            close(DATA.toplevel);            return;        end        DATA.voffset = 1:DATA.nprobes *2;    end    DATA.defaultlayoutfile = defaultlayout;    DATA.defaultconfigfile = defaultconfig;    if ~isfield(DATA,'configfile')        DATA= PC.ApplyConfig(DATA, defaultconfig);        if DATA.options.uselastconfig           lastfile = strrep(defaultconfig,'.config','last.config');           if exist(lastfile)               DATA= PC.ApplyConfig(DATA, lastfile);           end        end    end    if ~isfield(DATA,'layoutfile')        if DATA.options.uselastlayout           lastfile = strrep(defaultlayout,'.layout','last.layout');           if exist(lastfile)                defaultlayout = lastfile;           end        end        DATA = PC.ApplyLayout(DATA, defaultlayout);    end    if isfield(DATA,'PopupWindowData') && ~isempty(DATA.PopupWindowData)        setappdata(DATA.toplevel,'PopupWindowData',DATA.PopupWindowData);        PopupWindow(DATA.toplevel,'dockcallback',{@PC.OptionMenu, 'dockbuttons'});    end    DATA = PC.LoadCellFile(DATA);    DATA = PC.LoadExtra(DATA,0);    DATA.ArrayConfig = GetArrayConfig(DATA.name);%expid is the list of expts whhere ClusterTimes exist/are loaded%exptlist is the list of expts in CellDetails. Norammly the same.    if isfield(DATA.CellDetails,'exptids')        DATA.exptlist = DATA.CellDetails.exptids;    end    if isfield(DATA.ArrayConfig,'X')        DATA.nprobes = length(DATA.ArrayConfig.X);        if ~isfield(DATA,'probesep') || isempty(DATA.probesep)            DATA.probesep = DATA.ArrayConfig.spacing;        end    elseif size(DATA.CellList,2) > 0        DATA.nprobes = size(DATA.CellList,2);    end    DATA = PC.PlotCellList(DATA,'showfig');    if ~isfield(DATA,'exptid') && isfield(DATA.CellDetails,'exptids')        DATA.exptid = DATA.CellDetails.exptids;%        DATA = PC.LoadExpts(DATA);        for j = 1:length(DATA.exptid)            Clusters{j} = {};        end        setappdata(DATA.toplevel,'Clusters',Clusters);    end    if ~isfield(DATA,'exptid')        DATA.nexpts= 0;    else        DATA.nexpts = length(DATA.exptid);    end    DATA.selectprobe = zeros(DATA.nexpts,DATA.nprobes);    DATA.user = GetUserName;endif strcmp(runcmd,'checkrateseq')    varargout{1} = PC.CheckAllRateSequences(DATA);    varargout{1} = CopyFields(varargout{1},DATA, {'datadir', 'exptid' 'errs'});elseif strcmp(runcmd,'updatearray')    Clusters = getappdata(DATA.toplevel,'Clusters')    varargout{1} = UpdateArrayConfig(DATA.datadir,Clusters);    varargout{1} = CopyFields(varargout{1},DATA, {'datadir', 'exptid' 'errs'});endPC.SetGUI(DATA);set(DATA.toplevel,'UserData',DATA);