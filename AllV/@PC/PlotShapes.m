function DATA = PlotShapes(DATA, type)       [Clusters, DATA] = PC.CheckClusterLoaded(DATA, 1:length(DATA.exptid));   if strmatch(type,{'exptlines' 'exptimage'})       for j = 1:length(DATA.exptid)   nx = length(DATA.exptid);           for k = 1:DATA.nprobes;               spt(j,k)  =  Clusters{j}{k}.spts(1);               espt(j,k)  =  Clusters{j}{k}.spts(end);           end       end       minspt = min(spt(:));       fnpts = 1+max(espt(:))-minspt;  %total # pts needed to cover all spike ranges       for j = 1:length(DATA.exptid)           nv = 1;           fnv = 1;           for k = 1:DATA.nprobes;               V = Clusters{j}{k}.MeanSpike.ms;               allshape(j,nv:nv+size(V,2)-1) = V(k,:);               df = spt(j,k)-minspt;               fixshape(j,[fnv:fnv+size(V,2)-1]+df) = V(k,:);               spts = Clusters{j}{k}.spts -  minspt+1;%               fixshape(j,k,spts) = V(k,:);               nv = nv+size(V,2);               fnv = fnv+fnpts;               npts = size(V,2);               nvpts(j,k) = npts;           end       end       aspt = prctile(spt(:),50);       PC.SetFigure(DATA,DATA.tag.clusters);       fixed(1) = 0;       if strcmp(type,'exptimage')%build an image showing spike shape for each probe/expt%each row is an expt. Spikes from each probe are concatenated%calculate correleation coefficients wtih shifts between adjacent rows%(xcs)           for j = 2:length(DATA.exptid)               xcs(j-1,:) = PC.ShiftXcorr(fixshape, j, j-1,fnpts);               if max(xcs(j-1,:)) < 0.                   fixshape(j,:) = fixshape(j-1,:);                   fixed(j) = 1;               end           end           imagesc(xcs);           %calculate correleation coefficients wtih shifts between all row pairs%and find teh shfit that maximizes this (mxcs).            for j = 2:length(DATA.exptid)           for k = 1:j               x = PC.ShiftXcorr(fixshape, j, k,fnpts);               [a, b] =max(x);                mxcs(j,k) = b-8;                mxval(j,k) = a;           end           end           tvals = [];           jump = 1           for j = 2:nx               newvals = mxcs(j,jump:j-1);               tvals = [tvals newvals];               tmean(j) = sum(newvals) /sqrt(length(newvals));               if sum(newvals) > sqrt(length(newvals));                   jump = j;                   jumps(j) = mean(newvals);                   tvals = [];               end           end           jumps(nx) = 0;           id = find(jumps > 0);           id = [1 id nx];           imagesc(mxcs);           last = 1;           for j = 2:length(id)-1               js = mxcs(id(j):id(j+1),id(j-1):id(j)-1);               jump(j-1) = mean(js(:));               for k = 3:j                   js = mxcs(id(j):id(j+1),id(k-2):id(k-1)-1);                   xc = mxval(id(j):id(j+1),id(k-2):id(k-1)-1);                   alljump(j-1,k-1) = mean(js(xc > 0.7));               end               last = id(j);           end           for j = find(fixed)               xcs(j,:) = PC.ShiftXcorr(fixshape,j+1, j, npts);           end           [a,b] = max(xcs');           c = cumsum(b-8);           c = cumsum(jumps);           DATA.driftguess = cumsum(jumps);           DATA.shiftmatrix(1,:,:) = mxcs;           DATA.shiftmatrix(2,:,:) = mxval;           set(DATA.toplevel,'UserData',DATA);           M = mxcs;           if sum(mxval(:)>0.85) > prod(size(M))./4 %half are zero               mcrit = 0.85;           else               fprintf('!!!Warning. Spike shape cross correlations low. Drift Estimate may be poor\n');               mcrit = prctile(mxval(:),75);  %half are zeros anyway, so this is top 50%           end           M(mxval(:) < mcrit) = NaN;% M is a matrix of displacement estimates between all expt pairs% Now find the sigle drift estimate that best fits this matrix           [P, details] = FitDriftMatrix(M,'maxiter', 10000);           DATA.fitjumps = details.jumps;           c = cumsum([0 details.jumps]);           DATA.CellDetails.probedrift = c;           PC.SaveCellList(DATA);           PC.SaveExtras(DATA);           imagesc(fixshape);           hold on;           xoff = 910;           plot(xoff -fnpts.*c,1:length(c));           b = diff(b);       elseif strcmp(type,'exptimage')           imagesc(allshape);       else           clf;           colors = mycolors;           for j = 1:length(DATA.exptid)               plot(allshape(j,:)+j*0.5,'color',colors{1+mod(j-1,5)});               hold on;           end       end   else       spk = 1;       ids = [];       PC.SetFigure(DATA,DATA.tag.clusters);       clf;       for j = 1:DATA.nprobes           subplot(4,6,j);           Shape(DATA,j);           drawnow;       end   end