function sdx = PlotXYSequence(DATA, pos, varargin)    plottype = 'time';    T = DATA.Expt.Trials;    Expt = DATA.Expt;    setfig = 1;    j = 1;    while j <= length(varargin)        if strncmpi(varargin{j},'density',6)            plottype = varargin{j};        elseif strncmpi(varargin{j},'expt',4)            j = j+1;            Expt = varargin{j};            T = Expt.Trials;        elseif strncmpi(varargin{j},'noplot',6)            plottype = 'noplot';        end        j = j+1;    end        if isstruct(pos) %passed  Cluster        C = pos;        e = C.exptid;        p = C.probe;        setfig = 0;    else        Clusters = getappdata(DATA.toplevel,'Clusters');        e = pos(1);        p = pos(2);        C = Clusters{e}{p};    end    nc = unique(C.clst(:))';    nt = length(T);    if ~strcmp(plottype,'noplot')  && setfig    PC.SetFigure(DATA,DATA.tag.xyseq);    hold off;    end%    need to use time or trial bins for this test, as rate changes     if isfield(Expt.Header,'timeoffset')        toff = Expt.Header.timeoffset;    else        toff = 0;    end    allx = [];    ally = [];    for j = nc        xcl = PC.FindExcludedTrials(DATA,e,p,j-1, C);        id = find(C.clst == j);        if C.shape == 0            r = PC.CalcRadius(C, C.xy);        else            xy = xyrotate(C.xy(:,1),C.xy(:,2),C.angle);            r = xy(:,1);        end        if strcmp(plottype,'time')            plot(C.times(id)+toff,r(id),'.','color',DATA.colors{j},'buttondownfcn',@PC.HitXYseq);            hold on;        end        smw = round(nt/10);        if smw > 10            smw = 10;        end        for k = 1:nt-smw            ts(k) = T(k).Start(1)./10000;            if sum(ismember([k:k+smw],xcl) == 0)            if diff(size(C.clst)) > 0                id  = find(C.clst == j & C.times.*10000 > T(k).Start(1) & C.times.*10000 < T(k+smw).End(end));            else                id  = find(C.clst' == j & C.times.*10000 > T(k).Start(1) & C.times.*10000 < T(k+smw).End(end));            end            sds(k) = std(r(id));            sms(k) = mean(r(id));            else                sds(k) = NaN;                sms(k) = NaN;            end        end        sid = find(~isnan(sds));        sds = sds(sid);        sms = sms(sid);        ssds(j) = std(sds);        msds(j) = mean(sds);        sdx(j) = std(sds)./mean(sds);        mdx(j) = std(sms)./mean(sms);    endif strcmp(plottype,'time')    yl = get(gca,'ylim');    xl = get(gca,'xlim');    if yl(2) > 0        plot(ts(sid)+toff,sds .*yl(2)./max(sds),'ms');    else        plot(ts(sid)+toff,sds .*yl(1)./max(sds),'ms');    end    plot(ts(sid)+toff,sms,'r-');    if C.shape ~= 0        plot(minmax(ts)+toff,[C.crit C.crit],'r-');    end    PC.MarkTrialStarts(Expt,0,xcl);    title(sprintf('SDindex %.2f (%.2f/%.2f) CV %.2f',sdx(end),ssds(end),msds(end),mdx(end)));    set(gca,'buttondownfcn',@PC.HitXYseq);elseif strcmp(plottype,'density')    edges(1) = T(1).Start(1);    for j = 2:length(T);        edges(j) = (T(j).Start(1)+T(j-1).End(end))/2    end    edges(j+1) = T(j).End(end);    [a,b] = histc(C.times,edges./10000);    DensityPlot(b,r,'ynormal');end