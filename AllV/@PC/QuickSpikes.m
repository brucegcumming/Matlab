function [h, details] = QuickSpikes(DATA, pos, varargin)%[h, details] = QuickSpikes(DATA, pos, varargin) Show subset of spike from%a probe    oneprobeonly = 0;    scalebar = 1;    topcluster = 0;    labelpos = 'right';    ylim = [];    if isempty(pos)        return;    end    if isstruct(pos)        Spks = pos;        C = varargin{1};        e = find(DATA.exptid == floor(C.exptno));        o = 1+round(rem(C.exptno,1).*10);        if length(e) >= o            e = e(o);        else            e = e(1);        end        p = C.probe(1);        pos = [e p];        if size(C.MeanSpike.ms,1) == 1            mprobe = 1;        else            mprobe = p;        end        if ~isfield(Spks,'values')            return;        end        [DATA.voffset, ylim] = PC.SetVOffset(DATA, Spks, e, p);    else        e = pos(1);        p = pos(2);        AllSpikes = PC.CheckAllSpikes(DATA, e, p, 'allprobes');        Clusters = getappdata(DATA.toplevel,'Clusters');        C = Clusters{e}{p};        Spks = AllSpikes{e,p};        if isfield(C,'trigset') && DATA.currentcluster > 1            k = GetCellValue(C.next,DATA.currentcluster-1,'triggerset');            if k > 0                Spks = Spks.trigset{k};            end        end        maxv = CellToMat(AllSpikes(e,:),'VRange');        DATA.voffset =  cumsum(cat(1,maxv(2:end,2), maxv(end,2))) - cumsum(maxv(:,1));        DATA.voffset = DATA.voffset * 0.7;        DATA.voffset = PC.SetVOffset(DATA, AllSpikes, e, p);        mprobe = pos(2);    end    plotargs = {};showtitle = 1;    showmean = 0;    j = 1;    while j <= length(varargin)        if strncmpi(varargin{j},'oneprobe',8)            oneprobeonly = 1;        elseif strncmpi(varargin{j},'ontop',5)            plotargs = {plotargs{:} varargin{j}};            topcluster = varargin{j+1};        elseif strncmpi(varargin{j},'scalebar',6)            j = j+1;            scalebar = varargin{j};        elseif strncmpi(varargin{j},'showmean',8)            showmean = 1;        elseif strncmpi(varargin{j},'labelpos',8)            plotargs = {plotargs{:} varargin{j} varargin{j+1}};            j = j+1;            labelpos = varargin{j};        else            plotargs = {plotargs{:} varargin{j}};        end        j = j+1;    end    details = [];    if ~isfield(Spks,'times') %will happen if this file is missing        h = 0;        return;    end    if isfield(Spks,'maxv') && strcmp(class(Spks(1).values),'int16')        for j = 1:length(Spks)        Spks(j).values = double(Spks(j).values) .* double(Spks(j).maxv./Spks(j).maxint);        end    end    nevents = length(Spks(1).times);    if nevents > 50000        nspks = 1000;    else        nspks = 500;    end    istep = max([1 round(nevents/nspks)]);    ispk = 1:istep:nevents;    if length(C.clst) >= nevents && sum(C.clst(ispk) > 1) == 0 && sum(C.clst > 1) > 0 %no classified spikes        xspk = find(C.clst > 1);        ispk = [ispk xspk(1) xspk(end)];    end    if topcluster > 0 && sum(C.clst(ispk) == topcluster) == 0 %no spikes for the cluster of interest        xspk = find(C.clst == topcluster);        ispk = [ispk xspk(1) xspk(end)];    end    details.ispk = ispk;    DATA.usegmcid = 0;    DATA.plotspk.bytrial = 0;    yl = minmax(Spks(1).values(:));    voff = DATA.voffset - DATA.voffset(p);    if ~isempty(ylim)        yl = ylim;    elseif oneprobeonly        Spks = rmfields(Spks(1),'xvalues');    elseif length(Spks) == 3        yl(2) = voff(Spks(3).probe) + Spks(3).VRange(2);        yl(1) = voff(Spks(2).probe) + Spks(2).VRange(1);    elseif isfield(Spks,'xvalues')        yl(2) = voff(max([Spks.xchans Spks.probe])) + Spks.xmaxv;        yl(1) = voff(min([Spks.xchans Spks.probe])) - Spks.xmaxv;    end    h = PC.PlotSpikes(DATA, pos, ispk, Spks, C, 'fixy',yl,plotargs{:});    id = find(h == 0); %no spikes plotted    for j = id(:)'        ispk = find(C.clst == j);        if length(ispk)        ispk = ispk([1 end]);        x = PC.PlotSpikes(DATA, pos, ispk, Spks, C, 'fixy',yl,'holdon', plotargs{:});        h(j) = x(j,1);        end    end    hold on;    if showmean        plot(C.MeanSpike.mu(mprobe,:),'-','color','k');        for j = 2:size(h,1)            if h(j) > 0 & ishandle(h(j))                color = get(h(j),'color');                color = 1-color;                if j > 2                    if isfield(C.next{j-2},'MeanSpike')                    details.meanh(j) = plot(C.next{j-2}.MeanSpike.ms(mprobe,:),'-','color',color,'linewidth',2);                    end                else                    details.meanh(j) = plot(C.MeanSpike.ms(mprobe,:),'-','color',color,'linewidth',2);                end            end        end        if length(h) < 2             details.meanh(2) = plot(C.MeanSpike.ms(mprobe,:),'-','color',DATA.colors{2},'linewidth',2);        end    end    plot([1 1],[0 -scalebar],'k-','linewidth',2); %scale bar    axdata = get(gca,'UserData');    axdata.toplevel = DATA.toplevel;    axdata.probe = p;    axdata.eid = e;    set(gca,'UserData',axdata);