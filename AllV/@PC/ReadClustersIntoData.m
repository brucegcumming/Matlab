function DATA = ReadClustersIntoData(DATA, Clusters, exid)        j = exid;    if DATA.useautoclusters        AutoClusters = getappdata(DATA.toplevel,'AutoClusters');    end        for k = 1:length(Clusters)        C = Clusters{k};    if isfield(C,'space')        if C.space(1) == 6            PC.CheckFitDim(C);        end        if size(C.MeanSpike.ms,1) > 1            A = std(C.MeanSpike.mu');            DATA.muvar(j,k) = A(k);            A = std(C.MeanSpike.ms');            [a,b] = max(A);            DATA.peakdiff(j,k) = b-k;            DATA.mspkvar(j,k) = A(k);            xi = [1:0.1:length(A)];            y = InterpGauss1([1:length(A)],A,xi,1.5);            [a,b] = max(y);            DATA.peakpos(j,k) = xi(b);        else            DATA.mspkvar(j,k) = std(C.MeanSpike.ms);            DATA.muvar(j,k) = std(C.MeanSpike.mu);            DATA.peakpos(j,k) = k;            DATA.peakdiff(j,k) = 0;        end        DATA.mahal(j,k,1) = C.mahal(1); %2-D        if DATA.useautoclusters            DATA.automahal(j,k,1) = AutoClusters{j}{k}.mahal(1); %2-D            DATA.automahal(j,k,3) = AutoClusters{j}{k}.mahal(4); %1-D            DATA.automahal(j,k,4) = AutoClusters{j}{k}.mahal(2);            DATA.automahal(j,k,2) = AutoClusters{j}{k}.mahal(2);        end        if length(C.mahal) > 3            DATA.mahal(j,k,3) = C.mahal(4); %1-D        end        if isfield(C,'clst')            DATA.nclusters(j,k) = max(C.clst)-1;        else            DATA.nclusters(j,k) = 1;        end        if isfield(C,'pcgms')            DATA.pcgms(j,k,1:length(C.pcgms)) = C.pcgms;        end        DATA.mahal(j,k,4) = C.mahal(2); %N-D        if isfield(C,'bestspace')            DATA.mahal(j,k,2) = C.bestspace(1); %N-D            if isfield(C,'bestd')                DATA.bestd(j,k,:) = C.bestd;            end        else            DATA.mahal(j,k,4) = C.mahal(2); %N-D        end        if isfield(C,'marked')             if C.marked == 3                DATA.marked(j,k) = 100;            elseif C.marked == -1000; %bad expt                DATA.marked(j,k) = 101;            end        end        if C.space(1) == 6            DATA.cutspace(j,k) = C.space(2);        else            DATA.cutspace(j,k) = 5+C.space(1);        end        DATA.cutshape(j,k) = C.shape;        if isfield(C,'Evec') && isfield(C.Evec,'Eval')            DATA.eveci(j,k) = C.Evec.Eval(1)./sum(C.Evec.Eval);        end        xc = corrcoef(C.MeanSpike.ms(:),C.MeanSpike.mu(:));        DATA.mucorrs(j,k) = xc(1,2);        xc = (C.MeanSpike.ms(:)' * C.MeanSpike.mu(:)) ./ (C.MeanSpike.ms(:)'*C.MeanSpike.ms(:));        DATA.muampl(j,k) = xc;        if isfield(C,'dpsum')        DATA.dpsum(j,k) = sum(C.dpsum);        end        if isfield(C,'gmfit')            DATA.fitres(j,k) = C.gmfit.Converged;        end        if isfield(C,'gmfit1d') && isfield(C.gmfit1d,'Converged')            DATA.fitres1d(j,k) = C.gmfit1d.Converged;        end        if C.space(1) == 6  %an N-D mahal fit;            DATA.fitspace(j,k) = 10+C.space(2);        else            DATA.fitspace(j,k) = C.space(1);        end        DATA.pcspace(j,k) = C.dvdt + C.csd.*2;        DATA.ctimes(j,k,2) = C.ctime;        DATA.isauto(j, k) = C.auto;        if isfield(C,'manual') && C.manual > 0            DATA.isauto(j,k) = 3;        end        if isfield(C,'starttime') && C.auto ==1            DATA.ctimes(j,k,1) = C.starttime;        else            DATA.ctimes(j,k,1) = C.ctime;        end        if isfield(C,'first')            F = C.first;            ndive = 1;            while(isfield(F,'first'))                F = F.first;                ndive = ndive+1;            end            if DATA.ctimes(j,k,1)-F.starttime > 0.2                fprintf('Very long firsttime Ex%d, P%d (%d) %.2f %s vs %s\n',...                    j,k,C.auto,DATA.ctimes(j,k,1)-F.starttime,datestr(DATA.ctimes(j,k,1)),datestr(F.starttime));            else                DATA.ctimes(j,k,1) = F.starttime;            end            DATA.thriter(j,k) = ndive;            %            DATA.ctimes(j,k,1) = F.starttime;        else            DATA.thriter(j,k) = 0;        end        if isfield(C,'savetime')            DATA.ctimes(j,k,3) = C.savetime(end);        else            DATA.ctimes(j,k,3) = lastc.ctime;        end        if isfield(C,'fitdprime')            DATA.GaussFitdp(j,k,2) = C.fitdprime(1);            if isfield(C,'gmdprime')                DATA.GaussFitdp(j,k,1) = C.gmdprime;            else                DATA.GaussFitdp(j,k,1) = C.mahal(1);            end            if length(C.fitdprime) >= 3                DATA.gmfitpos(j,k,:) =C.fitdprime(2:3);%now the value is signed, don't ned this check for overlap.                                if sum(C.fitdprime(2:3)) < 2%                    DATA.GaussFitdp(j,k,2) = 0;                end            end        elseif isfield(DATA,'GaussFitdp') && j <= size(DATA.GaussFitdp,1) && k <= size(DATA.GaussFitdp,2)% this iss only of old files where this was calculated in plotclusters,% after allvpcs%            Clusters{j}{k}.fitdprime(1) = DATA.GaussFitdp(j,k,2);        end        DATA.nevents(j,k) = C.nspks;        if isfield(C,'clst')        DATA.nspks(j,k) = sum(C.clst > 1);        end        DATA.dropi(j,k,1) = C.dropi(3);        for c = 1:length(C.next)            if isfield(C.next{c},'dropi')                DATA.dropi(j,k,c+1) = C.next{c}.dropi(3);            end        end        if ~isfield(C,'clusterprog') || isempty(C.clusterprog)            DATA.clusterprog(j,k) = 0;        else            DATA.clusterprog(j,k) = strmatch(C.clusterprog(1:7),{'AllVPcs' 'PlotClusters'});        end    end    lastc = C;end