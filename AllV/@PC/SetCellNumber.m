function SetCellNumber(a,b, fcn)DATA = GetDataFromFig(a);modifier = 0;cellid = 0;    e = DATA.currentpoint(1);    p = DATA.currentpoint(2);%Check that Clusters are loaded. SetCellEntry Uses this[Clusters, DATA] = PC.CheckClusterLoaded(DATA, e);if sum(strcmp(fcn,{'set' 'duplicates'}))    it = findobj(get(a,'parent'),'Tag','ClusterModifier');    if ~isempty(it)        modifier = get(it,'value');        strs = get(it,'string');        modstr = deblank(strs(modifier,:));        if modifier > 6            DATA.CellDetails.note(DATA.currentpoint(1),DATA.currentpoint(2)) = get(it,'value');            DATA.CellDetails.notestr = get(it,'string');        end        if modifier >  6        set(it,'value',1);        end    end    it = findobj(get(a,'parent'),'Tag','CellNumberId');        if isempty(it)            return;        end        cellid = get(it,'value');        if strcmp(fcn,'duplicates')            cellid = -cellid;        end    if sum(DATA.selectprobe(:)) > 0 &&  ismember(modifier, [1 2 3 4 5 6])        for j = 1:size(DATA.selectprobe,1)            p = find(DATA.selectprobe(j,:) > 0);            if length(p) > 1                errordlg(sprintf('%d probes selected in expt %d',length(p),j));            elseif length(p)                DATA = PC.SetCellEntry(DATA, Clusters{j}{p}, j,p, modifier, cellid,'nosave');            end        end        PC.PlotCellList(DATA,'showfig');        set(DATA.toplevel,'UserData',DATA);        PC.SaveCellList(DATA);        return;    end        if ~isempty(it)        cellid = get(it,'value');        DATA.currentcell = cellid;        if strcmp(modstr,'Quality-poor');            DATA = PC.SetCellEntry(DATA, Clusters{DATA.currentpoint(1)}{DATA.currentpoint(2)}, DATA.currentpoint(1),DATA.currentpoint(2), -2, cellid);        elseif strcmp(modstr,'Quality-suboptimal');            DATA = PC.SetCellEntry(DATA, Clusters{DATA.currentpoint(1)}{DATA.currentpoint(2)}, DATA.currentpoint(1),DATA.currentpoint(2), -1, cellid);        elseif strncmp(modstr,'Use Templates',10)            id = find(DATA.CellList == cellid);            DATA.CellList(id) = 0;            DATA.CellDetails.Templates(cellid,:) = DATA.templateid;            id = find(DATA.usepeaks > 0);            for j = id;                oldcell = DATA.CellList(j,DATA.usepeaks(j),DATA.cellcluster);                DATA.CellList(j,DATA.usepeaks(j),DATA.cellcluster) = cellid;                DATA.CellDetails.Quality(j,DATA.usepeaks(j),DATA.cellcluster) = 4;                DATA.CellChanges = cat(1,DATA.CellChanges,[j DATA.usepeaks(j) cellid DATA.cellcluster now oldcell]);            end            %        id = find(DATA.usepeaks == 0);            %       deletes = sum(DATA.CellList(id,:) == cellid);            PC.SaveCellList(DATA);        elseif ismember(modifier, [1 2 3 4 5 6])            DATA = PC.SetCellEntry(DATA, Clusters{DATA.currentpoint(1)}{DATA.currentpoint(2)}, DATA.currentpoint(1),DATA.currentpoint(2), modifier, cellid);        end        set(DATA.toplevel,'UserData',DATA);    end    PC.PlotCellList(DATA,'showfig');elseif strcmp(fcn,'delete')    it = findobj(get(a,'parent'),'tag','CellCluster');    cl = get(it,'value');    it = findobj(get(a,'parent'),'Tag','CellNumberId');    if length(it) == 1        cellid = get(it,'value');    end    DATA = PC.DeleteCell(DATA, DATA.currentpoint(1),DATA.currentpoint(2),cl);    [a,b] = find(DATA.selectprobe);    for j  = 1:length(a)        id = find(ismember(DATA.CellList(a(j),b(j),:),cellid));        if length(id) == 1            DATA.cellcluster = id;            DATA = PC.DeleteCell(DATA, a(j), b(j), DATA.cellcluster);        end    end    PC.SaveCellList(DATA);    DATA.selectprobe = zeros(length(DATA.exptid),DATA.nprobes);    PC.PlotCellList(DATA, 'showfig');    set(DATA.toplevel,'UserData',DATA);elseif strcmp(fcn,'change')    DATA.currentcell = get(a,'value');    PC.CellChanged(DATA);    cl = find(DATA.CellList(e,p,:) == DATA.currentcell);    if cl > 0        it = findobj('Tag','CellCluster');        set(it,'value',cl);    end    set(DATA.toplevel,'UserData',DATA);end