function DATA = TrackCluster(DATA, spk, ex, varargin)    j = 1;    usegrid = [];    maxdistance = 4;    minmahal = 2;    while j <= length(varargin)        if strncmpi(varargin{j},'usepts',6)            j = j+1;            usegrid = varargin{j};            minmahal = 0;        end        j = j+1;    endClusters = getappdata(DATA.toplevel,'Clusters');src = Clusters{ex}{spk};PC.SetFigure(DATA,DATA.tag.templatesrc);PC.PlotMeanSpike(Clusters{ex}{spk},spk,1);PC.SetFigure(DATA,DATA.tag.clusters);if length(usegrid)    [a,b] = find(usegrid > 0);    for j = 1:length(a)          xc(a(j),b(j)) = PC.CalcTemplateXcorr(src, Clusters{a(j)}{b(j)});    endelse    for j = 1:length(Clusters);      for k = 1:length(Clusters{j});          xc(j,k) = PC.CalcTemplateXcorr(src, Clusters{j}{k});      end    endendhold off;imagesc(xc,'buttondownfcn',{@PC.HitImage, 1});set(gcf,'KeyPressFcn',{@PC.KeyPressed, 2}, 'Keyreleasefcn',{@PC.KeyReleased, 3});set(gca,'UserData',DATA.toplevel);hold on;if isfield(DATA,'probesep')%calculate electode pos relative to refernence exp, in multiples of probe%spacing.    probesep = median(DATA.probesep);    epos = (DATA.electrodedepth - DATA.electrodedepth(ex)) * 1000./probesep;else    probesep = 0;    epos = zeros(size(DATA.electrodedepth));endxid = spk-2:spk+2;xid = xid(xid > 0 & xid <= size(xc,2));for j = ex:size(xc,1)    if isempty(xid)        peaks(j) = NaN;    else    [rmax(j), peaks(j)] = max(xc(j,xid));    peaks(j) = peaks(j)+xid(1)-1;    end    if j < size(xc,1) && peaks(j) > minmahal    xid = peaks(j)-2:peaks(j)+2;    xid = xid(xid > 0 & xid <= size(xc,2));    xid = xid(abs(xid - spk - epos(j+1)) < maxdistance);    endendxid = spk-2:spk+2;xid = xid(xid > 0 & xid <= size(xc,2));for j = ex:-1:1    [rmax(j), peaks(j)] = max(xc(j,xid));    peaks(j) = peaks(j)+xid(1)-1;    xid = peaks(j)-2:peaks(j)+2;    if j > 1        ediff = epos(j-1)-epos(j);        xid = xid(abs(xid - spk - epos(j-1)) < maxdistance);        if isempty(xid)            xid = peaks(j)-2:peaks(j)+2;            if abs(ediff) > 2%                xid = xid - round(ediff);            end        end    end    xid = xid(xid > 0 & xid <= size(xc,2));    end%[rmax,peaks] = max(xc');plot(spk-epos,1:size(xc,1),'w-')plot(peaks,1:size(xc,1),'buttondownfcn',{@PC.HitImage, 1});square = [-.5 0.5 0.5 -0.5 -0.5; -0.5 -0.5 0.5 0.5 -0.5];%use 1D or 2D mahal, whichever is bettermahald = max(DATA.mahal(:,:,[1 3]),[],3);for j = 1:length(peaks)    if isnan(peaks(j))        DATA.usepeaks(j) = 0;    elseif mahald(j,peaks(j)) > DATA.crit.mahal && xc(j,peaks(j)) > DATA.xccrit        plot(square(1,:)+peaks(j),square(2,:)+j,'w-','buttondownfcn',{@PC.HitImage, 1},'linewidth',2);        DATA.usepeaks(j) = peaks(j);    else        DATA.usepeaks(j) = -peaks(j); %best score, but not cell    endendif isfield(DATA,'CellDetails') && isfield(DATA.CellDetails,'Templates')    for j = 1:size(DATA.CellDetails.Templates,1)        if ex == DATA.CellDetails.Templates(j,2) && spk == DATA.CellDetails.Templates(j,1)            cellid = j;            for k = 1:size(DATA.CellList,1)                p = find(DATA.CellList(k,:,1) == cellid);                if length(p) && p ~= DATA.usepeaks(k)                    plot(square(1,:)+p,square(2,:)+k,'w--','buttondownfcn',{@PC.HitImage, 1},'linewidth',2);                end            end        end    endendDATA.steptype = 2;DATA.markcc = NaN;DATA.templatexc = xc;title(sprintf('Tempate Ex %d(%d) P%d',ex,Clusters{ex}{spk}.exptno,spk));set(DATA.toplevel,'UserData',DATA);