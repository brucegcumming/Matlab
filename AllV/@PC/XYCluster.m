function XYCluster(src,b, type, varargin)DATA = GetDataFromFig(src);EClusters = getappdata(DATA.toplevel,'Clusters');useaxdata = 0;j = 1;while j <= length(varargin)    if strncmpi(varargin{j},'useaxdata',6)        useaxdata = 1;    end    j = j+1;ende = DATA.currentpoint(1);p = DATA.currentpoint(2);if useaxdata    axdata = get(gca,'UserData');    if isfield(axdata,'probe');        p = axdata.probe;    end    if isfield(axdata,'eid');        e = axdata.eid;    endendC = EClusters{e}{p};ex = C.exptno;tag = PC.GetFigureTag(src);if sum(strncmp(type,{'ellipse' 'flip'},7))    C = PC.UpdateWithNewCut(C, DATA);end    onoff = {'on','off'};        subtype = strmatch(type,{'bestangle' 'quickangle'});    if sum(strcmp(type,{'save' 'quicksave'}))        DATA = PC.SaveCluster(DATA, [e p], strcmp(type,'quicksave'));    elseif strcmp(type,'flip')        DATA = PC.FlipLineCrit(DATA);    elseif strcmp(type,'optimize')        axdata = get(gca,'userdata')        if isfield(axdata,'eid')            e = axdata.eid;            p = axdata.probe;        end        PC.FixBoundary(DATA, EClusters, e, p);    elseif strcmp(type,'twoplot')        DATA.ellmousept.shape = -1;        DATA.allclustering = 0;        set(DATA.toplevel,'UserData',DATA);        hold off;        PC.PlotClusterXY(DATA,C,'cellid',[1 2]);        PC.FastAxes(gca);    elseif strcmp(type,'nocut')        DATA.elmousept.shape = -1;        DATA.allclustering = 0;        set(DATA.toplevel,'UserData',DATA);    elseif strmatch(type,{'bestangle' 'quickangle'})        if subtype == 2            [a,b,c] = PC.BestAngleGM(C.xy, [], [],'quick');        else            [a,b,c] = PC.BestAngleGM(C.xy, [], []);        end        C.gmfit1d = c.gmfit;        C.crit = c.crit;        PC.SetFigure(DATA,DATA.tag.xyplot);        hold on;        if abs(cos(a)) > 0        yl = get(gca,'ylim');        xl = get(gca,'xlim');        k = (yl + c.crit .* sin(a))./cos(a);        cx =  c.crit *cos(a) + k * sin(a);        dx = (diff(yl) .* tan(a))/2;        plot(cx,yl);        end        fprintf('Best 1d %.2f\n',b);        if DATA.plot.hist            PC.SetFigure(DATA,DATA.tag.hist)            PC.PlotHist(c.xy,C);            title(sprintf('Best Angle %.1f deg mahal %.2f',a *180/pi,b));            DATA.tag.misc = 'Misc';            PC.SetFigure(DATA,DATA.tag.misc);            hold off;            plot(c.angles,c.d);            if subtype == 1            hold on;            plot(c.angles,abs(c.dprime),'r');            end        end    elseif strncmp(type,'flipline',5)     elseif strncmp(type,'testline',5)         tic;        line(get(gca,'xlim'),get(gca,'ylim'));        drawnow('update');        toc;    elseif strncmp(type,'clear',5)         F = get(get(src,'parent'),'parent');        if ~isfigure(F) %if called from submenu, go up one more            F = get(F,'parent');        end        cnum = sscanf(type,'clear%d');        id = find(EClusters{e}{p}.clst == cnum+1);        EClusters{e}{p}.clst(id) = 1;        EClusters{e}{p}.next{cnum-1} = [];        EClusters{e}{p}.deleted(cnum) = now;        DATA.NewCut.saved = -1;        setappdata(DATA.toplevel,'Clusters',EClusters);        set(DATA.toplevel,'UserData',DATA);        PC.PlotClusterXY(DATA,EClusters{e}{p});    elseif strncmp(type,'select',6)        DATA.currentcluster = sscanf(type(7:end),'%d');        PC.PlotClusterXY(DATA,C,'cellid',DATA.currentcluster);    elseif strncmp(type,'ellipse',7) || strcmp(type,'lines')        F = get(get(src,'parent'),'parent');        if ~isfigure(F) %if called from submenu, go up one more            F = get(F,'parent');        end        if strcmp(tag,DATA.tag.allxy)            DATA = PC.SetAllXYClustering(DATA,1);        end        DATA.elmousept.h= -1;        DATA.elmousept.down = 0;        DATA.elmousept.done = 0;        DATA.elmousept.steps = 0;        DATA.elmousept.angle = 0;        DATA.elmousept.cluster = 1;        shapes = [0 1 0];        DATA.elmousept.shape = shapes(strmatch(type(1:5),{'ellipses' 'lines'}));        if DATA.elmousept.shape == 0            DATA.elmousept.cluster = sscanf(type(8:end),'%d');            DATA.elmousept.plotargs = {'color' DATA.colors{DATA.elmousept.cluster+1}};        else            DATA.elmousept.plotargs = {'color' 'r'};        end        DATA.elmousept.color = [1 0 0];        DATA.currentcluster = DATA.elmousept.cluster;        DATA.currentcutcluster = DATA.elmousept.cluster;        if DATA.currentcutcluster > 1            if length(C.next) <  DATA.currentcluster-1 || ~isfield(C.next{DATA.currentcutcluster-1},'xy')%  Count available spaces. NB Counting over C.next, so there is one more in%  C                for j = 1:length(C.next)                    if isfield(C.next{j},'xy')                        gotxy(j) = 1;                    else                        gotxy(j) = 0;                    end                end                gid = find(gotxy)+1;                switch sum(gotxy)                    case 1,                         str = questdlg(sprintf('No XY for Cluster %d: Choose Space',DATA.currentcutcluster),'Select Space','Cluster1',sprintf('Cluster%d',gid(1)),'Cluster1');                        usespace = sscanf(str,'Cluster%d')-1;                    case 2,                         str = questdlg(sprintf('No XY for Cluster %d: Choose Space',DATA.currentcutcluster),'Select Space','Cluster1',sprintf('Cluster%d',gid(1)),sprintf('Cluster%d',gid(2)),'Cluster1');                        usespace = sscanf(str,'Cluster%d')-1;                    otherwise,                        if sum(gotxy) > 2                            a = inputdlg(sprintf('Choose From 1%s',sprintf(' %d',gid)),'Set Cluster Space to use (Options%s)');                            usespace = str2num(a{1})-1;                        else                    usespace = 0;                    errordlg(sprintf('No XY for Cluster %d: Using 1',DATA.currentcutcluster));                        end                end                figure(F);                if usespace == 0                    XY = C.xy;                elseif isfield(C.next{usespace},'xy')                    XY = C.next{usespace}.xy;                else                    errordlg(sprintf('No XY for Cluster %d: Using 1',usespace+1));                    XY = C.xy;                end                C.next{DATA.currentcutcluster-1}.xy = XY;                C.next{DATA.currentcutcluster-1}.exptid = C.exptid;                DATA.elmousept.xyspace = usespace;            else                XY = C.next{DATA.currentcutcluster-1}.xy;            end            if isfield(C.next{DATA.currentcutcluster-1},'pos');                DATA.elmousept.pos = C.next{DATA.currentcutcluster-1}.pos;            else                DATA.elmousept.pos = C.pos;            end            if ~isfield(C.next{DATA.currentcutcluster-1},'xyr')                DATA.elmousept.xyr = C.xyr;                DATA.elmousept.angle = C.angle;            else                DATA.elmousept.xyr = C.next{DATA.currentcutcluster-1}.xyr;                DATA.elmousept.angle = C.next{DATA.currentcutcluster-1}.angle;            end        else            XY = C.xy;            DATA.elmousept.angle = C.angle;            if isfield(C,'pos')                DATA.elmousept.pos = C.pos;                DATA.elmousept.xyr = C.xyr;            end        end        if ~isfield(DATA.elmousept,'xyr') || length(DATA.elmousept.xyr) < 3            DATA.elmousept.xyr(3) = 0;        end        hold off;        PC.PlotClusterXY(DATA,C,'cellid',DATA.currentcutcluster);        PC.AddCellLabels(DATA, DATA.currentpoint(1), DATA.currentpoint(2),'NW');        PC.FastAxes(gca);%        DATA.elmousept.dragfcn = get(F,'WindowButtonMotionFcn');        %should get old Fcns, then reset them after button release        set(F, 'WindowButtonDownFcn',@PC.XYButtonPressed);        set(F, 'WindowButtonMotionFcn',@PC.XYButtonDragged);        set(F, 'WindowButtonUpFcn',@PC.XYButtonReleased);        set(F, 'WindowScrollWheelFcn',@PC.ScrollWheel);        set(F,'UserData',DATA.toplevel);        set(DATA.toplevel,'UserData',DATA);       elseif strncmp(type,'replot',6)        hold off;        if strcmp(type,'replotgm')            PC.PlotClusterXY(DATA,C,'plotgmcid');        else            PC.PlotClusterXY(DATA,C);        end        DATA.NewCut.exptid = 0;        DATA.NewCut.probe = 0;        set(DATA.toplevel,'UserData',DATA);    elseif strncmp(type,'revert',6)        e = DATA.currentpoint(1);        p = DATA.currentpoint(2);        X = PC.ReloadClusters(DATA, e);        EClusters{e}{p} = X{p};        setappdata(DATA.toplevel,'Clusters',EClusters);        DATA.NewCut.exptid = 0;        DATA.NewCut.probe = 0;        PC.SetFigure(DATA,DATA.tag.xyplot); hold off;        PC.PlotClusterXY(DATA,X{p});        set(DATA.toplevel,'UserData',DATA);    end