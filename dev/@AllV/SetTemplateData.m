 function DATA = SetTemplateData(DATA,  cl, varargin)          force = 0;     j = 1;     while j <= length(varargin)         if strncmpi(varargin{j},'force',4)             force = 1;         end         j = j+1;     end     DataClusters = AllV.mygetappdata(DATA,'Clusters');     if cl ==1          C = DATA.cluster;     else         C = DATA.cluster.next{cl-1};         if ~isfield(C,'TemplateUsed') && isfield(DATA.cluster,'TemplateUsed')             C.TemplateUsed = DATA.cluster.TemplateUsed;             if isfield(DATA.cluster,'DprimeUsed')                 C.DprimeUsed = DATA.cluster.DprimeUsed;             end             DATA.cluster.next{cl-1} = C;         end         if ~isfield(C,'chspk')              if isfield(DATA.cluster,'chspk')                 C.chspk = DATA.cluster.chspk;             else                 C.chspk = DATA.chspk;             end         end     end     p = DATA.cluster.probe(1);     [needtemplate, plottypes] = AllV.NeedTemplateForCluster(C,0);          if needtemplate || force         recalc = 0;         if ~isfield(DATA,'TemplateScores')             recalc = 1;         elseif isfield(C,'TemplateUsed') && sum(size(DATA.TemplateUsed) == size(C.TemplateUsed)) <2             recalc = 1;         elseif sum(abs(DATA.TemplateUsed(:)-C.TemplateUsed(:))) > 0.1 .* std(DATA.TemplateUsed)             recalc = 1;         elseif max(DATA.uid) > size(DATA.TemplateScores,1) || DATA.nevents ~= size(DATA.TemplateScores,1)%retriggered             recalc = 1;         end                      if isfield(C,'TemplateUsed') && recalc                          if cl == 1                 DATA.cluster.neednewtemplate = 0;             else                 DATA.cluster.next{cl-1}.neednewtemplate = 0;             end             if DATA.plottype == 7                 DATA = AllV.CalcTemplatesFromMean(DATA,DATA.cluster.TemplateUsed,'stdtemplate');             else                 if size(C.TemplateUsed,1) == length(C.chspk)                     C.MeanSpike.ms(DATA.cluster.chspk,:) = C.TemplateUsed;                     if isfield(C,'DprimeUsed') && size(C.DprimeUsed,1) == length(DATA.chspk)                         C.MeanSpike.vdprime(DATA.cluster.chspk,:) = C.DprimeUsed;                     end                     if isfield(C,'mumeanUsed') && size(C.mumeanUsed,1) == length(DATA.chspk)                         C.MeanSpike.mu(DATA.cluster.chspk,:) = C.mumeanUsed;                     end                     if isfield(C.MeanSpike,'othermeans')                         C.MeanSpike.othermeans = C.MeanSpike.othermeans;                     end                     if isfield(C,'next') && length(C.next) &&  isfield(C.next{1},'TemplateUsed')                         if size(C.next{1}.TemplateUsed,1) == length(C.chspk) && isfield(C.next{1},'MeanSpike')                             C.MeanSpike.othermeans{1} = C.next{1}.MeanSpike.ms;                             C.MeanSpike.othermeans{1}(C.chspk,:) = C.next{1}.TemplateUsed;                         else                             C.MeanSpike.othermeans{1} = C.next{1}.TemplateUsed;                         end                     end                     DATA = AllV.CalcTemplatesFromMean(DATA,C.MeanSpike);                 else                     MeanSpike = C.MeanSpike;                     if isempty(C.TemplateUsed)                         DATA = AllV.AddErr(DATA,'Empty TemplateUsed in  C%d',C.probe(1));                     else                         MeanSpike.ms = C.TemplateUsed;                     end%if calculations used dVdt, size will be 1 shorter                                          if isfield(C,'DprimeUsed') && size(C.DprimeUsed,1) == length(DATA.cluster.chspk)                         MeanSpike.vdprime(DATA.cluster.chspk,1:size(C.DprimeUsed,2)) = C.DprimeUsed;                     end                     if isfield(C,'mumeanUsed') && size(C.mumeanUsed,1) == length(DATA.cluster.chspk)                         MeanSpike.mu(DATA.cluster.chspk,:) = C.mumeanUsed;                     end                     if isfield(DATA.cluster.MeanSpike,'othermeans')                         MeanSpike.othermeans = DATA.cluster.MeanSpike.othermeans;                     end                     if cl == 1                         if isfield(C,'next') && length(C.next) && isfield(C.next{1},'TemplateUsed')                             if size(C.TemplateUsed,1) == length(C.chspk)                                 MeanSpike.othermeans{1} = C.next{1}.MeanSpike.ms;                                 MeanSpike.othermeans{1}(C.chspk,:) = C.next{1}.TemplateUsed;                             else                                 MeanSpike.othermeans{1} = C.next{1}.TemplateUsed;                             end                         end                     else                         MeanSpike.othermeans{1} = DATA.cluster.MeanSpike.ms;                     end                     nm=1;                     if length(DataClusters) >= p                     if p > 1 && isfield(DataClusters{p-1},'TemplateUsed') && ~isempty(DataClusters{p-1}.TemplateUsed)                         nm=nm+1;                         MeanSpike.othermeans{nm} = DataClusters{p-1}.TemplateUsed;                     end                     if p < length(DataClusters) && isfield(DataClusters{p+1},'TemplateUsed') && ~isempty(DataClusters{p+1}.TemplateUsed)                         nm=nm+1;                         MeanSpike.othermeans{nm} = DataClusters{p+1}.TemplateUsed;                     end                     end                     DATA = AllV.CalcTemplatesFromMean(DATA,MeanSpike);                 end                 if cl > 1                     DATA.cluster.next{cl-1}.DprimeUsed = DATA.DprimeUsed;                 else                     DATA.cluster.DprimeUsed = DATA.DprimeUsed;                 end             end         elseif recalc             DATA = AllV.CalcTemplatesFromMean(DATA,C.MeanSpike);         end     end