function X = PlotLFPpwr(X, varargin);
%
%Plot responses generated by PlotMLFP;
%
%[~,X] = PlotMLFP(LFP,'ftpwr','lines')
% PlotMLFP(X,...)

smw = 0;
colors = mycolors;
tight = 1;
printlabels = 0;
calcresp = 0;
coloroff = 0;
plotargs = {};
aplotargs = {}; %things to pass to set(gca)
pid = [];
explot = [];
holdon = 0;
gtitle = '';
calcfreq = [];

j =1;
while j <= length(varargin)
    if strncmpi(varargin{j},'calcresp',5)
        calcresp = 1;
        if length(varargin) > j && ischar(varargin{j+1}) && isfield(X,varargin{j+1})
            j = j+1;
            explot = varargin{j};
            expts = 1;
        elseif iscell(varargin{j+1});
            j = j+1;
            expts = varargin{j};
            explot = expts{1};
        end
    elseif strncmpi(varargin{j},'calcfreq',5)
        j = j+1;
        calcfreq = varargin{j};
    elseif strncmpi(varargin{j},'coloroff',3)
        j = j+1;
        coloroff = varargin{j};
    elseif strncmpi(varargin{j},'hold',4)
        holdon = 1;
    elseif strncmpi(varargin{j},'ids',3)
        j = j+1;
        pid = varargin{j};
    elseif strncmpi(varargin{j},'print',3)
        printlabels = 1;
    elseif sum(strcmpi(varargin{j},{'xlabel' 'ylabel' 'title'}))
        aplotargs = {aplotargs{:} varargin{j} varargin{j+1}};
        j = j+1;
    elseif strncmpi(varargin{j},'smooth',3)
        j = j+1;
        smw = varargin{j};
    else
        plotargs = {plotargs{:} varargin{j}};
    end
    j = j+1;
end


if iscell(X)
    allf = {'n'};
    All = X{1};
    if isfield(All,'exptypes')
        for j = 1:length(X)
            allf = union(allf,X{j}.extypes);
        end
    end
    for j = 1:length(X)
        for k = 1:length(allf)
            if isfield(X{j},allf{k})
                xf  = X{j}.(allf{k});
            elseif isfield(X{j},'Stimvals') && isfield(X{j}.Stimvals,allf{k})
                xf = ones(size(X{j}.n)) .* X{j}.Stimvals.(allf{k});
            else
                xf = zeros(size(X{j}.n));
            end
            if j == 1
                All.(allf{k}) =  xf;
            else
                All.(allf{k}) =  [All.(allf{k}) xf];
            end
        end
    end
    for j = 2:length(X)
        All.labels = {All.labels{:} X{j}.labels{:}};
        All.n = [All.n  X{j}.n];
        All.resps = cat(3,All.resps, X{j}.resps);

    end
    PlotLFPpwr(All,varargin{:});
    X = All;
    X.args = varargin;
    return;
end


if isempty(pid)
    pid = 1:size(X.resps,3);
end
if isfield(X,'title') && isempty(gtitle)
    gtitle = X.title;
end
if ~isfield(X,'freqs')
    X.freqs = 1:size(X.resps,1);
end

[F, isnew] = GetFigure('LFPSpectrum');
X.pid = pid;
X.plot.tight = tight;
AddGUI(F, X);


if calcresp
    for j = 1:size(X.resps,3)
        smoothed(:,j) = smooth(X.resps(:,1,j),5,'gauss');
    end
    rvar = std(smoothed,[],2)./mean(smoothed,2);
    [rmax, tmax] = max(rvar);
    x = prctile(rvar,[5 95]);
    crit = x(1) + diff(x) *0.15; %15% of max from baseline
    fid = find(rvar < crit);
    [rmax, tmax] = max(rvar);
    a = find(fid < tmax); %a(end) is last point below crit before peak
    b = find(fid > tmax);
    fid = fid(a(end))+1:fid(b(1));
    baseline = min(smoothed(fid,:),[],2);
    if ~isempty(calcfreq)
        fid = find(X.freqs > calcfreq(1) & X.freqs < calcfreq(2))
    end
    for j = 1:size(X.resps,3)
        if isempty(calcfreq)
            X.gamma(j) = sum(X.resps(fid,:,j)-baseline)./sum(baseline);
        else
            X.gamma(j) = sum(X.resps(fid,:,j));
        end
    end
end
if smw
    for j = 1:size(X.resps,3)
        X.resps(:,1,j) = smooth(X.resps(:,1,j),smw,'gauss');
    end
end
if holdon == 0
    hold off;
end
baseline = min(smooth(squeeze(X.resps)',4,'gauss')',[],2);
for j  = 1:length(pid)
    c = colors{j};
    plot(X.freqs,X.resps(:,1,pid(j)),'-','color',c,plotargs{:});
    hold on;
end
legend(X.labels(pid));
%plot(baseline,'k');
set(gca,'yscale','log',aplotargs{:});
if tight
    axis('tight');
end

if ~isempty(gtitle)
    title(gtitle);
end

if printlabels
    for j = 1:length(X.labels)
        fprintf('%d: %s\n',j,X.labels{j});
    end
end


if ~isempty(explot)
    GetFigure('GammaResp');
    if holdon == 0
        hold off;
    else
        hold on;
    end
    if length(expts) > 1
        for j = 2:length(expts)
            ux = unique(X.(expts{j}));
            uvals{j} = ux;
            for k = 1:length(ux);
                ids{j-1}{k} = find(X.(expts{j}) == ux(k));
            end
            nv(j-1) = length(ux);
            cx{j-1} = 0;
        end
        nx = 0;
        allidx = [];
        for j = 1:prod(nv)
            [cx{:}] = ind2sub(nv,j);
            id = ids{1}{cx{1}};
            for k = 2:length(cx);
                id = intersect(id, ids{k}{cx{k}});
            end
            id = intersect(id,pid);
            id = setdiff(id, allidx);
            if ~isempty(id)
                nx = nx+1;
                allids{nx} = id;
                allidx = [allidx id];
                labels{nx} = '';
                for k = 1:length(cx)
                labels{nx} = sprintf('%s%s=%.2f ',labels{nx},expts{k+1},uvals{k+1}(cx{k}));
                end
            end
        end
    else
        allids{1} = 1:length(X.gamma);
        labels{1} = 'All';
    end
    colors = mycolors;
    for j = 1:length(allids)
        c = j+coloroff;
        plot(X.(explot)(allids{j}),X.gamma(allids{j}),'o-','color',colors{c},...
            'markerfacecolor',colors{c});
        hold on;
    end
    legend(labels);
end


function AddGUI(F, X)
hm = findobj(F,'tag','PlotMenu');
if isempty(hm)
    hm  = uimenu(F,'label','Plot','Tag','PlotMenu');
else
    delete(get(hm,'children'));
end
X.selected = zeros(1,length(X.labels));
X.selected(X.pid) = 1;
setappdata(F,'LFPresps',X);

for j = 1:length(X.labels)
    h = uimenu(hm,'Label',X.labels{j},'callback',{@PlotSpectrum, j});
    if X.selected(j)
        set(h,'checked','on');
    end
end

function PlotSpectrum(a,b,ind)

F = GetFigure(a);
X = getappdata(F,'LFPresps');

onoff = {'off' 'on'};
X.selected(ind) = ~X.selected(ind);
set(a,'checked',onoff{1+X.selected(ind)});
setappdata(F,'LFPresps',X);
hold off;
pid = find(X.selected);
baseline = min(smooth(squeeze(X.resps)',4,'gauss')',[],2);
colors = mycolors;
for j  = 1:length(pid)
    c = colors{j};
    plot(X.freqs,X.resps(:,1,pid(j)),'-','color',c);
    hold on;
end
legend(X.labels(pid));
set(gca,'yscale','log');
if X.plot.tight
    axis('tight');
end
