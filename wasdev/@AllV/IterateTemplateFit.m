function [G, xy] = IterateTemplateFit(DATA, G)j = 1;xc = [0 0];DATA.MeanSpike = AllV.PlotMeanSpike(DATA,'recalc');T{1} = DATA.MeanSpike.ms;nc = size(G.mu,1);    while j < 10 && xc(1,2) < 0.5    xy = AllV.ProjectND(DATA, 4, G);%    [cluster.crit, details] = FindDip(xy(:,1),DATA.energy(1,:));    [cluster.crit, details] = GMDip(xy,DATA.energy(1,:),'label',DATA.idstr);    cluster.sign = details.sign;    if details.sign >= 0        DATA.clid = find(xy(:,1) > cluster.crit(1));        DATA.nid = find(xy(:,1) <= cluster.crit(1));    else        DATA.clid = find(xy(:,1) < cluster.crit(1));        DATA.nid = find(xy(:,1) >= cluster.crit(1));    end    DATA.cluster.neednewtemplate = 1;    DATA.MeanSpike = AllV.PlotMeanSpike(DATA,'recalc');    AllV.TemplatePlot(DATA,'nodip','noplot');    DATA = get(DATA.toplevel,'UserData');    T{j+1} = DATA.MeanSpike.ms;    [G, distance(j),a] = AllV.GMfit(DATA.TemplateScores(:,DATA.tmplspace(1,:)),nc,1);%    G = gmdistribution.fit(DATA.TemplateScores(:,DATA.tmplspace(1,:)),2,'Options',statset('MaxIter',1000));%    D = mahal(G,G.mu);%    distance(j) = sqrt(2./(1./D(1,2)+1./D(2,1)));    xc = corrcoef(T{j+1}(:),T{j}(:));    xcs(j) = xc(1,2);    j = j+1;    end    DATA.xy{1} = xy;    DATA.ndxy = xy;    set(DATA.toplevel,'UserData',DATA);        