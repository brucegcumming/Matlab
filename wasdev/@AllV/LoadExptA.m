function Expt = LoadExptA(DATA, exfile, ei)    Expt = [];    matfile = [];    aargs = {};    if DATA.usealltrials        aargs = {aargs{:} 'usealltrials'};    end    %Loads expt from stadard smr file where one sre has all/many expts    ei = floor(ei); %plain .mat files are not split just because FullV files are    if exist(exfile,'file')        ts = now;        fprintf('LoadingA %s (%s)\n',exfile,AllV.IDStr(DATA));        if ei == 0            load(exfile);        else            [Trials, Expts] = APlaySpkFile(exfile,'noerrs','nospikes',aargs{:});            if length(Expts) == 1                Expt = Expts{1};            elseif length(Expts) == 2 && length(Expts{2}.Trials) > length(Expts{1}.Trials) * 10                Expt = Expts{2};            elseif length(Expts) < ei                return;            else                Expt = Expts{ei};            end        end        if ~isfield(Expt.Header,'expname')            Expt.Header.expname = Expt2Name(Expt);        end        Expt.Header.trialdur = sum([Expt.Trials.dur]);        Expt = FillTrials(Expt,'ed');        Expt = FillTrials(Expt,'st');        [a,b] = fileparts(Expt.Header.Name);        Expt.Header.title = [b '.' Expt.Header.expname];        fprintf('Expt%d: %s %d trials\n',ei,Expt.Header.title,length(Expt.Trials));        mytoc(ts);        if ei > 0        if isfield(Trials,'DataType')            Expt.Header.DataType = Trials.DataType;        end        Expt.Header.preperiod = DATA.preperiod * 10000;        Expt.Header.postperiod = DATA.postperiod * 10000;        if sum([Trials.ExptList.result] ==2) >= 1 && isfield(DATA,'toplevel')            for j = 1:length(Expts)            Expts{j}.Header.trialdur = sum([Expts{j}.Trials.dur]);            Expts{j}.Header.DataType = Trials.DataType;            Expts{j} = FillTrials(Expts{j},'ed');            Expts{j} = FillTrials(Expts{j},'st');            Expts{j}.Header.title = [b '.' Expt.Header.expname];            end            DATA = AllV.mysetappdata(DATA,'Expts',Expts);        end        end    end    