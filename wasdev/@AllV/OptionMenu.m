function OptionMenu(a,b, fcn)    onoff = {'off' 'on'};[DATA, F] = GetDataFromFig(a);qf = fields(DATA.quickcutmode);autofields = fields(DATA.auto);fullvf = fields(DATA.fullvswitchmode);if strmatch(fcn,'plotspikes')    DATA.quickcutmode.(fcn) = ~DATA.quickcutmode.(fcn);    set(a,'checked',onoff{1+DATA.quickcutmode.(fcn)});    set(DATA.toplevel,'UserData',DATA);elseif strmatch(fcn,'plottedprobes')    p = AllV.SelectProbe(DATA.ArrayConfig,DATA.plotspk.probes);    if ~isempty(p)        DATA.plotspk.probes = find(p);        set(DATA.toplevel,'userData',DATA);        AllV.QuickSpks(DATA,1000);    endelseif strmatch(fcn,'labelwithid')    DATA.plot.labelwithid = ~DATA.plot.labelwithid;    set(a,'checked', onoff{1+DATA.plot.labelwithid});    set(DATA.toplevel,'UserData',DATA);elseif strmatch(fcn,'comment')    DATA.currentprobe = AllV.ProbeNumber(DATA);    PlotComments(DATA.datadir,'parent',DATA.toplevel);%    str  = sprintf('E%dP%d',DATA.exptno,AllV.ProbeNumber(DATA));%    GetString(DATA.tag.comments,DATA.toplevel,{@AllV.AddComment, []},'label',str);    return;elseif strmatch(fcn,'keepspikes')    set(F,'Tag','OldSpikes');        AllV.SetFigure(DATA.tag.spikes, DATA,'front');elseif strmatch(fcn,'keepmeanspikes')    id = unique(DATA.clst);    for j = 2:length(id)        ms{j} = AllV.PlotMeanSpike(DATA,'recalc','cluster',j-1);    end    figure;    voff = DATA.voffset - DATA.voffset(DATA.probe(1));    for j = 2:length(id)        for k = DATA.chspk        plot(ms{j}.ms(k,:)+voff(k),'color',DATA.colors{j},'linewidth',2);        hold on;        end    end    dv = mean(diff(voff(DATA.chspk)))/10;    for k = DATA.chspk        text(1,voff(k)+dv,sprintf('E%dP%d',DATA.exptno,k),'fontsize',DATA.gui.fontsize(1));    endelseif strmatch(fcn,'spoolspikes')    AllV.SetFigure(DATA.tag.spikes, DATA,'front');    AllV.SpoolSpikes(DATA); %ellipse    figure(DATA.toplevel);elseif strmatch(fcn,'autoopt')    flag = get(a,'tag');    DATA.auto.(flag) = ~DATA.auto.(flag);    set(a,'checked',onoff{1+DATA.auto.(flag)});    DATA.checkclusters = DATA.auto.checkcluster;    set(DATA.toplevel,'UserData',DATA);elseif strmatch(fcn,'checkclusters')    DATA.checkclusters = ~DATA.checkclusters;    set(a,'checked',onoff{1+DATA.checkclusters});    set(DATA.toplevel,'UserData',DATA);elseif strmatch(fcn,'quickopts')    flag = get(a,'tag');    DATA.quicksave.(flag) = ~DATA.quicksave.(flag);    set(a,'checked',onoff{1+DATA.quicksave.(flag)});    set(DATA.toplevel,'UserData',DATA);elseif strmatch(fcn,qf)    if ~strcmp(fcn,'quickest')        DATA.quickcutmode.quickest = 0;    end    DATA.quickcutmode.(fcn) = ~DATA.quickcutmode.(fcn);    if DATA.quickcutmode.quickest == 1        for j = 1:length(qf)            DATA.quickcutmode.(qf{j}) = 0;        end        DATA.quickcutmode.quickest = 1;    end            c = get(get(a,'parent'),'children');    tags = get(c,'Tag');    for j = 2:length(c)        k = strmatch(get(c(j),'Tag'),qf);        set(c(j),'checked',onoff{1+DATA.quickcutmode.(qf{k})});    end    set(DATA.toplevel,'UserData',DATA);elseif strmatch(fcn,fullvf)    DATA.fullvswitchmode.(fcn) = ~DATA.fullvswitchmode.(fcn);    AllV.SetMenuChecks(get(a,'parent'),DATA.fullvswitchmode);    set(DATA.toplevel,'UserData',DATA);elseif regexp(fcn,'[1-9]probefullv')    DATA.plotspk.nfullvprobes = sscanf(fcn,'%d');    set(DATA.toplevel,'UserData',DATA);elseif strmatch(fcn,{'meansummary'})    AllV.PlotAllProbes(DATA, 'spkmean');elseif strmatch(fcn,{'xysummary'})    DATA = AllV.LoadTrigTimes(DATA,1:DATA.nprobes,'savexy');    AllV.SpikeDraw(DATA,[],  'allxy');    set(DATA.toplevel,'UserData',DATA);elseif strmatch(fcn,{'spksummary'})    AllV.SpikeDraw(DATA,[],  'allquickspks');    set(DATA.toplevel,'UserData',DATA);elseif strmatch(fcn,{'plotsummary'})    DATA = AllV.LoadTrigTimes(DATA,1:DATA.nprobes,'savexy');    AllV.SpikeDraw(DATA,[],  'allquickspks');    AllV.SpikeDraw(DATA,[],  'allxy');    set(DATA.toplevel,'UserData',DATA);elseif strmatch(fcn,{'nextfullv'})    AllV.AllVPcs(DATA.toplevel, 'newexpt', DATA.exptno+1, DATA.probeswitchmode);elseif strmatch(fcn,{'prevfullv'})    AllV.AllVPcs(DATA.toplevel, 'newexpt', DATA.exptno-1, DATA.probeswitchmode);elseif strmatch(fcn,{'newfullv'})    s = inputdlg({'New Expt #' 'Probe #'},'New Expt to load',1,{num2str(DATA.exptno+1) num2str(DATA.probe(1))});    if isempty(s)        return;    end    eid = str2num(s{1});    pid = str2num(s{2});    args{1} = 'tchan';    args{2} = pid;    args{3} = DATA.probeswitchmode;    if DATA.fullvswitchmode.summary        args = {args{:} 'summary'};    end       AllV.AllVPcs(DATA.toplevel, 'newexpt', eid, args{:});elseif strmatch(fcn,{'profiling'})    DATA.profiling = ~DATA.profiling;    set(a,'checked',onoff{1+DATA.profiling});    DATA.profiling = 2 * DATA.profiling; %1 = just my timing    set(DATA.toplevel,'UserData',DATA);elseif strmatch(fcn,{'retrigger'})    args = AllV.RetriggerDialog(a,b,'popup');    fprintf('Retriggering\n');    if ~isempty(args)        AllV.AllVPcs(DATA.toplevel,'tchan',AllV.ProbeNumber(DATA), 'needfullv', args{:});    endelseif strmatch(fcn,{'showfullv' 'includeprepost'})    DATA.plotspk.(fcn) = ~DATA.plotspk.(fcn);    set(a,'checked',onoff{DATA.plotspk.(fcn)+1});    set(DATA.toplevel,'UserData',DATA);endfigure(DATA.toplevel);