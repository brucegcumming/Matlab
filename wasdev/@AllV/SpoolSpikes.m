function SpoolSpikes(DATA, varargin)        j = 1;    while j <= length(varargin)        if strncmpi(varargin{j},'front',3)            AllV.SetFigure(DATA.tag.spikes, DATA,'front');        end                    j = j+1;    end        if ~isfield(DATA,'plotcsd');        DATA.plotcsd = 0;    endDATA.stopspool = 0;if ~isfield(DATA.Expt,'Trials')    DATA.plotspk.bytrial = 0;endAllV.SetTrialList(DATA);AllVoltages = AllV.mygetappdata(DATA,'AllVoltages');spklist = 1:DATA.spksperview;%only do this for probes that will be used - it can take a long timeif DATA.plotspk.showfullv;    usedprobes = union(DATA.plotspk.probes, AllV.UseProbeList(DATA,DATA.plotspk.nfullvprobes));else    usedprobes = DATA.plotspk.probes;endif DATA.plotcsd    for j = usedprobes        AllCSD = AllV.GetCSD(DATA,DATA.plotcsd);        maxV(j,:,:) = max(max(AllCSD(j,:,:),[],3),[],2);        minV(j,:,:) = min(min(AllCSD(j,:,:),[],3),[],2);        voffset = cumsum(max(abs([maxV minV]),[],2));    endelse    [voffset, minV, maxV] = CalcVoffset(AllVoltages,DATA.plotspk.probes);endDATA.voffset(1:length(voffset)) = voffset;DATA.spkyrange(1) = min(DATA.voffset(DATA.plotspk.probes)-DATA.voffset(DATA.probe(1))) + minV(min(DATA.plotspk.probes));DATA.spkyrange(2) = max(DATA.voffset(DATA.plotspk.probes)-DATA.voffset(DATA.probe(1))) + maxV(max(DATA.plotspk.probes));set(DATA.toplevel,'UserData',DATA);go = 1;nt = 0;if DATA.plotspk.bytrial && isfield(DATA.Expt,'Trials')    id = find([DATA.Expt.Trials.TrialStart] > DATA.t(DATA.uid(1)).*10000);    if length(id)        nt = id(1)-1;    else        nt = 0;    endendif isempty(DATA.restricttimerange)    maxtime = NaN;    mintime = NaN;else    maxtime = DATA.restricttimerange(2) * 10000;    mintime = DATA.restricttimerange(1) * 10000;endstopobj = findobj(gcf,'tag','StopSpool');h = NaN;while (isempty(spklist) || spklist(end) < DATA.nevents) && go    if DATA.plotspk.bytrial        nt = nt+1;        spklist = find(DATA.t .*10000 > DATA.Expt.Trials(nt).Start(1) & DATA.t.*10000 < DATA.Expt.Trials(nt).End(end));        if nt >= length(DATA.Expt.Trials) || DATA.Expt.Trials(nt).Start(1) > maxtime            go = 0;        elseif DATA.Expt.Trials(nt).Start(1) < mintime            go = 2;        else            go = 1;        end    else        spklist = spklist + DATA.spksperview;    end    if go == 1    DATA.currenttrial = nt;    h = AllV.PlotSpikes(DATA,spklist,'fix',DATA.spkyrange);    drawnow;    DATA = get(DATA.toplevel,'UserDATA');    end    spstop = get(stopobj,'value');%    set(th    if DATA.stopspool || spstop        go = 0;        DATA.spklst = spklist;    endendset(stopobj,'value',0);D = get(gcf,'UserData');D.plottype = 'SpoolSpikes';set(gcf,'UserData',D);DATA.currenttrial = nt;DATA.stopspool = 0;if ishandle(h)AllV.AddLineContextMenu(DATA, h);DATA = AllV.AddAxisContextMenu(DATA, gca);endset(DATA.toplevel,'UserData',DATA);